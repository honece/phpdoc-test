1709766986
waR3U4bTeM%3A39788fa607b90c855af07c1b8f0887fa-6dac94f657aab7c202434e3e9eb75c7d
s:1141540:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"6dac94f657aab7c202434e3e9eb75c7d";s:39:" phpDocumentor\Reflection\Php\File name";s:7:"see.php";s:39:" phpDocumentor\Reflection\Php\File path";s:17:"tag/basic/see.php";s:41:" phpDocumentor\Reflection\Php\File source";s:983:"<?php
namespace Error;

/**
 * 这是return标签示例
 * 
 * 此标签用于链接到文档内的任何元素，也可以给指定的{@see https://www.ietf.org/rfc/rfc2396.txt <URI>}
 * @see SeeChild->method()
 */
class SeeFather
{
    /**
     * 链接到同一类的示例，输出<u>Father:：parent_method()</u>
     * @see parent_method()
     */
    var $foo = 3;

    /**
     * 子类继承此方法。
     * 常量或类名的单词示例，在本例中为类名
     * @see SeeChild
     * @see SeeChild::$foo
     */
    function parent_method()
    {
        if ($this->foo == 9)
            die;
    }
}
/**
 * 这个类扩展了Father
 * 链接到常量以及将多个元素放在同一行的示例
 * @see SeeFather
 * @see \TEST_CONST
 */
class SeeChild extends SeeFather
{
    /**
     * 查看在父类中的方法 {@link Father}
     * @see parent_method()
     */
    var $foo = 9;
}

define("TEST_CONST", "foobar");";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:1:{s:6:"\Error";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:6:"\Error";s:36:" phpDocumentor\Reflection\Fqsen name";s:5:"Error";}}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:1:{s:11:"\TEST_CONST";O:37:"phpDocumentor\Reflection\Php\Constant":7:{s:44:" phpDocumentor\Reflection\Php\Constant fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:11:"\TEST_CONST";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"TEST_CONST";}s:47:" phpDocumentor\Reflection\Php\Constant docBlock";N;s:44:" phpDocumentor\Reflection\Php\Constant value";s:8:""foobar"";s:47:" phpDocumentor\Reflection\Php\Constant location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:45;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:49:" phpDocumentor\Reflection\Php\Constant visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:44:" phpDocumentor\Reflection\Php\Constant final";b:0;s:47:" phpDocumentor\Reflection\Php\Constant metadata";a:0:{}}}s:42:" phpDocumentor\Reflection\Php\File classes";a:2:{s:16:"\Error\SeeFather";O:35:"phpDocumentor\Reflection\Php\Class_":12:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:16:"\Error\SeeFather";s:36:" phpDocumentor\Reflection\Fqsen name";s:9:"SeeFather";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:24:"这是return标签示例";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:76:"此标签用于链接到文档内的任何元素，也可以给指定的%1$s";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:1:{i:0;O:42:"phpDocumentor\Reflection\DocBlock\Tags\See":3:{s:7:" * name";s:3:"see";s:9:" * refers";O:52:"phpDocumentor\Reflection\DocBlock\Tags\Reference\Url":1:{s:57:" phpDocumentor\Reflection\DocBlock\Tags\Reference\Url uri";s:36:"https://www.ietf.org/rfc/rfc2396.txt";}s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:5:"<URI>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:49:"phpDocumentor\Reflection\DocBlock\Tags\InvalidTag":3:{s:55:" phpDocumentor\Reflection\DocBlock\Tags\InvalidTag name";s:3:"see";s:55:" phpDocumentor\Reflection\DocBlock\Tags\InvalidTag body";s:18:"SeeChild->method()";s:60:" phpDocumentor\Reflection\DocBlock\Tags\InvalidTag throwable";O:24:"InvalidArgumentException":8:{s:10:" * message";s:49:""\Error\SeeChild->method()" is not a valid Fqsen.";s:17:" Exception string";s:0:"";s:7:" * code";i:0;s:7:" * file";s:120:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection-common/src/Fqsen.php";s:7:" * line";i:57;s:16:" Exception trace";a:51:{i:0;a:6:{s:4:"file";s:124:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/type-resolver/src/FqsenResolver.php";s:4:"line";i:73;s:8:"function";s:11:"__construct";s:5:"class";s:30:"phpDocumentor\Reflection\Fqsen";s:4:"type";s:2:"->";s:4:"args";a:1:{i:0;s:25:"\Error\SeeChild->method()";}}i:1;a:6:{s:4:"file";s:124:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/type-resolver/src/FqsenResolver.php";s:4:"line";i:43;s:8:"function";s:35:"resolvePartialStructuralElementName";s:5:"class";s:38:"phpDocumentor\Reflection\FqsenResolver";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:18:"SeeChild->method()";i:1;s:46:"object(phpDocumentor\Reflection\Types\Context)";}}i:2;a:6:{s:4:"file";s:134:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection-docblock/src/DocBlock/Tags/See.php";s:4:"line";i:74;s:8:"function";s:7:"resolve";s:5:"class";s:38:"phpDocumentor\Reflection\FqsenResolver";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:18:"SeeChild->method()";i:1;s:46:"object(phpDocumentor\Reflection\Types\Context)";}}i:3;a:6:{s:4:"file";s:134:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection-docblock/src/DocBlock/Tags/See.php";s:4:"line";i:67;s:8:"function";s:12:"resolveFqsen";s:5:"class";s:42:"phpDocumentor\Reflection\DocBlock\Tags\See";s:4:"type";s:2:"::";s:4:"args";a:3:{i:0;s:18:"SeeChild->method()";i:1;s:46:"object(phpDocumentor\Reflection\FqsenResolver)";i:2;s:46:"object(phpDocumentor\Reflection\Types\Context)";}}i:4;a:6:{s:4:"file";s:144:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection-docblock/src/DocBlock/StandardTagFactory.php";s:4:"line";i:218;s:8:"function";s:6:"create";s:5:"class";s:42:"phpDocumentor\Reflection\DocBlock\Tags\See";s:4:"type";s:2:"::";s:4:"args";a:4:{i:0;s:18:"SeeChild->method()";i:1;s:46:"object(phpDocumentor\Reflection\FqsenResolver)";i:2;s:60:"object(phpDocumentor\Reflection\DocBlock\DescriptionFactory)";i:3;s:46:"object(phpDocumentor\Reflection\Types\Context)";}}i:5;a:6:{s:4:"file";s:144:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection-docblock/src/DocBlock/StandardTagFactory.php";s:4:"line";i:149;s:8:"function";s:9:"createTag";s:5:"class";s:52:"phpDocumentor\Reflection\DocBlock\StandardTagFactory";s:4:"type";s:2:"->";s:4:"args";a:3:{i:0;s:18:"SeeChild->method()";i:1;s:3:"see";i:2;s:46:"object(phpDocumentor\Reflection\Types\Context)";}}i:6;a:6:{s:4:"file";s:132:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection-docblock/src/DocBlockFactory.php";s:4:"line";i:245;s:8:"function";s:6:"create";s:5:"class";s:52:"phpDocumentor\Reflection\DocBlock\StandardTagFactory";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:23:"@see SeeChild->method()";i:1;s:46:"object(phpDocumentor\Reflection\Types\Context)";}}i:7;a:6:{s:4:"file";s:132:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection-docblock/src/DocBlockFactory.php";s:4:"line";i:105;s:8:"function";s:13:"parseTagBlock";s:5:"class";s:40:"phpDocumentor\Reflection\DocBlockFactory";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:23:"@see SeeChild->method()";i:1;s:46:"object(phpDocumentor\Reflection\Types\Context)";}}i:8;a:6:{s:4:"file";s:160:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Php/Factory/AbstractFactory.php";s:4:"line";i:78;s:8:"function";s:6:"create";s:5:"class";s:40:"phpDocumentor\Reflection\DocBlockFactory";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:196:"/**
 * 这是return标签示例
 * 
 * 此标签用于链接到文档内的任何元素，也可以给指定的{@see https://www.ietf.org/rfc/rfc2396.txt <URI>}
 * @see SeeChild->method()
 */";i:1;s:46:"object(phpDocumentor\Reflection\Types\Context)";}}i:9;a:6:{s:4:"file";s:151:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Php/Factory/Class_.php";s:4:"line";i:47;s:8:"function";s:14:"createDocBlock";s:5:"class";s:52:"phpDocumentor\Reflection\Php\Factory\AbstractFactory";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:29:"object(PhpParser\Comment\Doc)";i:1;s:46:"object(phpDocumentor\Reflection\Types\Context)";}}i:10;a:6:{s:4:"file";s:160:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Php/Factory/AbstractFactory.php";s:4:"line";i:59;s:8:"function";s:8:"doCreate";s:5:"class";s:43:"phpDocumentor\Reflection\Php\Factory\Class_";s:4:"type";s:2:"->";s:4:"args";a:3:{i:0;s:57:"object(phpDocumentor\Reflection\Php\Factory\ContextStack)";i:1;s:34:"object(PhpParser\Node\Stmt\Class_)";i:2;s:61:"object(phpDocumentor\Reflection\Php\ProjectFactoryStrategies)";}}i:11;a:6:{s:4:"file";s:155:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Php/Factory/Namespace_.php";s:4:"line";i:49;s:8:"function";s:6:"create";s:5:"class";s:52:"phpDocumentor\Reflection\Php\Factory\AbstractFactory";s:4:"type";s:2:"->";s:4:"args";a:3:{i:0;s:57:"object(phpDocumentor\Reflection\Php\Factory\ContextStack)";i:1;s:34:"object(PhpParser\Node\Stmt\Class_)";i:2;s:61:"object(phpDocumentor\Reflection\Php\ProjectFactoryStrategies)";}}i:12;a:6:{s:4:"file";s:149:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Php/Factory/File.php";s:4:"line";i:135;s:8:"function";s:6:"create";s:5:"class";s:47:"phpDocumentor\Reflection\Php\Factory\Namespace_";s:4:"type";s:2:"->";s:4:"args";a:3:{i:0;s:57:"object(phpDocumentor\Reflection\Php\Factory\ContextStack)";i:1;s:38:"object(PhpParser\Node\Stmt\Namespace_)";i:2;s:61:"object(phpDocumentor\Reflection\Php\ProjectFactoryStrategies)";}}i:13;a:6:{s:4:"file";s:149:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Php/Factory/File.php";s:4:"line";i:120;s:8:"function";s:14:"createElements";s:5:"class";s:41:"phpDocumentor\Reflection\Php\Factory\File";s:4:"type";s:2:"->";s:4:"args";a:3:{i:0;s:57:"object(phpDocumentor\Reflection\Php\Factory\ContextStack)";i:1;a:1:{i:0;s:38:"object(PhpParser\Node\Stmt\Namespace_)";}i:2;s:61:"object(phpDocumentor\Reflection\Php\ProjectFactoryStrategies)";}}i:14;a:6:{s:4:"file";s:149:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Php/Factory/File.php";s:4:"line";i:71;s:8:"function";s:10:"createFile";s:5:"class";s:41:"phpDocumentor\Reflection\Php\Factory\File";s:4:"type";s:2:"->";s:4:"args";a:1:{i:0;s:63:"object(phpDocumentor\Reflection\Php\Factory\File\CreateCommand)";}}i:15;a:6:{s:4:"file";s:128:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/src/phpDocumentor/Parser/Middleware/ReEncodingMiddleware.php";s:4:"line";i:46;s:8:"function";s:46:"phpDocumentor\Reflection\Php\Factory\{closure}";s:5:"class";s:41:"phpDocumentor\Reflection\Php\Factory\File";s:4:"type";s:2:"->";s:4:"args";a:1:{i:0;s:63:"object(phpDocumentor\Reflection\Php\Factory\File\CreateCommand)";}}i:16;a:6:{s:4:"file";s:156:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Middleware/ChainFactory.php";s:4:"line";i:43;s:8:"function";s:7:"execute";s:5:"class";s:52:"phpDocumentor\Parser\Middleware\ReEncodingMiddleware";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:63:"object(phpDocumentor\Reflection\Php\Factory\File\CreateCommand)";i:1;s:165:"(Closure at phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Php/Factory/File.php:70)";}}i:17;a:6:{s:4:"file";s:131:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/src/phpDocumentor/Parser/Middleware/ErrorHandlingMiddleware.php";s:4:"line";i:46;s:8:"function";s:45:"phpDocumentor\Reflection\Middleware\{closure}";s:5:"class";s:48:"phpDocumentor\Reflection\Middleware\ChainFactory";s:4:"type";s:2:"::";s:4:"args";a:1:{i:0;s:63:"object(phpDocumentor\Reflection\Php\Factory\File\CreateCommand)";}}i:18;a:6:{s:4:"file";s:156:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Middleware/ChainFactory.php";s:4:"line";i:43;s:8:"function";s:7:"execute";s:5:"class";s:55:"phpDocumentor\Parser\Middleware\ErrorHandlingMiddleware";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:63:"object(phpDocumentor\Reflection\Php\Factory\File\CreateCommand)";i:1;s:172:"(Closure at phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Middleware/ChainFactory.php:42)";}}i:19;a:6:{s:4:"file";s:123:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/src/phpDocumentor/Parser/Middleware/CacheMiddleware.php";s:4:"line";i:66;s:8:"function";s:45:"phpDocumentor\Reflection\Middleware\{closure}";s:5:"class";s:48:"phpDocumentor\Reflection\Middleware\ChainFactory";s:4:"type";s:2:"::";s:4:"args";a:1:{i:0;s:63:"object(phpDocumentor\Reflection\Php\Factory\File\CreateCommand)";}}i:20;a:6:{s:4:"file";s:105:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/symfony/cache/LockRegistry.php";s:4:"line";i:93;s:8:"function";s:41:"phpDocumentor\Parser\Middleware\{closure}";s:5:"class";s:47:"phpDocumentor\Parser\Middleware\CacheMiddleware";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:41:"object(Symfony\Component\Cache\CacheItem)";i:1;b:1;}}i:21;a:6:{s:4:"file";s:114:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/symfony/cache/Traits/ContractsTrait.php";s:4:"line";i:88;s:8:"function";s:7:"compute";s:5:"class";s:36:"Symfony\Component\Cache\LockRegistry";s:4:"type";s:2:"::";s:4:"args";a:6:{i:0;s:139:"(Closure at phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/src/phpDocumentor/Parser/Middleware/CacheMiddleware.php:64)";i:1;s:41:"object(Symfony\Component\Cache\CacheItem)";i:2;b:1;i:3;s:52:"object(phpDocumentor\Parser\Cache\FilesystemAdapter)";i:4;s:130:"(Closure at phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/symfony/cache/Traits/ContractsTrait.php:86)";i:5;N;}}i:22;a:6:{s:4:"file";s:113:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/symfony/contracts/Cache/CacheTrait.php";s:4:"line";i:72;s:8:"function";s:40:"Symfony\Component\Cache\Traits\{closure}";s:5:"class";s:47:"Symfony\Component\Cache\Adapter\AbstractAdapter";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:41:"object(Symfony\Component\Cache\CacheItem)";i:1;b:1;}}i:23;a:6:{s:4:"file";s:114:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/symfony/cache/Traits/ContractsTrait.php";s:4:"line";i:95;s:8:"function";s:5:"doGet";s:5:"class";s:47:"Symfony\Component\Cache\Adapter\AbstractAdapter";s:4:"type";s:2:"->";s:4:"args";a:6:{i:0;s:52:"object(phpDocumentor\Parser\Cache\FilesystemAdapter)";i:1;s:65:"39788fa607b90c855af07c1b8f0887fa-6dac94f657aab7c202434e3e9eb75c7d";i:2;s:130:"(Closure at phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/symfony/cache/Traits/ContractsTrait.php:73)";i:3;d:1;i:4;a:0:{}i:5;N;}}i:24;a:6:{s:4:"file";s:113:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/symfony/contracts/Cache/CacheTrait.php";s:4:"line";i:35;s:8:"function";s:5:"doGet";s:5:"class";s:47:"Symfony\Component\Cache\Adapter\AbstractAdapter";s:4:"type";s:2:"->";s:4:"args";a:5:{i:0;s:52:"object(phpDocumentor\Parser\Cache\FilesystemAdapter)";i:1;s:65:"39788fa607b90c855af07c1b8f0887fa-6dac94f657aab7c202434e3e9eb75c7d";i:2;s:139:"(Closure at phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/src/phpDocumentor/Parser/Middleware/CacheMiddleware.php:64)";i:3;d:1;i:4;a:0:{}}}i:25;a:6:{s:4:"file";s:123:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/src/phpDocumentor/Parser/Middleware/CacheMiddleware.php";s:4:"line";i:69;s:8:"function";s:3:"get";s:5:"class";s:47:"Symfony\Component\Cache\Adapter\AbstractAdapter";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:65:"39788fa607b90c855af07c1b8f0887fa-6dac94f657aab7c202434e3e9eb75c7d";i:1;s:139:"(Closure at phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/src/phpDocumentor/Parser/Middleware/CacheMiddleware.php:64)";}}i:26;a:6:{s:4:"file";s:156:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Middleware/ChainFactory.php";s:4:"line";i:43;s:8:"function";s:7:"execute";s:5:"class";s:47:"phpDocumentor\Parser\Middleware\CacheMiddleware";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:63:"object(phpDocumentor\Reflection\Php\Factory\File\CreateCommand)";i:1;s:172:"(Closure at phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Middleware/ChainFactory.php:42)";}}i:27;a:6:{s:4:"file";s:126:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/src/phpDocumentor/Parser/Middleware/EmittingMiddleware.php";s:4:"line";i:38;s:8:"function";s:45:"phpDocumentor\Reflection\Middleware\{closure}";s:5:"class";s:48:"phpDocumentor\Reflection\Middleware\ChainFactory";s:4:"type";s:2:"::";s:4:"args";a:1:{i:0;s:63:"object(phpDocumentor\Reflection\Php\Factory\File\CreateCommand)";}}i:28;a:6:{s:4:"file";s:156:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Middleware/ChainFactory.php";s:4:"line";i:43;s:8:"function";s:7:"execute";s:5:"class";s:50:"phpDocumentor\Parser\Middleware\EmittingMiddleware";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:63:"object(phpDocumentor\Reflection\Php\Factory\File\CreateCommand)";i:1;s:172:"(Closure at phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Middleware/ChainFactory.php:42)";}}i:29;a:6:{s:4:"file";s:127:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/src/phpDocumentor/Parser/Middleware/StopwatchMiddleware.php";s:4:"line";i:50;s:8:"function";s:45:"phpDocumentor\Reflection\Middleware\{closure}";s:5:"class";s:48:"phpDocumentor\Reflection\Middleware\ChainFactory";s:4:"type";s:2:"::";s:4:"args";a:1:{i:0;s:63:"object(phpDocumentor\Reflection\Php\Factory\File\CreateCommand)";}}i:30;a:6:{s:4:"file";s:156:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Middleware/ChainFactory.php";s:4:"line";i:43;s:8:"function";s:7:"execute";s:5:"class";s:51:"phpDocumentor\Parser\Middleware\StopwatchMiddleware";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:63:"object(phpDocumentor\Reflection\Php\Factory\File\CreateCommand)";i:1;s:172:"(Closure at phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Middleware/ChainFactory.php:42)";}}i:31;a:6:{s:4:"file";s:149:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Php/Factory/File.php";s:4:"line";i:97;s:8:"function";s:45:"phpDocumentor\Reflection\Middleware\{closure}";s:5:"class";s:48:"phpDocumentor\Reflection\Middleware\ChainFactory";s:4:"type";s:2:"::";s:4:"args";a:1:{i:0;s:63:"object(phpDocumentor\Reflection\Php\Factory\File\CreateCommand)";}}i:32;a:6:{s:4:"file";s:160:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Php/Factory/AbstractFactory.php";s:4:"line";i:59;s:8:"function";s:8:"doCreate";s:5:"class";s:41:"phpDocumentor\Reflection\Php\Factory\File";s:4:"type";s:2:"->";s:4:"args";a:3:{i:0;s:57:"object(phpDocumentor\Reflection\Php\Factory\ContextStack)";i:1;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:2;s:61:"object(phpDocumentor\Reflection\Php\ProjectFactoryStrategies)";}}i:33;a:6:{s:4:"file";s:151:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Php/ProjectFactory.php";s:4:"line";i:110;s:8:"function";s:6:"create";s:5:"class";s:52:"phpDocumentor\Reflection\Php\Factory\AbstractFactory";s:4:"type";s:2:"->";s:4:"args";a:3:{i:0;s:57:"object(phpDocumentor\Reflection\Php\Factory\ContextStack)";i:1;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:2;s:61:"object(phpDocumentor\Reflection\Php\ProjectFactoryStrategies)";}}i:34;a:6:{s:4:"file";s:103:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/src/phpDocumentor/Parser/Parser.php";s:4:"line";i:205;s:8:"function";s:6:"create";s:5:"class";s:43:"phpDocumentor\Reflection\Php\ProjectFactory";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:16:"Untitled project";i:1;a:36:{i:0;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:1;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:2;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:3;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:4;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:5;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:6;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:7;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:8;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:9;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:10;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:11;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:12;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:13;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:14;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:15;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:16;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:17;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:18;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:19;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:20;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:21;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:22;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:23;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:24;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:25;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:26;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:27;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:28;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:29;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:30;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:31;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:32;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:33;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:34;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:35;s:42:"object(phpDocumentor\Parser\FlySystemFile)";}}}i:35;a:6:{s:4:"file";s:122:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/src/phpDocumentor/Pipeline/Stage/Parser/ParseFiles.php";s:4:"line";i:62;s:8:"function";s:5:"parse";s:5:"class";s:27:"phpDocumentor\Parser\Parser";s:4:"type";s:2:"->";s:4:"args";a:1:{i:0;a:36:{i:0;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:1;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:2;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:3;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:4;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:5;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:6;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:7;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:8;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:9;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:10;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:11;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:12;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:13;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:14;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:15;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:16;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:17;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:18;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:19;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:20;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:21;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:22;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:23;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:24;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:25;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:26;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:27;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:28;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:29;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:30;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:31;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:32;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:33;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:34;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:35;s:42:"object(phpDocumentor\Parser\FlySystemFile)";}}}i:36;a:6:{s:4:"file";s:122:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/league/pipeline/src/FingersCrossedProcessor.php";s:4:"line";i:11;s:8:"function";s:8:"__invoke";s:5:"class";s:46:"phpDocumentor\Pipeline\Stage\Parser\ParseFiles";s:4:"type";s:2:"->";s:4:"args";a:1:{i:0;s:51:"object(phpDocumentor\Pipeline\Stage\Parser\Payload)";}}i:37;a:6:{s:4:"file";s:107:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/league/pipeline/src/Pipeline.php";s:4:"line";i:34;s:8:"function";s:7:"process";s:5:"class";s:39:"League\Pipeline\FingersCrossedProcessor";s:4:"type";s:2:"->";s:4:"args";a:10:{i:0;s:51:"object(phpDocumentor\Pipeline\Stage\Parser\Payload)";i:1;s:68:"object(phpDocumentor\Pipeline\Stage\Parser\TransformToParserPayload)";i:2;s:56:"object(phpDocumentor\Pipeline\Stage\Parser\CollectFiles)";i:3;s:62:"object(phpDocumentor\Pipeline\Stage\Cache\GarbageCollectCache)";i:4;s:73:"object(phpDocumentor\Pipeline\Stage\Cache\LoadProjectDescriptorFromCache)";i:5;s:62:"object(phpDocumentor\Pipeline\Stage\Cache\LoadGuidesFromCache)";i:6;s:54:"object(phpDocumentor\Pipeline\Stage\Parser\ParseFiles)";i:7;s:55:"object(phpDocumentor\Pipeline\Stage\Parser\ParseGuides)";i:8;s:72:"object(phpDocumentor\Pipeline\Stage\Cache\StoreProjectDescriptorToCache)";i:9;s:61:"object(phpDocumentor\Pipeline\Stage\Cache\StoreGuidesToCache)";}}i:38;a:6:{s:4:"file";s:107:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/league/pipeline/src/Pipeline.php";s:4:"line";i:39;s:8:"function";s:7:"process";s:5:"class";s:24:"League\Pipeline\Pipeline";s:4:"type";s:2:"->";s:4:"args";a:1:{i:0;s:44:"object(phpDocumentor\Pipeline\Stage\Payload)";}}i:39;a:6:{s:4:"file";s:122:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/league/pipeline/src/FingersCrossedProcessor.php";s:4:"line";i:11;s:8:"function";s:8:"__invoke";s:5:"class";s:24:"League\Pipeline\Pipeline";s:4:"type";s:2:"->";s:4:"args";a:1:{i:0;s:44:"object(phpDocumentor\Pipeline\Stage\Payload)";}}i:40;a:6:{s:4:"file";s:107:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/league/pipeline/src/Pipeline.php";s:4:"line";i:34;s:8:"function";s:7:"process";s:5:"class";s:39:"League\Pipeline\FingersCrossedProcessor";s:4:"type";s:2:"->";s:4:"args";a:5:{i:0;s:44:"object(phpDocumentor\Pipeline\Stage\Payload)";i:1;s:32:"object(League\Pipeline\Pipeline)";i:2;s:32:"object(League\Pipeline\Pipeline)";i:3;s:32:"object(League\Pipeline\Pipeline)";i:4;s:32:"object(League\Pipeline\Pipeline)";}}i:41;a:6:{s:4:"file";s:107:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/league/pipeline/src/Pipeline.php";s:4:"line";i:39;s:8:"function";s:7:"process";s:5:"class";s:24:"League\Pipeline\Pipeline";s:4:"type";s:2:"->";s:4:"args";a:1:{i:0;a:32:{s:6:"target";N;s:12:"cache-folder";N;s:8:"filename";a:0:{}s:9:"directory";a:0:{}s:8:"encoding";N;s:10:"extensions";a:0:{}s:6:"ignore";a:0:{}s:11:"ignore-tags";a:0:{}s:6:"hidden";b:0;s:15:"ignore-symlinks";b:0;s:7:"markers";a:0:{}s:5:"title";N;s:5:"force";b:0;s:8:"validate";b:0;s:10:"visibility";a:0:{}s:18:"defaultpackagename";N;s:10:"sourcecode";b:0;s:8:"template";a:0:{}s:12:"examples-dir";N;s:7:"setting";a:0:{}s:13:"list-settings";b:0;s:12:"parseprivate";b:0;s:4:"help";b:0;s:5:"quiet";b:0;s:7:"verbose";b:0;s:7:"version";b:0;s:4:"ansi";b:0;s:14:"no-interaction";b:0;s:6:"config";N;s:3:"log";N;s:3:"env";s:4:"prod";s:8:"no-debug";b:0;}}}i:42;a:6:{s:4:"file";s:124:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/src/phpDocumentor/Console/Command/Project/RunCommand.php";s:4:"line";i:290;s:8:"function";s:8:"__invoke";s:5:"class";s:24:"League\Pipeline\Pipeline";s:4:"type";s:2:"->";s:4:"args";a:1:{i:0;a:32:{s:6:"target";N;s:12:"cache-folder";N;s:8:"filename";a:0:{}s:9:"directory";a:0:{}s:8:"encoding";N;s:10:"extensions";a:0:{}s:6:"ignore";a:0:{}s:11:"ignore-tags";a:0:{}s:6:"hidden";b:0;s:15:"ignore-symlinks";b:0;s:7:"markers";a:0:{}s:5:"title";N;s:5:"force";b:0;s:8:"validate";b:0;s:10:"visibility";a:0:{}s:18:"defaultpackagename";N;s:10:"sourcecode";b:0;s:8:"template";a:0:{}s:12:"examples-dir";N;s:7:"setting";a:0:{}s:13:"list-settings";b:0;s:12:"parseprivate";b:0;s:4:"help";b:0;s:5:"quiet";b:0;s:7:"verbose";b:0;s:7:"version";b:0;s:4:"ansi";b:0;s:14:"no-interaction";b:0;s:6:"config";N;s:3:"log";N;s:3:"env";s:4:"prod";s:8:"no-debug";b:0;}}}i:43;a:6:{s:4:"file";s:110:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/symfony/console/Command/Command.php";s:4:"line";i:299;s:8:"function";s:7:"execute";s:5:"class";s:48:"phpDocumentor\Console\Command\Project\RunCommand";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:49:"object(Symfony\Component\Console\Input\ArgvInput)";i:1;s:54:"object(Symfony\Component\Console\Output\ConsoleOutput)";}}i:44;a:6:{s:4:"file";s:106:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/symfony/console/Application.php";s:4:"line";i:996;s:8:"function";s:3:"run";s:5:"class";s:41:"Symfony\Component\Console\Command\Command";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:49:"object(Symfony\Component\Console\Input\ArgvInput)";i:1;s:54:"object(Symfony\Component\Console\Output\ConsoleOutput)";}}i:45;a:6:{s:4:"file";s:123:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/symfony/framework-bundle/Console/Application.php";s:4:"line";i:96;s:8:"function";s:12:"doRunCommand";s:5:"class";s:37:"Symfony\Component\Console\Application";s:4:"type";s:2:"->";s:4:"args";a:3:{i:0;s:56:"object(phpDocumentor\Console\Command\Project\RunCommand)";i:1;s:49:"object(Symfony\Component\Console\Input\ArgvInput)";i:2;s:54:"object(Symfony\Component\Console\Output\ConsoleOutput)";}}i:46;a:6:{s:4:"file";s:106:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/symfony/console/Application.php";s:4:"line";i:295;s:8:"function";s:12:"doRunCommand";s:5:"class";s:50:"Symfony\Bundle\FrameworkBundle\Console\Application";s:4:"type";s:2:"->";s:4:"args";a:3:{i:0;s:56:"object(phpDocumentor\Console\Command\Project\RunCommand)";i:1;s:49:"object(Symfony\Component\Console\Input\ArgvInput)";i:2;s:54:"object(Symfony\Component\Console\Output\ConsoleOutput)";}}i:47;a:6:{s:4:"file";s:123:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/symfony/framework-bundle/Console/Application.php";s:4:"line";i:82;s:8:"function";s:5:"doRun";s:5:"class";s:37:"Symfony\Component\Console\Application";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:49:"object(Symfony\Component\Console\Input\ArgvInput)";i:1;s:54:"object(Symfony\Component\Console\Output\ConsoleOutput)";}}i:48;a:6:{s:4:"file";s:106:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/symfony/console/Application.php";s:4:"line";i:167;s:8:"function";s:5:"doRun";s:5:"class";s:50:"Symfony\Bundle\FrameworkBundle\Console\Application";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:49:"object(Symfony\Component\Console\Input\ArgvInput)";i:1;s:54:"object(Symfony\Component\Console\Output\ConsoleOutput)";}}i:49;a:6:{s:4:"file";s:78:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/bin/phpdoc";s:4:"line";i:43;s:8:"function";s:3:"run";s:5:"class";s:37:"Symfony\Component\Console\Application";s:4:"type";s:2:"->";s:4:"args";a:1:{i:0;s:49:"object(Symfony\Component\Console\Input\ArgvInput)";}}i:50;a:4:{s:4:"file";s:60:"C:\Users\Administrator\.phive\phars\phpdocumentor-3.2.1.phar";s:4:"line";i:14;s:4:"args";a:1:{i:0;s:78:"phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/bin/phpdoc";}s:8:"function";s:7:"require";}}s:19:" Exception previous";N;s:14:"xdebug_message";s:811079:"
InvalidArgumentException: "\Error\SeeChild->method()" is not a valid Fqsen. in phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection-common/src/Fqsen.php on line 57

Call Stack:
    0.5178    2234504   1. {main}() C:\Users\Administrator\.phive\phars\phpdocumentor-3.2.1.phar:0
    0.6057    2533024   2. require('phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/bin/phpdoc') C:\Users\Administrator\.phive\phars\phpdocumentor-3.2.1.phar:14
    0.6322    4596048   3. Symfony\Component\Console\Application->run($input = class Symfony\Component\Console\Input\ArgvInput { private $tokens = []; private $parsed = []; protected $definition = class Symfony\Component\Console\Input\InputDefinition { private $arguments = ['command' => class Symfony\Component\Console\Input\InputArgument { private $name = 'command'; private $mode = 1; private $default = NULL; private $description = 'The command to execute' }]; private $requiredCount = 1; private $lastArrayArgument = NULL; private $lastOptionalArgument = NULL; private $options = ['target' => class Symfony\Component\Console\Input\InputOption { private $name = 'target'; private $shortcut = 't'; private $mode = 4; private $default = NULL; private $description = 'Path where to store the generated output' }, 'cache-folder' => class Symfony\Component\Console\Input\InputOption { private $name = 'cache-folder'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Path where to store the cache files' }, 'filename' => class Symfony\Component\Console\Input\InputOption { private $name = 'filename'; private $shortcut = 'f'; private $mode = 12; private $default = []; private $description = 'File to parse, glob patterns are supported. Provide multiple options of this type to add\n                multiple files.' }, 'directory' => class Symfony\Component\Console\Input\InputOption { private $name = 'directory'; private $shortcut = 'd'; private $mode = 12; private $default = []; private $description = 'directory to parse, glob patterns are supported. Provide multiple options of this type to add\n                multiple directories.' }, 'encoding' => class Symfony\Component\Console\Input\InputOption { private $name = 'encoding'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'encoding to be used to interpret source files with' }, 'extensions' => class Symfony\Component\Console\Input\InputOption { private $name = 'extensions'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Provide multiple options of this type to add multiple extensions. default is php' }, 'ignore' => class Symfony\Component\Console\Input\InputOption { private $name = 'ignore'; private $shortcut = 'i'; private $mode = 12; private $default = []; private $description = 'File(s) and directories (relative to the source-code directory) that will be ignored. Glob patterns are supported. Add multiple options of this type of add more ignore patterns' }, 'ignore-tags' => class Symfony\Component\Console\Input\InputOption { private $name = 'ignore-tags'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Tag that will be ignored, defaults to none. package, subpackage and ignore may not be ignored. Add multiple options of this type to ignore multiple tags.' }, 'hidden' => class Symfony\Component\Console\Input\InputOption { private $name = 'hidden'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Use this option to tell phpDocumentor to parse files and directories that begin with a period (.), by default these are ignored' }, 'ignore-symlinks' => class Symfony\Component\Console\Input\InputOption { private $name = 'ignore-symlinks'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Ignore symlinks to other files or directories, default is on' }, 'markers' => class Symfony\Component\Console\Input\InputOption { private $name = 'markers'; private $shortcut = 'm'; private $mode = 12; private $default = []; private $description = 'Comma-separated list of markers/tags to filter' }, 'title' => class Symfony\Component\Console\Input\InputOption { private $name = 'title'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Sets the title for this project; default is the phpDocumentor logo' }, 'force' => class Symfony\Component\Console\Input\InputOption { private $name = 'force'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Forces a full build of the documentation, does not increment existing documentation' }, 'validate' => class Symfony\Component\Console\Input\InputOption { private $name = 'validate'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Validates every processed file using PHP Lint, costs a lot of performance' }, 'visibility' => class Symfony\Component\Console\Input\InputOption { private $name = 'visibility'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Specifies the parse visibility that should be displayed in the documentation. Add multiple options of\n                this type to specify multiple levels.("public,protected")' }, 'defaultpackagename' => class Symfony\Component\Console\Input\InputOption { private $name = 'defaultpackagename'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Name to use for the default package.' }, 'sourcecode' => class Symfony\Component\Console\Input\InputOption { private $name = 'sourcecode'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Whether to include syntax highlighted source code' }, 'template' => class Symfony\Component\Console\Input\InputOption { private $name = 'template'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Name of the template to use (optional)' }, 'examples-dir' => class Symfony\Component\Console\Input\InputOption { private $name = 'examples-dir'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Directory to seacher for example files referenced by @example tags' }, 'setting' => class Symfony\Component\Console\Input\InputOption { private $name = 'setting'; private $shortcut = 's'; private $mode = 12; private $default = []; private $description = 'Provide custom setting(s) as "key=value", run again with <info>--list-settings</info> for a list' }, 'list-settings' => class Symfony\Component\Console\Input\InputOption { private $name = 'list-settings'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Returns a list of available settings' }, 'parseprivate' => class Symfony\Component\Console\Input\InputOption { private $name = 'parseprivate'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Whether to parse DocBlocks marked with @internal tag' }, 'help' => class Symfony\Component\Console\Input\InputOption { private $name = 'help'; private $shortcut = 'h'; private $mode = 1; private $default = FALSE; private $description = 'Display help for the given command. When no command is given display help for the <info>list</info> command' }, 'quiet' => class Symfony\Component\Console\Input\InputOption { private $name = 'quiet'; private $shortcut = 'q'; private $mode = 1; private $default = FALSE; private $description = 'Do not output any message' }, 'verbose' => class Symfony\Component\Console\Input\InputOption { private $name = 'verbose'; private $shortcut = 'v|vv|vvv'; private $mode = 1; private $default = FALSE; private $description = 'Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug' }, 'version' => class Symfony\Component\Console\Input\InputOption { private $name = 'version'; private $shortcut = 'V'; private $mode = 1; private $default = FALSE; private $description = 'Display this application version' }, 'ansi' => class Symfony\Component\Console\Input\InputOption { private $name = 'ansi'; private $shortcut = NULL; private $mode = 16; private $default = FALSE; private $description = 'Force (or disable --no-ansi) ANSI output' }, 'no-interaction' => class Symfony\Component\Console\Input\InputOption { private $name = 'no-interaction'; private $shortcut = 'n'; private $mode = 1; private $default = FALSE; private $description = 'Do not ask any interactive question' }, 'config' => class Symfony\Component\Console\Input\InputOption { private $name = 'config'; private $shortcut = 'c'; private $mode = 4; private $default = NULL; private $description = 'Location of a custom configuration file' }, 'log' => class Symfony\Component\Console\Input\InputOption { private $name = 'log'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Log file to write to' }, 'env' => class Symfony\Component\Console\Input\InputOption { private $name = 'env'; private $shortcut = 'e'; private $mode = 2; private $default = 'prod'; private $description = 'The Environment name.' }, 'no-debug' => class Symfony\Component\Console\Input\InputOption { private $name = 'no-debug'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Switch off debug mode.' }]; private $negations = ['no-ansi' => 'ansi']; private $shortcuts = ['t' => 'target', 'f' => 'filename', 'd' => 'directory', 'i' => 'ignore', 'm' => 'markers', 's' => 'setting', 'h' => 'help', 'q' => 'quiet', 'v' => 'verbose', 'vv' => 'verbose', 'vvv' => 'verbose', 'V' => 'version', 'n' => 'no-interaction', 'c' => 'config', 'e' => 'env'] }; protected $stream = NULL; protected $options = []; protected $arguments = ['command' => 'project:run']; protected $interactive = TRUE }, $output = ???) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/bin/phpdoc:43
    0.7022    4786800   4. Symfony\Bundle\FrameworkBundle\Console\Application->doRun($input = class Symfony\Component\Console\Input\ArgvInput { private $tokens = []; private $parsed = []; protected $definition = class Symfony\Component\Console\Input\InputDefinition { private $arguments = ['command' => class Symfony\Component\Console\Input\InputArgument { private $name = 'command'; private $mode = 1; private $default = NULL; private $description = 'The command to execute' }]; private $requiredCount = 1; private $lastArrayArgument = NULL; private $lastOptionalArgument = NULL; private $options = ['target' => class Symfony\Component\Console\Input\InputOption { private $name = 'target'; private $shortcut = 't'; private $mode = 4; private $default = NULL; private $description = 'Path where to store the generated output' }, 'cache-folder' => class Symfony\Component\Console\Input\InputOption { private $name = 'cache-folder'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Path where to store the cache files' }, 'filename' => class Symfony\Component\Console\Input\InputOption { private $name = 'filename'; private $shortcut = 'f'; private $mode = 12; private $default = []; private $description = 'File to parse, glob patterns are supported. Provide multiple options of this type to add\n                multiple files.' }, 'directory' => class Symfony\Component\Console\Input\InputOption { private $name = 'directory'; private $shortcut = 'd'; private $mode = 12; private $default = []; private $description = 'directory to parse, glob patterns are supported. Provide multiple options of this type to add\n                multiple directories.' }, 'encoding' => class Symfony\Component\Console\Input\InputOption { private $name = 'encoding'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'encoding to be used to interpret source files with' }, 'extensions' => class Symfony\Component\Console\Input\InputOption { private $name = 'extensions'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Provide multiple options of this type to add multiple extensions. default is php' }, 'ignore' => class Symfony\Component\Console\Input\InputOption { private $name = 'ignore'; private $shortcut = 'i'; private $mode = 12; private $default = []; private $description = 'File(s) and directories (relative to the source-code directory) that will be ignored. Glob patterns are supported. Add multiple options of this type of add more ignore patterns' }, 'ignore-tags' => class Symfony\Component\Console\Input\InputOption { private $name = 'ignore-tags'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Tag that will be ignored, defaults to none. package, subpackage and ignore may not be ignored. Add multiple options of this type to ignore multiple tags.' }, 'hidden' => class Symfony\Component\Console\Input\InputOption { private $name = 'hidden'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Use this option to tell phpDocumentor to parse files and directories that begin with a period (.), by default these are ignored' }, 'ignore-symlinks' => class Symfony\Component\Console\Input\InputOption { private $name = 'ignore-symlinks'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Ignore symlinks to other files or directories, default is on' }, 'markers' => class Symfony\Component\Console\Input\InputOption { private $name = 'markers'; private $shortcut = 'm'; private $mode = 12; private $default = []; private $description = 'Comma-separated list of markers/tags to filter' }, 'title' => class Symfony\Component\Console\Input\InputOption { private $name = 'title'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Sets the title for this project; default is the phpDocumentor logo' }, 'force' => class Symfony\Component\Console\Input\InputOption { private $name = 'force'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Forces a full build of the documentation, does not increment existing documentation' }, 'validate' => class Symfony\Component\Console\Input\InputOption { private $name = 'validate'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Validates every processed file using PHP Lint, costs a lot of performance' }, 'visibility' => class Symfony\Component\Console\Input\InputOption { private $name = 'visibility'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Specifies the parse visibility that should be displayed in the documentation. Add multiple options of\n                this type to specify multiple levels.("public,protected")' }, 'defaultpackagename' => class Symfony\Component\Console\Input\InputOption { private $name = 'defaultpackagename'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Name to use for the default package.' }, 'sourcecode' => class Symfony\Component\Console\Input\InputOption { private $name = 'sourcecode'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Whether to include syntax highlighted source code' }, 'template' => class Symfony\Component\Console\Input\InputOption { private $name = 'template'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Name of the template to use (optional)' }, 'examples-dir' => class Symfony\Component\Console\Input\InputOption { private $name = 'examples-dir'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Directory to seacher for example files referenced by @example tags' }, 'setting' => class Symfony\Component\Console\Input\InputOption { private $name = 'setting'; private $shortcut = 's'; private $mode = 12; private $default = []; private $description = 'Provide custom setting(s) as "key=value", run again with <info>--list-settings</info> for a list' }, 'list-settings' => class Symfony\Component\Console\Input\InputOption { private $name = 'list-settings'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Returns a list of available settings' }, 'parseprivate' => class Symfony\Component\Console\Input\InputOption { private $name = 'parseprivate'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Whether to parse DocBlocks marked with @internal tag' }, 'help' => class Symfony\Component\Console\Input\InputOption { private $name = 'help'; private $shortcut = 'h'; private $mode = 1; private $default = FALSE; private $description = 'Display help for the given command. When no command is given display help for the <info>list</info> command' }, 'quiet' => class Symfony\Component\Console\Input\InputOption { private $name = 'quiet'; private $shortcut = 'q'; private $mode = 1; private $default = FALSE; private $description = 'Do not output any message' }, 'verbose' => class Symfony\Component\Console\Input\InputOption { private $name = 'verbose'; private $shortcut = 'v|vv|vvv'; private $mode = 1; private $default = FALSE; private $description = 'Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug' }, 'version' => class Symfony\Component\Console\Input\InputOption { private $name = 'version'; private $shortcut = 'V'; private $mode = 1; private $default = FALSE; private $description = 'Display this application version' }, 'ansi' => class Symfony\Component\Console\Input\InputOption { private $name = 'ansi'; private $shortcut = NULL; private $mode = 16; private $default = FALSE; private $description = 'Force (or disable --no-ansi) ANSI output' }, 'no-interaction' => class Symfony\Component\Console\Input\InputOption { private $name = 'no-interaction'; private $shortcut = 'n'; private $mode = 1; private $default = FALSE; private $description = 'Do not ask any interactive question' }, 'config' => class Symfony\Component\Console\Input\InputOption { private $name = 'config'; private $shortcut = 'c'; private $mode = 4; private $default = NULL; private $description = 'Location of a custom configuration file' }, 'log' => class Symfony\Component\Console\Input\InputOption { private $name = 'log'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Log file to write to' }, 'env' => class Symfony\Component\Console\Input\InputOption { private $name = 'env'; private $shortcut = 'e'; private $mode = 2; private $default = 'prod'; private $description = 'The Environment name.' }, 'no-debug' => class Symfony\Component\Console\Input\InputOption { private $name = 'no-debug'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Switch off debug mode.' }]; private $negations = ['no-ansi' => 'ansi']; private $shortcuts = ['t' => 'target', 'f' => 'filename', 'd' => 'directory', 'i' => 'ignore', 'm' => 'markers', 's' => 'setting', 'h' => 'help', 'q' => 'quiet', 'v' => 'verbose', 'vv' => 'verbose', 'vvv' => 'verbose', 'V' => 'version', 'n' => 'no-interaction', 'c' => 'config', 'e' => 'env'] }; protected $stream = NULL; protected $options = []; protected $arguments = ['command' => 'project:run']; protected $interactive = TRUE }, $output = class Symfony\Component\Console\Output\ConsoleOutput { private $stderr = class Symfony\Component\Console\Output\StreamOutput { private $stream = resource(159) of type (stream); private ${Symfony\Component\Console\Output\Output}verbosity = 32; private ${Symfony\Component\Console\Output\Output}formatter = class Symfony\Component\Console\Formatter\OutputFormatter { private $decorated = TRUE; private $styles = ['error' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { ... }; private $foreground = 'white'; private $background = 'red'; private $options = [...]; private $href = NULL; private $handlesHrefGracefully = NULL }, 'info' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { ... }; private $foreground = 'green'; private $background = ''; private $options = [...]; private $href = NULL; private $handlesHrefGracefully = NULL }, 'comment' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { ... }; private $foreground = 'yellow'; private $background = ''; private $options = [...]; private $href = NULL; private $handlesHrefGracefully = NULL }, 'question' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { ... }; private $foreground = 'black'; private $background = 'cyan'; private $options = [...]; private $href = NULL; private $handlesHrefGracefully = NULL }]; private $styleStack = class Symfony\Component\Console\Formatter\OutputFormatterStyleStack { private $styles = []; private $emptyStyle = class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { ... }; private $foreground = ''; private $background = ''; private $options = [...]; private $href = NULL; private $handlesHrefGracefully = TRUE } } } }; private $consoleSectionOutputs = []; private ${Symfony\Component\Console\Output\StreamOutput}stream = resource(144) of type (stream); private ${Symfony\Component\Console\Output\Output}verbosity = 32; private ${Symfony\Component\Console\Output\Output}formatter = class Symfony\Component\Console\Formatter\OutputFormatter { private $decorated = TRUE; private $styles = ['error' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { private $foreground = '37'; private $background = '41'; private $options = [...] }; private $foreground = 'white'; private $background = 'red'; private $options = []; private $href = NULL; private $handlesHrefGracefully = NULL }, 'info' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { private $foreground = '32'; private $background = ''; private $options = [...] }; private $foreground = 'green'; private $background = ''; private $options = []; private $href = NULL; private $handlesHrefGracefully = NULL }, 'comment' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { private $foreground = '33'; private $background = ''; private $options = [...] }; private $foreground = 'yellow'; private $background = ''; private $options = []; private $href = NULL; private $handlesHrefGracefully = NULL }, 'question' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { private $foreground = '30'; private $background = '46'; private $options = [...] }; private $foreground = 'black'; private $background = 'cyan'; private $options = []; private $href = NULL; private $handlesHrefGracefully = NULL }]; private $styleStack = class Symfony\Component\Console\Formatter\OutputFormatterStyleStack { private $styles = []; private $emptyStyle = class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { private $foreground = ''; private $background = ''; private $options = [...] }; private $foreground = ''; private $background = ''; private $options = []; private $href = NULL; private $handlesHrefGracefully = TRUE } } } }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/symfony/console/Application.php:167
    1.1862   17389760   5. Symfony\Component\Console\Application->doRun($input = class Symfony\Component\Console\Input\ArgvInput { private $tokens = []; private $parsed = []; protected $definition = class Symfony\Component\Console\Input\InputDefinition { private $arguments = ['command' => class Symfony\Component\Console\Input\InputArgument { private $name = 'command'; private $mode = 1; private $default = NULL; private $description = 'The command to execute' }]; private $requiredCount = 1; private $lastArrayArgument = NULL; private $lastOptionalArgument = NULL; private $options = ['target' => class Symfony\Component\Console\Input\InputOption { private $name = 'target'; private $shortcut = 't'; private $mode = 4; private $default = NULL; private $description = 'Path where to store the generated output' }, 'cache-folder' => class Symfony\Component\Console\Input\InputOption { private $name = 'cache-folder'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Path where to store the cache files' }, 'filename' => class Symfony\Component\Console\Input\InputOption { private $name = 'filename'; private $shortcut = 'f'; private $mode = 12; private $default = []; private $description = 'File to parse, glob patterns are supported. Provide multiple options of this type to add\n                multiple files.' }, 'directory' => class Symfony\Component\Console\Input\InputOption { private $name = 'directory'; private $shortcut = 'd'; private $mode = 12; private $default = []; private $description = 'directory to parse, glob patterns are supported. Provide multiple options of this type to add\n                multiple directories.' }, 'encoding' => class Symfony\Component\Console\Input\InputOption { private $name = 'encoding'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'encoding to be used to interpret source files with' }, 'extensions' => class Symfony\Component\Console\Input\InputOption { private $name = 'extensions'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Provide multiple options of this type to add multiple extensions. default is php' }, 'ignore' => class Symfony\Component\Console\Input\InputOption { private $name = 'ignore'; private $shortcut = 'i'; private $mode = 12; private $default = []; private $description = 'File(s) and directories (relative to the source-code directory) that will be ignored. Glob patterns are supported. Add multiple options of this type of add more ignore patterns' }, 'ignore-tags' => class Symfony\Component\Console\Input\InputOption { private $name = 'ignore-tags'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Tag that will be ignored, defaults to none. package, subpackage and ignore may not be ignored. Add multiple options of this type to ignore multiple tags.' }, 'hidden' => class Symfony\Component\Console\Input\InputOption { private $name = 'hidden'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Use this option to tell phpDocumentor to parse files and directories that begin with a period (.), by default these are ignored' }, 'ignore-symlinks' => class Symfony\Component\Console\Input\InputOption { private $name = 'ignore-symlinks'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Ignore symlinks to other files or directories, default is on' }, 'markers' => class Symfony\Component\Console\Input\InputOption { private $name = 'markers'; private $shortcut = 'm'; private $mode = 12; private $default = []; private $description = 'Comma-separated list of markers/tags to filter' }, 'title' => class Symfony\Component\Console\Input\InputOption { private $name = 'title'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Sets the title for this project; default is the phpDocumentor logo' }, 'force' => class Symfony\Component\Console\Input\InputOption { private $name = 'force'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Forces a full build of the documentation, does not increment existing documentation' }, 'validate' => class Symfony\Component\Console\Input\InputOption { private $name = 'validate'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Validates every processed file using PHP Lint, costs a lot of performance' }, 'visibility' => class Symfony\Component\Console\Input\InputOption { private $name = 'visibility'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Specifies the parse visibility that should be displayed in the documentation. Add multiple options of\n                this type to specify multiple levels.("public,protected")' }, 'defaultpackagename' => class Symfony\Component\Console\Input\InputOption { private $name = 'defaultpackagename'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Name to use for the default package.' }, 'sourcecode' => class Symfony\Component\Console\Input\InputOption { private $name = 'sourcecode'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Whether to include syntax highlighted source code' }, 'template' => class Symfony\Component\Console\Input\InputOption { private $name = 'template'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Name of the template to use (optional)' }, 'examples-dir' => class Symfony\Component\Console\Input\InputOption { private $name = 'examples-dir'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Directory to seacher for example files referenced by @example tags' }, 'setting' => class Symfony\Component\Console\Input\InputOption { private $name = 'setting'; private $shortcut = 's'; private $mode = 12; private $default = []; private $description = 'Provide custom setting(s) as "key=value", run again with <info>--list-settings</info> for a list' }, 'list-settings' => class Symfony\Component\Console\Input\InputOption { private $name = 'list-settings'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Returns a list of available settings' }, 'parseprivate' => class Symfony\Component\Console\Input\InputOption { private $name = 'parseprivate'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Whether to parse DocBlocks marked with @internal tag' }, 'help' => class Symfony\Component\Console\Input\InputOption { private $name = 'help'; private $shortcut = 'h'; private $mode = 1; private $default = FALSE; private $description = 'Display help for the given command. When no command is given display help for the <info>list</info> command' }, 'quiet' => class Symfony\Component\Console\Input\InputOption { private $name = 'quiet'; private $shortcut = 'q'; private $mode = 1; private $default = FALSE; private $description = 'Do not output any message' }, 'verbose' => class Symfony\Component\Console\Input\InputOption { private $name = 'verbose'; private $shortcut = 'v|vv|vvv'; private $mode = 1; private $default = FALSE; private $description = 'Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug' }, 'version' => class Symfony\Component\Console\Input\InputOption { private $name = 'version'; private $shortcut = 'V'; private $mode = 1; private $default = FALSE; private $description = 'Display this application version' }, 'ansi' => class Symfony\Component\Console\Input\InputOption { private $name = 'ansi'; private $shortcut = NULL; private $mode = 16; private $default = FALSE; private $description = 'Force (or disable --no-ansi) ANSI output' }, 'no-interaction' => class Symfony\Component\Console\Input\InputOption { private $name = 'no-interaction'; private $shortcut = 'n'; private $mode = 1; private $default = FALSE; private $description = 'Do not ask any interactive question' }, 'config' => class Symfony\Component\Console\Input\InputOption { private $name = 'config'; private $shortcut = 'c'; private $mode = 4; private $default = NULL; private $description = 'Location of a custom configuration file' }, 'log' => class Symfony\Component\Console\Input\InputOption { private $name = 'log'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Log file to write to' }, 'env' => class Symfony\Component\Console\Input\InputOption { private $name = 'env'; private $shortcut = 'e'; private $mode = 2; private $default = 'prod'; private $description = 'The Environment name.' }, 'no-debug' => class Symfony\Component\Console\Input\InputOption { private $name = 'no-debug'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Switch off debug mode.' }]; private $negations = ['no-ansi' => 'ansi']; private $shortcuts = ['t' => 'target', 'f' => 'filename', 'd' => 'directory', 'i' => 'ignore', 'm' => 'markers', 's' => 'setting', 'h' => 'help', 'q' => 'quiet', 'v' => 'verbose', 'vv' => 'verbose', 'vvv' => 'verbose', 'V' => 'version', 'n' => 'no-interaction', 'c' => 'config', 'e' => 'env'] }; protected $stream = NULL; protected $options = []; protected $arguments = ['command' => 'project:run']; protected $interactive = TRUE }, $output = class Symfony\Component\Console\Output\ConsoleOutput { private $stderr = class Symfony\Component\Console\Output\StreamOutput { private $stream = resource(159) of type (stream); private ${Symfony\Component\Console\Output\Output}verbosity = 32; private ${Symfony\Component\Console\Output\Output}formatter = class Symfony\Component\Console\Formatter\OutputFormatter { private $decorated = TRUE; private $styles = ['error' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { ... }; private $foreground = 'white'; private $background = 'red'; private $options = [...]; private $href = NULL; private $handlesHrefGracefully = NULL }, 'info' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { ... }; private $foreground = 'green'; private $background = ''; private $options = [...]; private $href = NULL; private $handlesHrefGracefully = NULL }, 'comment' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { ... }; private $foreground = 'yellow'; private $background = ''; private $options = [...]; private $href = NULL; private $handlesHrefGracefully = NULL }, 'question' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { ... }; private $foreground = 'black'; private $background = 'cyan'; private $options = [...]; private $href = NULL; private $handlesHrefGracefully = NULL }]; private $styleStack = class Symfony\Component\Console\Formatter\OutputFormatterStyleStack { private $styles = []; private $emptyStyle = class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { ... }; private $foreground = ''; private $background = ''; private $options = [...]; private $href = NULL; private $handlesHrefGracefully = TRUE } } } }; private $consoleSectionOutputs = []; private ${Symfony\Component\Console\Output\StreamOutput}stream = resource(144) of type (stream); private ${Symfony\Component\Console\Output\Output}verbosity = 32; private ${Symfony\Component\Console\Output\Output}formatter = class Symfony\Component\Console\Formatter\OutputFormatter { private $decorated = TRUE; private $styles = ['error' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { private $foreground = '37'; private $background = '41'; private $options = [...] }; private $foreground = 'white'; private $background = 'red'; private $options = []; private $href = NULL; private $handlesHrefGracefully = NULL }, 'info' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { private $foreground = '32'; private $background = ''; private $options = [...] }; private $foreground = 'green'; private $background = ''; private $options = []; private $href = NULL; private $handlesHrefGracefully = NULL }, 'comment' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { private $foreground = '33'; private $background = ''; private $options = [...] }; private $foreground = 'yellow'; private $background = ''; private $options = []; private $href = NULL; private $handlesHrefGracefully = NULL }, 'question' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { private $foreground = '30'; private $background = '46'; private $options = [...] }; private $foreground = 'black'; private $background = 'cyan'; private $options = []; private $href = NULL; private $handlesHrefGracefully = NULL }]; private $styleStack = class Symfony\Component\Console\Formatter\OutputFormatterStyleStack { private $styles = []; private $emptyStyle = class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { private $foreground = ''; private $background = ''; private $options = [...] }; private $foreground = ''; private $background = ''; private $options = []; private $href = NULL; private $handlesHrefGracefully = TRUE } } } }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/symfony/framework-bundle/Console/Application.php:82
    1.1872   17389304   6. Symfony\Bundle\FrameworkBundle\Console\Application->doRunCommand($command = class phpDocumentor\Console\Command\Project\RunCommand { private $projectDescriptorBuilder = class phpDocumentor\Descriptor\ProjectDescriptorBuilder { protected $assemblerFactory = class phpDocumentor\Descriptor\Builder\AssemblerFactory { protected $assemblers = [0 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\FileAssembler { ... } }, 1 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\ConstantAssembler { ... } }, 2 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\TraitAssembler { ... } }, 3 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\ClassAssembler { ... } }, 4 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\EnumAssembler { ... } }, 5 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\EnumCaseAssembler { ... } }, 6 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\InterfaceAssembler { ... } }, 7 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\PropertyAssembler { ... } }, 8 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\ArgumentAssembler { ... } }, 9 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\MethodAssembler { ... } }, 10 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\FunctionAssembler { ... } }, 11 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\NamespaceAssembler { ... } }, 12 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\AuthorAssembler { ... } }, 13 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\DeprecatedAssembler { ... } }, 14 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\ExampleAssembler { ... } }, 15 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\LinkAssembler { ... } }, 16 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\MethodAssembler { ... } }, 17 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\PropertyAssembler { ... } }, 18 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\PropertyAssembler { ... } }, 19 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\PropertyAssembler { ... } }, 20 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\InvalidTagAssembler { ... } }, 21 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\VarAssembler { ... } }, 22 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\ParamAssembler { ... } }, 23 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\ThrowsAssembler { ... } }, 24 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\ReturnAssembler { ... } }, 25 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\UsesAssembler { ... } }, 26 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\SeeAssembler { ... } }, 27 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\SinceAssembler { ... } }, 28 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\VersionAssembler { ... } }]; protected $fallbackAssemblers = [0 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\GenericTagAssembler { ... } }] }; protected $filter = class phpDocumentor\Descriptor\Filter\Filter { private $pipeline = class League\Pipeline\Pipeline { private $stages = [0 => class phpDocumentor\Descriptor\Filter\StripIgnore { ... }, 1 => class phpDocumentor\Descriptor\Filter\StripIgnoredTags { ... }, 2 => class phpDocumentor\Descriptor\Filter\StripInternal { ... }, 3 => class phpDocumentor\Descriptor\Filter\StripOnVisibility { ... }]; private $processor = class League\Pipeline\InterruptibleProcessor { private $check = class Closure { virtual $closure = "phpDocumentor\Descriptor\Filter\Filter::phpDocumentor\Descriptor\Filter\{closure}", ... } } } }; protected $project = class phpDocumentor\Descriptor\ProjectDescriptor { private $name = 'Documentation'; private $namespace = class phpDocumentor\Descriptor\NamespaceDescriptor { protected $parent = NULL; protected $children = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $functions = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $constants = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $classes = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $interfaces = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $traits = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; private $enums = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\'; private $name = '' }; protected $name = '\\'; protected $namespace = ''; protected $package = NULL; protected $summary = ''; protected $description = NULL; protected $fileDescriptor = NULL; protected $line = 0; protected $tags = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $errors = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $inheritedElement = NULL }; private $package = class phpDocumentor\Descriptor\PackageDescriptor { protected $parent = NULL; protected $children = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $functions = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $constants = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $classes = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $interfaces = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $traits = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; private ${phpDocumentor\Descriptor\NamespaceDescriptor}enums = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\'; private $name = '' }; protected $name = '\\'; protected $namespace = ''; protected $package = NULL; protected $summary = ''; protected $description = NULL; protected $fileDescriptor = NULL; protected $line = 0; protected $tags = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $errors = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $inheritedElement = NULL }; private $files = class phpDocumentor\Descriptor\Collection { protected $items = ['tag/basic/abstract.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/author.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/category.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/copyright.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/deprecated.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/example.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/filesource.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/final.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/global.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/ignore.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/internal.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/license.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/link.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/method.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/name.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/package.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/param.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/property.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/return.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/see.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/since.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/static.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/staticvar.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/subpackage.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/throws.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/todo.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/tutorial.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/uses.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/var.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/version.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/example.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/inheritdoc.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/internal.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/link.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/source.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/tutorial.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }] }; private $indexes = class phpDocumentor\Descriptor\Collection { protected $items = [] }; private $settings = class phpDocumentor\Descriptor\ProjectDescriptor\Settings { private $isModified = FALSE; private $visibility = 7; private $includeSource = FALSE; private $custom = ['guides.enabled' => FALSE, 'graphs.enabled' => FALSE] }; private $partials = class phpDocumentor\Descriptor\Collection { protected $items = [] }; private $versions = class phpDocumentor\Descriptor\Collection { protected $items = [0 => class phpDocumentor\Descriptor\VersionDescriptor { ... }] }; private $description = class phpDocumentor\Descriptor\DocBlock\DescriptionDescriptor { private $description = class phpDocumentor\Reflection\DocBlock\Description { private $bodyTemplate = ''; private $tags = [...] }; private $inlineTags = [] } }; private $servicesWithCustomSettings = class Symfony\Component\DependencyInjection\Argument\RewindableGenerator { private $generator = class Closure { virtual $closure = "$this->ContainerXfq2Hb3\{closure}" }; private $count = 2 }; private $apiSpecification = class phpDocumentor\Configuration\ApiSpecification { private $source = class phpDocumentor\Configuration\Source { private $dsn = class phpDocumentor\Dsn { private $dsn = '.'; private $uri = class League\Uri\Uri { ... }; private $parameters = [...] }; private $paths = [0 => class phpDocumentor\Path { ... }] }; private $output = '.'; private $ignore = ['hidden' => TRUE, 'symlinks' => TRUE, 'paths' => []]; private $extensions = [0 => 'php', 1 => 'php3', 2 => 'phtml']; private $visibility = [0 => 'public', 1 => 'protected', 2 => 'private']; private $defaultPackageName = 'Application'; private $includeSource = FALSE; private $markers = [0 => 'TODO', 1 => 'FIXME']; private $ignoreTags = []; private $examples = NULL; private $encoding = 'utf-8'; private $validate = FALSE } }; private $pipeline = class League\Pipeline\Pipeline { private $stages = [0 => class League\Pipeline\Pipeline { private $stages = [0 => class phpDocumentor\Pipeline\Stage\Configure { ... }, 1 => class phpDocumentor\Pipeline\Stage\TransformToPayload { ... }, 2 => class phpDocumentor\Pipeline\Stage\InitializeBuilderFromConfig { ... }, 3 => class phpDocumentor\Pipeline\Stage\Cache\PurgeCachesWhenForced { ... }]; private $processor = class League\Pipeline\FingersCrossedProcessor {  } }, 1 => class League\Pipeline\Pipeline { private $stages = []; private $processor = class League\Pipeline\FingersCrossedProcessor {  } }, 2 => class League\Pipeline\Pipeline { private $stages = [0 => class phpDocumentor\Pipeline\Stage\Parser\TransformToParserPayload { ... }, 1 => class phpDocumentor\Pipeline\Stage\Parser\CollectFiles { ... }, 2 => class phpDocumentor\Pipeline\Stage\Cache\GarbageCollectCache { ... }, 3 => class phpDocumentor\Pipeline\Stage\Cache\LoadProjectDescriptorFromCache { ... }, 4 => class phpDocumentor\Pipeline\Stage\Cache\LoadGuidesFromCache { ... }, 5 => class phpDocumentor\Pipeline\Stage\Parser\ParseFiles { ... }, 6 => class phpDocumentor\Pipeline\Stage\Parser\ParseGuides { ... }, 7 => class phpDocumentor\Pipeline\Stage\Cache\StoreProjectDescriptorToCache { ... }, 8 => class phpDocumentor\Pipeline\Stage\Cache\StoreGuidesToCache { ... }]; private $processor = class League\Pipeline\FingersCrossedProcessor {  } }, 3 => class League\Pipeline\Pipeline { private $stages = [0 => class phpDocumentor\Pipeline\Stage\Cache\LoadProjectDescriptorFromCache { ... }, 1 => class phpDocumentor\Pipeline\Stage\Compile { ... }, 2 => class phpDocumentor\Pipeline\Stage\Cache\LoadGuidesFromCache { ... }, 3 => class phpDocumentor\Pipeline\Stage\Transform { ... }]; private $processor = class League\Pipeline\FingersCrossedProcessor {  } }]; private $processor = class League\Pipeline\FingersCrossedProcessor {  } }; private $progressBar = class Symfony\Component\Console\Helper\ProgressBar { private $barWidth = 28; private $barChar = NULL; private $emptyBarChar = '-'; private $progressChar = '>'; private $format = ' %current%/%max% [%bar%] %percent:3s%%'; private $internalFormat = NULL; private $redrawFreq = NULL; private $writeCount = 6; private $lastWriteTime = 1678210059.7155; private $minSecondsBetweenRedraws = 0.04; private $maxSecondsBetweenRedraws = 1; private $output = class Symfony\Component\Console\Output\StreamOutput { private $stream = resource(159) of type (stream); private ${Symfony\Component\Console\Output\Output}verbosity = 32; private ${Symfony\Component\Console\Output\Output}formatter = class Symfony\Component\Console\Formatter\OutputFormatter { private $decorated = TRUE; private $styles = ['error' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { ... }, 'info' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { ... }, 'comment' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { ... }, 'question' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { ... }]; private $styleStack = class Symfony\Component\Console\Formatter\OutputFormatterStyleStack { private $styles = [...]; private $emptyStyle = class Symfony\Component\Console\Formatter\OutputFormatterStyle { ... } } } }; private $step = 20; private $max = 36; private $startTime = 1678210058; private $stepWidth = 2; private $percent = 0.55555555555556; private $formatLineCount = 0; private $messages = []; private $overwrite = TRUE; private $terminal = class Symfony\Component\Console\Terminal {  }; private $previousMessage = ' 18/36 [==============>-------------]  50%'; private $cursor = class Symfony\Component\Console\Cursor { private $output = class Symfony\Component\Console\Output\StreamOutput { private $stream = resource(159) of type (stream); private ${Symfony\Component\Console\Output\Output}verbosity = 32; private ${Symfony\Component\Console\Output\Output}formatter = class Symfony\Component\Console\Formatter\OutputFormatter { private $decorated = TRUE; private $styles = [...]; private $styleStack = class Symfony\Component\Console\Formatter\OutputFormatterStyleStack { ... } } }; private $input = resource(1) of type (stream) } }; private $transformerProgressBar = NULL; private $eventDispatcher = class Symfony\Component\EventDispatcher\EventDispatcher { private $listeners = ['kernel.response' => [0 => [0 => [...]], -1024 => [0 => [...]], -128 => [0 => [...]]], 'kernel.request' => [100 => [0 => [...]], 16 => [0 => [...]], 256 => [0 => [...]], 15 => [0 => [...]], 2048 => [0 => [...]], 32 => [0 => [...]]], 'kernel.finish_request' => [0 => [0 => [...], 1 => [...]], -15 => [0 => [...]]], 'kernel.controller_arguments' => [0 => [0 => [...]]], 'kernel.exception' => [0 => [0 => [...]], -128 => [0 => [...]], -64 => [0 => [...]]], 'console.error' => [-128 => [0 => [...]], 0 => [0 => [...]]], 'console.terminate' => [-128 => [0 => [...]], -255 => [0 => [...]]], 'console.command' => [2048 => [0 => [...]], 255 => [0 => [...]]], 'transformer.transformation.post' => [0 => [0 => class Closure { virtual $closure = "$this->phpDocumentor\Console\Command\Project\{closure}", ... }]]]; private $sorted = []; private $optimized = ['console.command' => [0 => class Closure { virtual $closure = "$this->configure" }, 1 => class Closure { virtual $closure = "$this->onCommand" }]] }; private ${Symfony\Component\Console\Command\Command}application = class phpDocumentor\Console\Application { private ${Symfony\Bundle\FrameworkBundle\Console\Application}kernel = class phpDocumentor\Kernel { protected $bundles = ['FrameworkBundle' => class Symfony\Bundle\FrameworkBundle\FrameworkBundle { protected $name = 'FrameworkBundle'; protected $extension = NULL; protected $path = NULL; private ${Symfony\Component\HttpKernel\Bundle\Bundle}namespace = 'Symfony\\Bundle\\FrameworkBundle'; protected $container = class ContainerXfq2Hb3\phpDocumentor_KernelProdContainer { ... } }, 'MonologBundle' => class Symfony\Bundle\MonologBundle\MonologBundle { protected $name = 'MonologBundle'; protected $extension = NULL; protected $path = NULL; private ${Symfony\Component\HttpKernel\Bundle\Bundle}namespace = 'Symfony\\Bundle\\MonologBundle'; protected $container = class ContainerXfq2Hb3\phpDocumentor_KernelProdContainer { ... } }, 'TacticianBundle' => class League\Tactician\Bundle\TacticianBundle { private $handlerMapping = class League\Tactician\Bundle\DependencyInjection\HandlerMapping\CompositeMapping { ... }; protected $name = 'TacticianBundle'; protected $extension = NULL; protected $path = NULL; private ${Symfony\Component\HttpKernel\Bundle\Bundle}namespace = 'League\\Tactician\\Bundle'; protected $container = class ContainerXfq2Hb3\phpDocumentor_KernelProdContainer { ... } }]; protected $container = class ContainerXfq2Hb3\phpDocumentor_KernelProdContainer { protected $containerDir = 'phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/var/cache/prod\\ContainerXfq2Hb3'; protected $targetDir = 'phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/var/cache/prod'; protected $parameters = ['kernel.project_dir' => 'phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar', 'kernel.environment' => 'prod', 'kernel.debug' => FALSE, 'kernel.logs_dir' => 'phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/var/log', 'kernel.bundles' => [...], 'kernel.bundles_metadata' => [...], 'kernel.charset' => 'UTF-8', 'kernel.container_class' => 'phpDocumentor_KernelProdContainer', 'container.autowiring.strict_mode' => TRUE, 'container.dumper.inline_class_loader' => TRUE, 'linker.substitutions' => [...], 'event_dispatcher.event_aliases' => [...], 'fragment.renderer.hinclude.global_template' => NULL, 'fragment.path' => '/_fragment', 'kernel.secret' => 'foobar', 'kernel.http_method_override' => TRUE, 'kernel.trusted_hosts' => [...], 'kernel.default_locale' => 'en', 'kernel.error_controller' => 'error_controller', 'debug.file_link_format' => NULL, 'data_collector.templates' => [...], 'debug.error_handler.throw_at' => 0, 'router.request_context.host' => 'localhost', 'router.request_context.scheme' => 'http', 'router.request_context.base_url' => '', 'router.resource' => 'kernel::loadRoutes', 'request_listener.http_port' => 80, 'request_listener.https_port' => 443, 'monolog.use_microseconds' => TRUE, 'monolog.swift_mailer.handlers' => [...], 'monolog.handlers_to_channels' => [...], 'console.command.ids' => [...]]; private $buildParameters = ['container.build_hash' => 'Xfq2Hb3', 'container.build_id' => 'f99fa181', 'container.build_time' => 1640715452]; protected $getService = class Closure { virtual $closure = "$this->getService" }; private $loadedDynamicParameters = ['kernel.runtime_environment' => FALSE, 'kernel.build_dir' => FALSE, 'kernel.cache_dir' => FALSE]; private $dynamicParameters = []; protected $parameterBag = NULL; protected $services = ['kernel' => ..., 'console.command_loader' => class Symfony\Component\Console\CommandLoader\ContainerCommandLoader { ... }, 'console.command.public_alias.phpDocumentor\Console\Command\Project\ListSettingsCommand' => class phpDocumentor\Console\Command\Project\ListSettingsCommand { ... }, 'router' => class Symfony\Bundle\FrameworkBundle\Routing\Router { ... }, 'tactician.commandbus.default' => class League\Tactician\CommandBus { ... }, 'event_dispatcher' => class Symfony\Component\EventDispatcher\EventDispatcher { ... }, 'console.command.public_alias.phpDocumentor\Console\Command\Project\RunCommand' => ..., 'console.command.public_alias.tactician.command.debug' => class League\Tactician\Bundle\Command\DebugCommand { ... }]; protected $privates = ['phpDocumentor\Descriptor\Filter\StripIgnore' => class phpDocumentor\Descriptor\Filter\StripIgnore { ... }, 'phpDocumentor\Descriptor\Filter\StripIgnoredTags' => class phpDocumentor\Descriptor\Filter\StripIgnoredTags { ... }, 'phpDocumentor\Descriptor\Filter\StripInternal' => class phpDocumentor\Descriptor\Filter\StripInternal { ... }, 'phpDocumentor\Descriptor\Filter\StripOnVisibility' => class phpDocumentor\Descriptor\Filter\StripOnVisibility { ... }, 'phpDocumentor\Descriptor\ProjectDescriptorBuilder' => class phpDocumentor\Descriptor\ProjectDescriptorBuilder { ... }, 'monolog.logger' => class Symfony\Bridge\Monolog\Logger { ... }, 'monolog.handler.main' => class Symfony\Bridge\Monolog\Handler\ConsoleHandler { ... }, 'files' => class phpDocumentor\Parser\Cache\FilesystemAdapter { ... }, 'descriptors' => class phpDocumentor\Parser\Cache\FilesystemAdapter { ... }, 'router.request_context' => class Symfony\Component\Routing\RequestContext { ... }, 'router.expression_language_provider' => class Symfony\Component\Routing\Matcher\ExpressionLanguageProvider { ... }, 'slugger' => class Symfony\Component\String\Slugger\AsciiSlugger { ... }, 'phpDocumentor\Transformer\Router\Router' => class phpDocumentor\Transformer\Router\Router { ... }, 'League\CommonMark\Extension\DisallowedRawHtml\DisallowedRawHtmlExtension' => class League\CommonMark\Extension\DisallowedRawHtml\DisallowedRawHtmlExtension { ... }, 'phpDocumentor\Transformer\Writer\Twig\EnvironmentFactory' => class phpDocumentor\Transformer\Writer\Twig\EnvironmentFactory { ... }, 'phpDocumentor\Pipeline\Stage\Configure' => class phpDocumentor\Pipeline\Stage\Configure { ... }, 'phpDocumentor\Pipeline\Stage\TransformToPayload' => class phpDocumentor\Pipeline\Stage\TransformToPayload { ... }, 'phpDocumentor\Pipeline\Stage\InitializeBuilderFromConfig' => class phpDocumentor\Pipeline\Stage\InitializeBuilderFromConfig { ... }, 'phpDocumentor\Pipeline\Stage\Cache\PurgeCachesWhenForced' => class phpDocumentor\Pipeline\Stage\Cache\PurgeCachesWhenForced { ... }, 'phpdoc.configuration.pipeline' => class League\Pipeline\Pipeline { ... }, 'phpdoc.cache.pipeline' => class League\Pipeline\Pipeline { ... }, 'phpDocumentor\Pipeline\Stage\Parser\TransformToParserPayload' => class phpDocumentor\Pipeline\Stage\Parser\TransformToParserPayload { ... }, 'phpDocumentor\Parser\FlySystemFactory' => class phpDocumentor\Parser\FlySystemFactory { ... }, 'phpDocumentor\Pipeline\Stage\Parser\CollectFiles' => class phpDocumentor\Pipeline\Stage\Parser\CollectFiles { ... }, 'phpDocumentor\Descriptor\Cache\ProjectDescriptorMapper' => class phpDocumentor\Descriptor\Cache\ProjectDescriptorMapper { ... }, 'phpDocumentor\Pipeline\Stage\Cache\GarbageCollectCache' => class phpDocumentor\Pipeline\Stage\Cache\GarbageCollectCache { ... }, 'phpDocumentor\Pipeline\Stage\Cache\LoadProjectDescriptorFromCache' => class phpDocumentor\Pipeline\Stage\Cache\LoadProjectDescriptorFromCache { ... }, 'phpDocumentor\Pipeline\Stage\Cache\LoadGuidesFromCache' => class phpDocumentor\Pipeline\Stage\Cache\LoadGuidesFromCache { ... }, 'debug.stopwatch' => class Symfony\Component\Stopwatch\Stopwatch { ... }, 'phpDocumentor\Parser\Middleware\StopwatchMiddleware' => class phpDocumentor\Parser\Middleware\StopwatchMiddleware { ... }, 'phpDocumentor\Parser\Middleware\EmittingMiddleware' => class phpDocumentor\Parser\Middleware\EmittingMiddleware { ... }, 'phpDocumentor\Parser\Middleware\CacheMiddleware' => class phpDocumentor\Parser\Middleware\CacheMiddleware { ... }, 'phpDocumentor\Parser\Middleware\ErrorHandlingMiddleware' => class phpDocumentor\Parser\Middleware\ErrorHandlingMiddleware { ... }, 'phpDocumentor\Parser\Middleware\ReEncodingMiddleware' => class phpDocumentor\Parser\Middleware\ReEncodingMiddleware { ... }, 'phpDocumentor\Parser\Parser' => class phpDocumentor\Parser\Parser { ... }, 'phpDocumentor\Pipeline\Stage\Parser\ParseFiles' => class phpDocumentor\Pipeline\Stage\Parser\ParseFiles { ... }, 'phpDocumentor\Pipeline\Stage\Parser\ParseGuides' => class phpDocumentor\Pipeline\Stage\Parser\ParseGuides { ... }, 'phpDocumentor\Pipeline\Stage\Cache\StoreProjectDescriptorToCache' => class phpDocumentor\Pipeline\Stage\Cache\StoreProjectDescriptorToCache { ... }, 'phpDocumentor\Pipeline\Stage\Cache\StoreGuidesToCache' => class phpDocumentor\Pipeline\Stage\Cache\StoreGuidesToCache { ... }, 'phpdoc.parse.pipeline' => class League\Pipeline\Pipeline { ... }, 'phpDocumentor\Pipeline\Stage\Compile' => class phpDocumentor\Pipeline\Stage\Compile { ... }, 'phpDocumentor\Transformer\Writer\FileIo' => class phpDocumentor\Transformer\Writer\FileIo { ... }, 'phpDocumentor\Transformer\Writer\Graph\PlantumlRenderer' => class phpDocumentor\Transformer\Writer\Graph\PlantumlRenderer { ... }, 'phpDocumentor\Transformer\Writer\Graph' => class phpDocumentor\Transformer\Writer\Graph { ... }, 'phpDocumentor\Guides\Renderer' => class phpDocumentor\Guides\Renderer { ... }, 'phpDocumentor\Transformer\Writer\RenderGuide' => class phpDocumentor\Transformer\Writer\RenderGuide { ... }, 'phpDocumentor\Transformer\Writer\PathGenerator' => class phpDocumentor\Transformer\Writer\PathGenerator { ... }, 'phpDocumentor\Transformer\Writer\Sourcecode' => class phpDocumentor\Transformer\Writer\Sourcecode { ... }, 'phpDocumentor\Transformer\Writer\Twig' => class phpDocumentor\Transformer\Writer\Twig { ... }, 'phpDocumentor\Pipeline\Stage\Transform' => class phpDocumentor\Pipeline\Stage\Transform { ... }, 'phpdoc.transform.pipeline' => class League\Pipeline\Pipeline { ... }, 'debug.file_link_formatter' => class Symfony\Component\HttpKernel\Debug\FileLinkFormatter { ... }, 'debug.debug_handlers_listener' => class Symfony\Component\HttpKernel\EventListener\DebugHandlersListener { ... }]; protected $fileMap = ['.container.private.cache_clearer' => 'get_Container_Private_CacheClearerService', '.container.private.filesystem' => 'get_Container_Private_FilesystemService', 'Symfony\Bundle\FrameworkBundle\Controller\RedirectController' => 'getRedirectControllerService', 'Symfony\Bundle\FrameworkBundle\Controller\TemplateController' => 'getTemplateControllerService', 'cache.app' => 'getCache_AppService', 'cache.app_clearer' => 'getCache_AppClearerService', 'cache.global_clearer' => 'getCache_GlobalClearerService', 'cache.system' => 'getCache_SystemService', 'cache.system_clearer' => 'getCache_SystemClearerService', 'cache_warmer' => 'getCacheWarmerService', 'console.command.public_alias.phpDocumentor\Console\Command\Project\ListSettingsCommand' => 'getListSettingsCommandService', 'console.command.public_alias.phpDocumentor\Console\Command\Project\RunCommand' => 'getRunCommandService', 'console.command.public_alias.tactician.command.debug' => 'getConsole_Command_PublicAlias_Tactician_Command_DebugService', 'console.command_loader' => 'getConsole_CommandLoaderService', 'container.env_var_processors_locator' => 'getContainer_EnvVarProcessorsLocatorService', 'error_controller' => 'getErrorControllerService', 'routing.loader' => 'getRouting_LoaderService', 'services_resetter' => 'getServicesResetterService', 'tactician.commandbus.default' => 'getTactician_Commandbus_DefaultService']; protected $methodMap = ['event_dispatcher' => 'getEventDispatcherService', 'http_kernel' => 'getHttpKernelService', 'request_stack' => 'getRequestStackService', 'router' => 'getRouterService', 'cache_clearer' => 'getCacheClearerService', 'filesystem' => 'getFilesystemService']; protected $factories = []; protected $aliases = []; protected $loading = []; protected $resolving = []; protected $syntheticIds = ['kernel' => TRUE]; private ${Symfony\Component\DependencyInjection\Container}envCache = []; private ${Symfony\Component\DependencyInjection\Container}compiled = FALSE; private ${Symfony\Component\DependencyInjection\Container}getEnv = NULL }; protected $environment = 'prod'; protected $debug = FALSE; protected $booted = TRUE; protected $startTime = NULL; private ${Symfony\Component\HttpKernel\Kernel}projectDir = 'phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar'; private ${Symfony\Component\HttpKernel\Kernel}warmupDir = NULL; private ${Symfony\Component\HttpKernel\Kernel}requestStackSize = 0; private ${Symfony\Component\HttpKernel\Kernel}resetServices = FALSE }; private ${Symfony\Bundle\FrameworkBundle\Console\Application}commandsRegistered = TRUE; private ${Symfony\Bundle\FrameworkBundle\Console\Application}registrationErrors = []; private ${Symfony\Component\Console\Application}commands = ['help' => class Symfony\Component\Console\Command\HelpCommand { private $command = NULL; private ${Symfony\Component\Console\Command\Command}application = ...; private ${Symfony\Component\Console\Command\Command}name = 'help'; private ${Symfony\Component\Console\Command\Command}processTitle = NULL; private ${Symfony\Component\Console\Command\Command}aliases = []; private ${Symfony\Component\Console\Command\Command}definition = class Symfony\Component\Console\Input\InputDefinition { private $arguments = [...]; private $requiredCount = 0; private $lastArrayArgument = NULL; private $lastOptionalArgument = class Symfony\Component\Console\Input\InputArgument { ... }; private $options = [...]; private $negations = [...]; private $shortcuts = [...] }; private ${Symfony\Component\Console\Command\Command}hidden = FALSE; private ${Symfony\Component\Console\Command\Command}help = 'The <info>%command.name%</info> command displays help for a given command:\n\n  <info>%command.full_name% list</info>\n\nYou can also output the help in other formats by using the <comment>--format</comment> option:\n\n  <info>%command.full_name% --format=xml list</info>\n\nTo display the list of available commands, please use the <info>list</info> command.'; private ${Symfony\Component\Console\Command\Command}description = 'Display help for a command'; private ${Symfony\Component\Console\Command\Command}fullDefinition = NULL; private ${Symfony\Component\Console\Command\Command}ignoreValidationErrors = TRUE; private ${Symfony\Component\Console\Command\Command}code = NULL; private ${Symfony\Component\Console\Command\Command}synopsis = []; private ${Symfony\Component\Console\Command\Command}usages = []; private ${Symfony\Component\Console\Command\Command}helperSet = class Symfony\Component\Console\Helper\HelperSet { private $helpers = [...]; private $command = NULL } }, 'list' => class Symfony\Component\Console\Command\ListCommand { private ${Symfony\Component\Console\Command\Command}application = ...; private ${Symfony\Component\Console\Command\Command}name = 'list'; private ${Symfony\Component\Console\Command\Command}processTitle = NULL; private ${Symfony\Component\Console\Command\Command}aliases = []; private ${Symfony\Component\Console\Command\Command}definition = class Symfony\Component\Console\Input\InputDefinition { private $arguments = [...]; private $requiredCount = 0; private $lastArrayArgument = NULL; private $lastOptionalArgument = class Symfony\Component\Console\Input\InputArgument { ... }; private $options = [...]; private $negations = [...]; private $shortcuts = [...] }; private ${Symfony\Component\Console\Command\Command}hidden = FALSE; private ${Symfony\Component\Console\Command\Command}help = 'The <info>%command.name%</info> command lists all commands:\n\n  <info>%command.full_name%</info>\n\nYou can also display the commands for a specific namespace:\n\n  <info>%command.full_name% test</info>\n\nYou can also output the information in other formats by using the <comment>--format</comment> option:\n\n  <info>%command.full_name% --format=xml</info>\n\nIt\'s also possible to get raw list of commands (useful for embedding command runner):\n\n  <info>%command.full_name% --raw</info>'; private ${Symfony\Component\Console\Command\Command}description = 'List commands'; private ${Symfony\Component\Console\Command\Command}fullDefinition = NULL; private ${Symfony\Component\Console\Command\Command}ignoreValidationErrors = FALSE; private ${Symfony\Component\Console\Command\Command}code = NULL; private ${Symfony\Component\Console\Command\Command}synopsis = []; private ${Symfony\Component\Console\Command\Command}usages = []; private ${Symfony\Component\Console\Command\Command}helperSet = class Symfony\Component\Console\Helper\HelperSet { private $helpers = [...]; private $command = NULL } }, 'settings:list' => class phpDocumentor\Console\Command\Project\ListSettingsCommand { private $servicesWithCustomSettings = class Symfony\Component\DependencyInjection\Argument\RewindableGenerator { private $generator = class Closure { virtual $closure = "$this->ContainerXfq2Hb3\{closure}", ... }; private $count = 2 }; private ${Symfony\Component\Console\Command\Command}application = ...; private ${Symfony\Component\Console\Command\Command}name = 'settings:list'; private ${Symfony\Component\Console\Command\Command}processTitle = NULL; private ${Symfony\Component\Console\Command\Command}aliases = []; private ${Symfony\Component\Console\Command\Command}definition = class Symfony\Component\Console\Input\InputDefinition { private $arguments = [...]; private $requiredCount = 0; private $lastArrayArgument = NULL; private $lastOptionalArgument = NULL; private $options = [...]; private $negations = [...]; private $shortcuts = [...] }; private ${Symfony\Component\Console\Command\Command}hidden = FALSE; private ${Symfony\Component\Console\Command\Command}help = ''; private ${Symfony\Component\Console\Command\Command}description = ''; private ${Symfony\Component\Console\Command\Command}fullDefinition = NULL; private ${Symfony\Component\Console\Command\Command}ignoreValidationErrors = FALSE; private ${Symfony\Component\Console\Command\Command}code = NULL; private ${Symfony\Component\Console\Command\Command}synopsis = []; private ${Symfony\Component\Console\Command\Command}usages = []; private ${Symfony\Component\Console\Command\Command}helperSet = class Symfony\Component\Console\Helper\HelperSet { private $helpers = [...]; private $command = NULL } }, 'project:run' => ..., 'run' => ..., 'debug:tactician' => class League\Tactician\Bundle\Command\DebugCommand { private $mappings = ['default' => [...]]; private ${Symfony\Component\Console\Command\Command}application = ...; private ${Symfony\Component\Console\Command\Command}name = 'debug:tactician'; private ${Symfony\Component\Console\Command\Command}processTitle = NULL; private ${Symfony\Component\Console\Command\Command}aliases = []; private ${Symfony\Component\Console\Command\Command}definition = class Symfony\Component\Console\Input\InputDefinition { private $arguments = [...]; private $requiredCount = 0; private $lastArrayArgument = NULL; private $lastOptionalArgument = NULL; private $options = [...]; private $negations = [...]; private $shortcuts = [...] }; private ${Symfony\Component\Console\Command\Command}hidden = FALSE; private ${Symfony\Component\Console\Command\Command}help = ''; private ${Symfony\Component\Console\Command\Command}description = ''; private ${Symfony\Component\Console\Command\Command}fullDefinition = NULL; private ${Symfony\Component\Console\Command\Command}ignoreValidationErrors = FALSE; private ${Symfony\Component\Console\Command\Command}code = NULL; private ${Symfony\Component\Console\Command\Command}synopsis = []; private ${Symfony\Component\Console\Command\Command}usages = []; private ${Symfony\Component\Console\Command\Command}helperSet = class Symfony\Component\Console\Helper\HelperSet { private $helpers = [...]; private $command = NULL } }]; private ${Symfony\Component\Console\Application}wantHelps = FALSE; private ${Symfony\Component\Console\Application}runningCommand = ...; private ${Symfony\Component\Console\Application}name = 'phpDocumentor'; private ${Symfony\Component\Console\Application}version = 'v3.2.1'; private ${Symfony\Component\Console\Application}commandLoader = class Symfony\Component\Console\CommandLoader\ContainerCommandLoader { private $container = class Symfony\Component\DependencyInjection\Argument\ServiceLocator { private $factory = class Closure { virtual $closure = "$this->getService" }; private $serviceMap = ['console.command.about' => [...], 'console.command.assets_install' => [...], 'console.command.cache_clear' => [...], 'console.command.cache_pool_clear' => [...], 'console.command.cache_pool_delete' => [...], 'console.command.cache_pool_list' => [...], 'console.command.cache_pool_prune' => [...], 'console.command.cache_warmup' => [...], 'console.command.config_debug' => [...], 'console.command.config_dump_reference' => [...], 'console.command.container_debug' => [...], 'console.command.container_lint' => [...], 'console.command.debug_autowiring' => [...], 'console.command.event_dispatcher_debug' => [...], 'console.command.router_debug' => [...], 'console.command.router_match' => [...], 'console.command.secrets_decrypt_to_local' => [...], 'console.command.secrets_encrypt_from_local' => [...], 'console.command.secrets_generate_key' => [...], 'console.command.secrets_list' => [...], 'console.command.secrets_remove' => [...], 'console.command.secrets_set' => [...], 'console.command.yaml_lint' => [...]]; private $serviceTypes = ['console.command.about' => '?', 'console.command.assets_install' => '?', 'console.command.cache_clear' => '?', 'console.command.cache_pool_clear' => '?', 'console.command.cache_pool_delete' => '?', 'console.command.cache_pool_list' => '?', 'console.command.cache_pool_prune' => '?', 'console.command.cache_warmup' => '?', 'console.command.config_debug' => '?', 'console.command.config_dump_reference' => '?', 'console.command.container_debug' => '?', 'console.command.container_lint' => '?', 'console.command.debug_autowiring' => '?', 'console.command.event_dispatcher_debug' => '?', 'console.command.router_debug' => '?', 'console.command.router_match' => '?', 'console.command.secrets_decrypt_to_local' => '?', 'console.command.secrets_encrypt_from_local' => '?', 'console.command.secrets_generate_key' => '?', 'console.command.secrets_list' => '?', 'console.command.secrets_remove' => '?', 'console.command.secrets_set' => '?', 'console.command.yaml_lint' => '?']; private ${Symfony\Component\DependencyInjection\ServiceLocator}externalId = NULL; private ${Symfony\Component\DependencyInjection\ServiceLocator}container = NULL; private ${Symfony\Component\DependencyInjection\ServiceLocator}factories = ['console.command.about' => [...], 'console.command.assets_install' => [...], 'console.command.cache_clear' => [...], 'console.command.cache_pool_clear' => [...], 'console.command.cache_pool_delete' => [...], 'console.command.cache_pool_list' => [...], 'console.command.cache_pool_prune' => [...], 'console.command.cache_warmup' => [...], 'console.command.config_debug' => [...], 'console.command.config_dump_reference' => [...], 'console.command.container_debug' => [...], 'console.command.container_lint' => [...], 'console.command.debug_autowiring' => [...], 'console.command.event_dispatcher_debug' => [...], 'console.command.router_debug' => [...], 'console.command.router_match' => [...], 'console.command.secrets_decrypt_to_local' => [...], 'console.command.secrets_encrypt_from_local' => [...], 'console.command.secrets_generate_key' => [...], 'console.command.secrets_list' => [...], 'console.command.secrets_remove' => [...], 'console.command.secrets_set' => [...], 'console.command.yaml_lint' => [...]]; private ${Symfony\Component\DependencyInjection\ServiceLocator}loading = []; private ${Symfony\Component\DependencyInjection\ServiceLocator}providedTypes = NULL }; private $commandMap = ['about' => 'console.command.about', 'assets:install' => 'console.command.assets_install', 'cache:clear' => 'console.command.cache_clear', 'cache:pool:clear' => 'console.command.cache_pool_clear', 'cache:pool:prune' => 'console.command.cache_pool_prune', 'cache:pool:delete' => 'console.command.cache_pool_delete', 'cache:pool:list' => 'console.command.cache_pool_list', 'cache:warmup' => 'console.command.cache_warmup', 'debug:config' => 'console.command.config_debug', 'config:dump-reference' => 'console.command.config_dump_reference', 'debug:container' => 'console.command.container_debug', 'lint:container' => 'console.command.container_lint', 'debug:autowiring' => 'console.command.debug_autowiring', 'debug:event-dispatcher' => 'console.command.event_dispatcher_debug', 'debug:router' => 'console.command.router_debug', 'router:match' => 'console.command.router_match', 'lint:yaml' => 'console.command.yaml_lint', 'secrets:set' => 'console.command.secrets_set', 'secrets:remove' => 'console.command.secrets_remove', 'secrets:generate-keys' => 'console.command.secrets_generate_key', 'secrets:list' => 'console.command.secrets_list', 'secrets:decrypt-to-local' => 'console.command.secrets_decrypt_to_local', 'secrets:encrypt-from-local' => 'console.command.secrets_encrypt_from_local'] }; private ${Symfony\Component\Console\Application}catchExceptions = TRUE; private ${Symfony\Component\Console\Application}autoExit = TRUE; private ${Symfony\Component\Console\Application}definition = class Symfony\Component\Console\Input\InputDefinition { private $arguments = ['command' => class Symfony\Component\Console\Input\InputArgument { private $name = 'command'; private $mode = 1; private $default = NULL; private $description = 'The command to execute' }]; private $requiredCount = 1; private $lastArrayArgument = NULL; private $lastOptionalArgument = NULL; private $options = ['help' => class Symfony\Component\Console\Input\InputOption { private $name = 'help'; private $shortcut = 'h'; private $mode = 1; private $default = FALSE; private $description = 'Display help for the given command. When no command is given display help for the <info>list</info> command' }, 'quiet' => class Symfony\Component\Console\Input\InputOption { private $name = 'quiet'; private $shortcut = 'q'; private $mode = 1; private $default = FALSE; private $description = 'Do not output any message' }, 'verbose' => class Symfony\Component\Console\Input\InputOption { private $name = 'verbose'; private $shortcut = 'v|vv|vvv'; private $mode = 1; private $default = FALSE; private $description = 'Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug' }, 'version' => class Symfony\Component\Console\Input\InputOption { private $name = 'version'; private $shortcut = 'V'; private $mode = 1; private $default = FALSE; private $description = 'Display this application version' }, 'ansi' => class Symfony\Component\Console\Input\InputOption { private $name = 'ansi'; private $shortcut = NULL; private $mode = 16; private $default = FALSE; private $description = 'Force (or disable --no-ansi) ANSI output' }, 'no-interaction' => class Symfony\Component\Console\Input\InputOption { private $name = 'no-interaction'; private $shortcut = 'n'; private $mode = 1; private $default = FALSE; private $description = 'Do not ask any interactive question' }, 'config' => class Symfony\Component\Console\Input\InputOption { private $name = 'config'; private $shortcut = 'c'; private $mode = 4; private $default = NULL; private $description = 'Location of a custom configuration file' }, 'log' => class Symfony\Component\Console\Input\InputOption { private $name = 'log'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Log file to write to' }, 'env' => class Symfony\Component\Console\Input\InputOption { private $name = 'env'; private $shortcut = 'e'; private $mode = 2; private $default = 'prod'; private $description = 'The Environment name.' }, 'no-debug' => class Symfony\Component\Console\Input\InputOption { private $name = 'no-debug'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Switch off debug mode.' }]; private $negations = ['no-ansi' => 'ansi']; private $shortcuts = ['h' => 'help', 'q' => 'quiet', 'v' => 'verbose', 'vv' => 'verbose', 'vvv' => 'verbose', 'V' => 'version', 'n' => 'no-interaction', 'c' => 'config', 'e' => 'env'] }; private ${Symfony\Component\Console\Application}helperSet = class Symfony\Component\Console\Helper\HelperSet { private $helpers = ['formatter' => class Symfony\Component\Console\Helper\FormatterHelper { protected $helperSet = ... }, 'debug_formatter' => class Symfony\Component\Console\Helper\DebugFormatterHelper { private $colors = [...]; private $started = [...]; private $count = -1; protected $helperSet = ... }, 'process' => class Symfony\Component\Console\Helper\ProcessHelper { protected $helperSet = ... }, 'question' => class Symfony\Component\Console\Helper\QuestionHelper { private $inputStream = NULL; protected $helperSet = ... }]; private $command = NULL }; private ${Symfony\Component\Console\Application}dispatcher = class Symfony\Component\EventDispatcher\EventDispatcher { private $listeners = ['kernel.response' => [0 => [...], -1024 => [...], -128 => [...]], 'kernel.request' => [100 => [...], 16 => [...], 256 => [...], 15 => [...], 2048 => [...], 32 => [...]], 'kernel.finish_request' => [0 => [...], -15 => [...]], 'kernel.controller_arguments' => [0 => [...]], 'kernel.exception' => [0 => [...], -128 => [...], -64 => [...]], 'console.error' => [-128 => [...], 0 => [...]], 'console.terminate' => [-128 => [...], -255 => [...]], 'console.command' => [2048 => [...], 255 => [...]], 'transformer.transformation.post' => [0 => [...]]]; private $sorted = []; private $optimized = ['console.command' => [0 => class Closure { virtual $closure = "$this->configure", ... }, 1 => class Closure { virtual $closure = "$this->onCommand", ... }]] }; private ${Symfony\Component\Console\Application}terminal = class Symfony\Component\Console\Terminal {  }; private ${Symfony\Component\Console\Application}defaultCommand = 'list'; private ${Symfony\Component\Console\Application}singleCommand = FALSE; private ${Symfony\Component\Console\Application}initialized = TRUE; private ${Symfony\Component\Console\Application}signalRegistry = NULL; private ${Symfony\Component\Console\Application}signalsToDispatchEvent = [] }; private ${Symfony\Component\Console\Command\Command}name = 'project:run'; private ${Symfony\Component\Console\Command\Command}processTitle = NULL; private ${Symfony\Component\Console\Command\Command}aliases = [0 => 'run']; private ${Symfony\Component\Console\Command\Command}definition = class Symfony\Component\Console\Input\InputDefinition { private $arguments = []; private $requiredCount = 0; private $lastArrayArgument = NULL; private $lastOptionalArgument = NULL; private $options = ['target' => class Symfony\Component\Console\Input\InputOption { private $name = 'target'; private $shortcut = 't'; private $mode = 4; private $default = NULL; private $description = 'Path where to store the generated output' }, 'cache-folder' => class Symfony\Component\Console\Input\InputOption { private $name = 'cache-folder'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Path where to store the cache files' }, 'filename' => class Symfony\Component\Console\Input\InputOption { private $name = 'filename'; private $shortcut = 'f'; private $mode = 12; private $default = []; private $description = 'File to parse, glob patterns are supported. Provide multiple options of this type to add\n                multiple files.' }, 'directory' => class Symfony\Component\Console\Input\InputOption { private $name = 'directory'; private $shortcut = 'd'; private $mode = 12; private $default = []; private $description = 'directory to parse, glob patterns are supported. Provide multiple options of this type to add\n                multiple directories.' }, 'encoding' => class Symfony\Component\Console\Input\InputOption { private $name = 'encoding'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'encoding to be used to interpret source files with' }, 'extensions' => class Symfony\Component\Console\Input\InputOption { private $name = 'extensions'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Provide multiple options of this type to add multiple extensions. default is php' }, 'ignore' => class Symfony\Component\Console\Input\InputOption { private $name = 'ignore'; private $shortcut = 'i'; private $mode = 12; private $default = []; private $description = 'File(s) and directories (relative to the source-code directory) that will be ignored. Glob patterns are supported. Add multiple options of this type of add more ignore patterns' }, 'ignore-tags' => class Symfony\Component\Console\Input\InputOption { private $name = 'ignore-tags'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Tag that will be ignored, defaults to none. package, subpackage and ignore may not be ignored. Add multiple options of this type to ignore multiple tags.' }, 'hidden' => class Symfony\Component\Console\Input\InputOption { private $name = 'hidden'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Use this option to tell phpDocumentor to parse files and directories that begin with a period (.), by default these are ignored' }, 'ignore-symlinks' => class Symfony\Component\Console\Input\InputOption { private $name = 'ignore-symlinks'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Ignore symlinks to other files or directories, default is on' }, 'markers' => class Symfony\Component\Console\Input\InputOption { private $name = 'markers'; private $shortcut = 'm'; private $mode = 12; private $default = []; private $description = 'Comma-separated list of markers/tags to filter' }, 'title' => class Symfony\Component\Console\Input\InputOption { private $name = 'title'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Sets the title for this project; default is the phpDocumentor logo' }, 'force' => class Symfony\Component\Console\Input\InputOption { private $name = 'force'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Forces a full build of the documentation, does not increment existing documentation' }, 'validate' => class Symfony\Component\Console\Input\InputOption { private $name = 'validate'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Validates every processed file using PHP Lint, costs a lot of performance' }, 'visibility' => class Symfony\Component\Console\Input\InputOption { private $name = 'visibility'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Specifies the parse visibility that should be displayed in the documentation. Add multiple options of\n                this type to specify multiple levels.("public,protected")' }, 'defaultpackagename' => class Symfony\Component\Console\Input\InputOption { private $name = 'defaultpackagename'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Name to use for the default package.' }, 'sourcecode' => class Symfony\Component\Console\Input\InputOption { private $name = 'sourcecode'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Whether to include syntax highlighted source code' }, 'template' => class Symfony\Component\Console\Input\InputOption { private $name = 'template'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Name of the template to use (optional)' }, 'examples-dir' => class Symfony\Component\Console\Input\InputOption { private $name = 'examples-dir'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Directory to seacher for example files referenced by @example tags' }, 'setting' => class Symfony\Component\Console\Input\InputOption { private $name = 'setting'; private $shortcut = 's'; private $mode = 12; private $default = []; private $description = 'Provide custom setting(s) as "key=value", run again with <info>--list-settings</info> for a list' }, 'list-settings' => class Symfony\Component\Console\Input\InputOption { private $name = 'list-settings'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Returns a list of available settings' }, 'parseprivate' => class Symfony\Component\Console\Input\InputOption { private $name = 'parseprivate'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Whether to parse DocBlocks marked with @internal tag' }]; private $negations = []; private $shortcuts = ['t' => 'target', 'f' => 'filename', 'd' => 'directory', 'i' => 'ignore', 'm' => 'markers', 's' => 'setting'] }; private ${Symfony\Component\Console\Command\Command}hidden = FALSE; private ${Symfony\Component\Console\Command\Command}help = '                phpDocumentor creates documentation from PHP source files. The simplest way\n                to use it is:\n\n                    <info>$ phpdoc run -d [directory to parse] -t [output directory]</info>\n\n                This will parse every file ending with .php in <directory\n                to parse> and then output a HTML site containing easily readable documentation\n                in <output directory>.\n\n                phpDocumentor will try to look for a phpdoc.dist.xml or phpdoc.xml file'...; private ${Symfony\Component\Console\Command\Command}description = 'Parses and transforms the given files to a specified location'; private ${Symfony\Component\Console\Command\Command}fullDefinition = class Symfony\Component\Console\Input\InputDefinition { private $arguments = ['command' => class Symfony\Component\Console\Input\InputArgument { private $name = 'command'; private $mode = 1; private $default = NULL; private $description = 'The command to execute' }]; private $requiredCount = 1; private $lastArrayArgument = NULL; private $lastOptionalArgument = NULL; private $options = ['target' => class Symfony\Component\Console\Input\InputOption { private $name = 'target'; private $shortcut = 't'; private $mode = 4; private $default = NULL; private $description = 'Path where to store the generated output' }, 'cache-folder' => class Symfony\Component\Console\Input\InputOption { private $name = 'cache-folder'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Path where to store the cache files' }, 'filename' => class Symfony\Component\Console\Input\InputOption { private $name = 'filename'; private $shortcut = 'f'; private $mode = 12; private $default = []; private $description = 'File to parse, glob patterns are supported. Provide multiple options of this type to add\n                multiple files.' }, 'directory' => class Symfony\Component\Console\Input\InputOption { private $name = 'directory'; private $shortcut = 'd'; private $mode = 12; private $default = []; private $description = 'directory to parse, glob patterns are supported. Provide multiple options of this type to add\n                multiple directories.' }, 'encoding' => class Symfony\Component\Console\Input\InputOption { private $name = 'encoding'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'encoding to be used to interpret source files with' }, 'extensions' => class Symfony\Component\Console\Input\InputOption { private $name = 'extensions'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Provide multiple options of this type to add multiple extensions. default is php' }, 'ignore' => class Symfony\Component\Console\Input\InputOption { private $name = 'ignore'; private $shortcut = 'i'; private $mode = 12; private $default = []; private $description = 'File(s) and directories (relative to the source-code directory) that will be ignored. Glob patterns are supported. Add multiple options of this type of add more ignore patterns' }, 'ignore-tags' => class Symfony\Component\Console\Input\InputOption { private $name = 'ignore-tags'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Tag that will be ignored, defaults to none. package, subpackage and ignore may not be ignored. Add multiple options of this type to ignore multiple tags.' }, 'hidden' => class Symfony\Component\Console\Input\InputOption { private $name = 'hidden'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Use this option to tell phpDocumentor to parse files and directories that begin with a period (.), by default these are ignored' }, 'ignore-symlinks' => class Symfony\Component\Console\Input\InputOption { private $name = 'ignore-symlinks'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Ignore symlinks to other files or directories, default is on' }, 'markers' => class Symfony\Component\Console\Input\InputOption { private $name = 'markers'; private $shortcut = 'm'; private $mode = 12; private $default = []; private $description = 'Comma-separated list of markers/tags to filter' }, 'title' => class Symfony\Component\Console\Input\InputOption { private $name = 'title'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Sets the title for this project; default is the phpDocumentor logo' }, 'force' => class Symfony\Component\Console\Input\InputOption { private $name = 'force'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Forces a full build of the documentation, does not increment existing documentation' }, 'validate' => class Symfony\Component\Console\Input\InputOption { private $name = 'validate'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Validates every processed file using PHP Lint, costs a lot of performance' }, 'visibility' => class Symfony\Component\Console\Input\InputOption { private $name = 'visibility'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Specifies the parse visibility that should be displayed in the documentation. Add multiple options of\n                this type to specify multiple levels.("public,protected")' }, 'defaultpackagename' => class Symfony\Component\Console\Input\InputOption { private $name = 'defaultpackagename'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Name to use for the default package.' }, 'sourcecode' => class Symfony\Component\Console\Input\InputOption { private $name = 'sourcecode'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Whether to include syntax highlighted source code' }, 'template' => class Symfony\Component\Console\Input\InputOption { private $name = 'template'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Name of the template to use (optional)' }, 'examples-dir' => class Symfony\Component\Console\Input\InputOption { private $name = 'examples-dir'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Directory to seacher for example files referenced by @example tags' }, 'setting' => class Symfony\Component\Console\Input\InputOption { private $name = 'setting'; private $shortcut = 's'; private $mode = 12; private $default = []; private $description = 'Provide custom setting(s) as "key=value", run again with <info>--list-settings</info> for a list' }, 'list-settings' => class Symfony\Component\Console\Input\InputOption { private $name = 'list-settings'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Returns a list of available settings' }, 'parseprivate' => class Symfony\Component\Console\Input\InputOption { private $name = 'parseprivate'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Whether to parse DocBlocks marked with @internal tag' }, 'help' => class Symfony\Component\Console\Input\InputOption { private $name = 'help'; private $shortcut = 'h'; private $mode = 1; private $default = FALSE; private $description = 'Display help for the given command. When no command is given display help for the <info>list</info> command' }, 'quiet' => class Symfony\Component\Console\Input\InputOption { private $name = 'quiet'; private $shortcut = 'q'; private $mode = 1; private $default = FALSE; private $description = 'Do not output any message' }, 'verbose' => class Symfony\Component\Console\Input\InputOption { private $name = 'verbose'; private $shortcut = 'v|vv|vvv'; private $mode = 1; private $default = FALSE; private $description = 'Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug' }, 'version' => class Symfony\Component\Console\Input\InputOption { private $name = 'version'; private $shortcut = 'V'; private $mode = 1; private $default = FALSE; private $description = 'Display this application version' }, 'ansi' => class Symfony\Component\Console\Input\InputOption { private $name = 'ansi'; private $shortcut = NULL; private $mode = 16; private $default = FALSE; private $description = 'Force (or disable --no-ansi) ANSI output' }, 'no-interaction' => class Symfony\Component\Console\Input\InputOption { private $name = 'no-interaction'; private $shortcut = 'n'; private $mode = 1; private $default = FALSE; private $description = 'Do not ask any interactive question' }, 'config' => class Symfony\Component\Console\Input\InputOption { private $name = 'config'; private $shortcut = 'c'; private $mode = 4; private $default = NULL; private $description = 'Location of a custom configuration file' }, 'log' => class Symfony\Component\Console\Input\InputOption { private $name = 'log'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Log file to write to' }, 'env' => class Symfony\Component\Console\Input\InputOption { private $name = 'env'; private $shortcut = 'e'; private $mode = 2; private $default = 'prod'; private $description = 'The Environment name.' }, 'no-debug' => class Symfony\Component\Console\Input\InputOption { private $name = 'no-debug'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Switch off debug mode.' }]; private $negations = ['no-ansi' => 'ansi']; private $shortcuts = ['t' => 'target', 'f' => 'filename', 'd' => 'directory', 'i' => 'ignore', 'm' => 'markers', 's' => 'setting', 'h' => 'help', 'q' => 'quiet', 'v' => 'verbose', 'vv' => 'verbose', 'vvv' => 'verbose', 'V' => 'version', 'n' => 'no-interaction', 'c' => 'config', 'e' => 'env'] }; private ${Symfony\Component\Console\Command\Command}ignoreValidationErrors = FALSE; private ${Symfony\Component\Console\Command\Command}code = NULL; private ${Symfony\Component\Console\Command\Command}synopsis = []; private ${Symfony\Component\Console\Command\Command}usages = []; private ${Symfony\Component\Console\Command\Command}helperSet = class Symfony\Component\Console\Helper\HelperSet { private $helpers = ['formatter' => class Symfony\Component\Console\Helper\FormatterHelper { protected $helperSet = ... }, 'debug_formatter' => class Symfony\Component\Console\Helper\DebugFormatterHelper { private $colors = [0 => 'black', 1 => 'red', 2 => 'green', 3 => 'yellow', 4 => 'blue', 5 => 'magenta', 6 => 'cyan', 7 => 'white', 8 => 'default']; private $started = []; private $count = -1; protected $helperSet = ... }, 'process' => class Symfony\Component\Console\Helper\ProcessHelper { protected $helperSet = ... }, 'question' => class Symfony\Component\Console\Helper\QuestionHelper { private $inputStream = NULL; protected $helperSet = ... }]; private $command = NULL } }, $input = class Symfony\Component\Console\Input\ArgvInput { private $tokens = []; private $parsed = []; protected $definition = class Symfony\Component\Console\Input\InputDefinition { private $arguments = ['command' => class Symfony\Component\Console\Input\InputArgument { private $name = 'command'; private $mode = 1; private $default = NULL; private $description = 'The command to execute' }]; private $requiredCount = 1; private $lastArrayArgument = NULL; private $lastOptionalArgument = NULL; private $options = ['target' => class Symfony\Component\Console\Input\InputOption { private $name = 'target'; private $shortcut = 't'; private $mode = 4; private $default = NULL; private $description = 'Path where to store the generated output' }, 'cache-folder' => class Symfony\Component\Console\Input\InputOption { private $name = 'cache-folder'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Path where to store the cache files' }, 'filename' => class Symfony\Component\Console\Input\InputOption { private $name = 'filename'; private $shortcut = 'f'; private $mode = 12; private $default = []; private $description = 'File to parse, glob patterns are supported. Provide multiple options of this type to add\n                multiple files.' }, 'directory' => class Symfony\Component\Console\Input\InputOption { private $name = 'directory'; private $shortcut = 'd'; private $mode = 12; private $default = []; private $description = 'directory to parse, glob patterns are supported. Provide multiple options of this type to add\n                multiple directories.' }, 'encoding' => class Symfony\Component\Console\Input\InputOption { private $name = 'encoding'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'encoding to be used to interpret source files with' }, 'extensions' => class Symfony\Component\Console\Input\InputOption { private $name = 'extensions'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Provide multiple options of this type to add multiple extensions. default is php' }, 'ignore' => class Symfony\Component\Console\Input\InputOption { private $name = 'ignore'; private $shortcut = 'i'; private $mode = 12; private $default = []; private $description = 'File(s) and directories (relative to the source-code directory) that will be ignored. Glob patterns are supported. Add multiple options of this type of add more ignore patterns' }, 'ignore-tags' => class Symfony\Component\Console\Input\InputOption { private $name = 'ignore-tags'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Tag that will be ignored, defaults to none. package, subpackage and ignore may not be ignored. Add multiple options of this type to ignore multiple tags.' }, 'hidden' => class Symfony\Component\Console\Input\InputOption { private $name = 'hidden'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Use this option to tell phpDocumentor to parse files and directories that begin with a period (.), by default these are ignored' }, 'ignore-symlinks' => class Symfony\Component\Console\Input\InputOption { private $name = 'ignore-symlinks'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Ignore symlinks to other files or directories, default is on' }, 'markers' => class Symfony\Component\Console\Input\InputOption { private $name = 'markers'; private $shortcut = 'm'; private $mode = 12; private $default = []; private $description = 'Comma-separated list of markers/tags to filter' }, 'title' => class Symfony\Component\Console\Input\InputOption { private $name = 'title'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Sets the title for this project; default is the phpDocumentor logo' }, 'force' => class Symfony\Component\Console\Input\InputOption { private $name = 'force'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Forces a full build of the documentation, does not increment existing documentation' }, 'validate' => class Symfony\Component\Console\Input\InputOption { private $name = 'validate'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Validates every processed file using PHP Lint, costs a lot of performance' }, 'visibility' => class Symfony\Component\Console\Input\InputOption { private $name = 'visibility'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Specifies the parse visibility that should be displayed in the documentation. Add multiple options of\n                this type to specify multiple levels.("public,protected")' }, 'defaultpackagename' => class Symfony\Component\Console\Input\InputOption { private $name = 'defaultpackagename'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Name to use for the default package.' }, 'sourcecode' => class Symfony\Component\Console\Input\InputOption { private $name = 'sourcecode'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Whether to include syntax highlighted source code' }, 'template' => class Symfony\Component\Console\Input\InputOption { private $name = 'template'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Name of the template to use (optional)' }, 'examples-dir' => class Symfony\Component\Console\Input\InputOption { private $name = 'examples-dir'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Directory to seacher for example files referenced by @example tags' }, 'setting' => class Symfony\Component\Console\Input\InputOption { private $name = 'setting'; private $shortcut = 's'; private $mode = 12; private $default = []; private $description = 'Provide custom setting(s) as "key=value", run again with <info>--list-settings</info> for a list' }, 'list-settings' => class Symfony\Component\Console\Input\InputOption { private $name = 'list-settings'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Returns a list of available settings' }, 'parseprivate' => class Symfony\Component\Console\Input\InputOption { private $name = 'parseprivate'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Whether to parse DocBlocks marked with @internal tag' }, 'help' => class Symfony\Component\Console\Input\InputOption { private $name = 'help'; private $shortcut = 'h'; private $mode = 1; private $default = FALSE; private $description = 'Display help for the given command. When no command is given display help for the <info>list</info> command' }, 'quiet' => class Symfony\Component\Console\Input\InputOption { private $name = 'quiet'; private $shortcut = 'q'; private $mode = 1; private $default = FALSE; private $description = 'Do not output any message' }, 'verbose' => class Symfony\Component\Console\Input\InputOption { private $name = 'verbose'; private $shortcut = 'v|vv|vvv'; private $mode = 1; private $default = FALSE; private $description = 'Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug' }, 'version' => class Symfony\Component\Console\Input\InputOption { private $name = 'version'; private $shortcut = 'V'; private $mode = 1; private $default = FALSE; private $description = 'Display this application version' }, 'ansi' => class Symfony\Component\Console\Input\InputOption { private $name = 'ansi'; private $shortcut = NULL; private $mode = 16; private $default = FALSE; private $description = 'Force (or disable --no-ansi) ANSI output' }, 'no-interaction' => class Symfony\Component\Console\Input\InputOption { private $name = 'no-interaction'; private $shortcut = 'n'; private $mode = 1; private $default = FALSE; private $description = 'Do not ask any interactive question' }, 'config' => class Symfony\Component\Console\Input\InputOption { private $name = 'config'; private $shortcut = 'c'; private $mode = 4; private $default = NULL; private $description = 'Location of a custom configuration file' }, 'log' => class Symfony\Component\Console\Input\InputOption { private $name = 'log'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Log file to write to' }, 'env' => class Symfony\Component\Console\Input\InputOption { private $name = 'env'; private $shortcut = 'e'; private $mode = 2; private $default = 'prod'; private $description = 'The Environment name.' }, 'no-debug' => class Symfony\Component\Console\Input\InputOption { private $name = 'no-debug'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Switch off debug mode.' }]; private $negations = ['no-ansi' => 'ansi']; private $shortcuts = ['t' => 'target', 'f' => 'filename', 'd' => 'directory', 'i' => 'ignore', 'm' => 'markers', 's' => 'setting', 'h' => 'help', 'q' => 'quiet', 'v' => 'verbose', 'vv' => 'verbose', 'vvv' => 'verbose', 'V' => 'version', 'n' => 'no-interaction', 'c' => 'config', 'e' => 'env'] }; protected $stream = NULL; protected $options = []; protected $arguments = ['command' => 'project:run']; protected $interactive = TRUE }, $output = class Symfony\Component\Console\Output\ConsoleOutput { private $stderr = class Symfony\Component\Console\Output\StreamOutput { private $stream = resource(159) of type (stream); private ${Symfony\Component\Console\Output\Output}verbosity = 32; private ${Symfony\Component\Console\Output\Output}formatter = class Symfony\Component\Console\Formatter\OutputFormatter { private $decorated = TRUE; private $styles = ['error' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { ... }; private $foreground = 'white'; private $background = 'red'; private $options = [...]; private $href = NULL; private $handlesHrefGracefully = NULL }, 'info' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { ... }; private $foreground = 'green'; private $background = ''; private $options = [...]; private $href = NULL; private $handlesHrefGracefully = NULL }, 'comment' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { ... }; private $foreground = 'yellow'; private $background = ''; private $options = [...]; private $href = NULL; private $handlesHrefGracefully = NULL }, 'question' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { ... }; private $foreground = 'black'; private $background = 'cyan'; private $options = [...]; private $href = NULL; private $handlesHrefGracefully = NULL }]; private $styleStack = class Symfony\Component\Console\Formatter\OutputFormatterStyleStack { private $styles = []; private $emptyStyle = class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { ... }; private $foreground = ''; private $background = ''; private $options = [...]; private $href = NULL; private $handlesHrefGracefully = TRUE } } } }; private $consoleSectionOutputs = []; private ${Symfony\Component\Console\Output\StreamOutput}stream = resource(144) of type (stream); private ${Symfony\Component\Console\Output\Output}verbosity = 32; private ${Symfony\Component\Console\Output\Output}formatter = class Symfony\Component\Console\Formatter\OutputFormatter { private $decorated = TRUE; private $styles = ['error' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { private $foreground = '37'; private $background = '41'; private $options = [...] }; private $foreground = 'white'; private $background = 'red'; private $options = []; private $href = NULL; private $handlesHrefGracefully = NULL }, 'info' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { private $foreground = '32'; private $background = ''; private $options = [...] }; private $foreground = 'green'; private $background = ''; private $options = []; private $href = NULL; private $handlesHrefGracefully = NULL }, 'comment' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { private $foreground = '33'; private $background = ''; private $options = [...] }; private $foreground = 'yellow'; private $background = ''; private $options = []; private $href = NULL; private $handlesHrefGracefully = NULL }, 'question' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { private $foreground = '30'; private $background = '46'; private $options = [...] }; private $foreground = 'black'; private $background = 'cyan'; private $options = []; private $href = NULL; private $handlesHrefGracefully = NULL }]; private $styleStack = class Symfony\Component\Console\Formatter\OutputFormatterStyleStack { private $styles = []; private $emptyStyle = class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { private $foreground = ''; private $background = ''; private $options = [...] }; private $foreground = ''; private $background = ''; private $options = []; private $href = NULL; private $handlesHrefGracefully = TRUE } } } }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/symfony/console/Application.php:295
    1.1882   17389304   7. Symfony\Component\Console\Application->doRunCommand($command = class phpDocumentor\Console\Command\Project\RunCommand { private $projectDescriptorBuilder = class phpDocumentor\Descriptor\ProjectDescriptorBuilder { protected $assemblerFactory = class phpDocumentor\Descriptor\Builder\AssemblerFactory { protected $assemblers = [0 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\FileAssembler { ... } }, 1 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\ConstantAssembler { ... } }, 2 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\TraitAssembler { ... } }, 3 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\ClassAssembler { ... } }, 4 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\EnumAssembler { ... } }, 5 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\EnumCaseAssembler { ... } }, 6 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\InterfaceAssembler { ... } }, 7 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\PropertyAssembler { ... } }, 8 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\ArgumentAssembler { ... } }, 9 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\MethodAssembler { ... } }, 10 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\FunctionAssembler { ... } }, 11 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\NamespaceAssembler { ... } }, 12 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\AuthorAssembler { ... } }, 13 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\DeprecatedAssembler { ... } }, 14 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\ExampleAssembler { ... } }, 15 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\LinkAssembler { ... } }, 16 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\MethodAssembler { ... } }, 17 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\PropertyAssembler { ... } }, 18 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\PropertyAssembler { ... } }, 19 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\PropertyAssembler { ... } }, 20 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\InvalidTagAssembler { ... } }, 21 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\VarAssembler { ... } }, 22 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\ParamAssembler { ... } }, 23 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\ThrowsAssembler { ... } }, 24 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\ReturnAssembler { ... } }, 25 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\UsesAssembler { ... } }, 26 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\SeeAssembler { ... } }, 27 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\SinceAssembler { ... } }, 28 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\VersionAssembler { ... } }]; protected $fallbackAssemblers = [0 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\GenericTagAssembler { ... } }] }; protected $filter = class phpDocumentor\Descriptor\Filter\Filter { private $pipeline = class League\Pipeline\Pipeline { private $stages = [0 => class phpDocumentor\Descriptor\Filter\StripIgnore { ... }, 1 => class phpDocumentor\Descriptor\Filter\StripIgnoredTags { ... }, 2 => class phpDocumentor\Descriptor\Filter\StripInternal { ... }, 3 => class phpDocumentor\Descriptor\Filter\StripOnVisibility { ... }]; private $processor = class League\Pipeline\InterruptibleProcessor { private $check = class Closure { virtual $closure = "phpDocumentor\Descriptor\Filter\Filter::phpDocumentor\Descriptor\Filter\{closure}", ... } } } }; protected $project = class phpDocumentor\Descriptor\ProjectDescriptor { private $name = 'Documentation'; private $namespace = class phpDocumentor\Descriptor\NamespaceDescriptor { protected $parent = NULL; protected $children = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $functions = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $constants = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $classes = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $interfaces = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $traits = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; private $enums = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\'; private $name = '' }; protected $name = '\\'; protected $namespace = ''; protected $package = NULL; protected $summary = ''; protected $description = NULL; protected $fileDescriptor = NULL; protected $line = 0; protected $tags = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $errors = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $inheritedElement = NULL }; private $package = class phpDocumentor\Descriptor\PackageDescriptor { protected $parent = NULL; protected $children = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $functions = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $constants = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $classes = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $interfaces = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $traits = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; private ${phpDocumentor\Descriptor\NamespaceDescriptor}enums = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\'; private $name = '' }; protected $name = '\\'; protected $namespace = ''; protected $package = NULL; protected $summary = ''; protected $description = NULL; protected $fileDescriptor = NULL; protected $line = 0; protected $tags = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $errors = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $inheritedElement = NULL }; private $files = class phpDocumentor\Descriptor\Collection { protected $items = ['tag/basic/abstract.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/author.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/category.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/copyright.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/deprecated.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/example.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/filesource.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/final.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/global.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/ignore.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/internal.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/license.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/link.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/method.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/name.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/package.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/param.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/property.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/return.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/see.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/since.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/static.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/staticvar.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/subpackage.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/throws.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/todo.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/tutorial.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/uses.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/var.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/version.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/example.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/inheritdoc.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/internal.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/link.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/source.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/tutorial.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }] }; private $indexes = class phpDocumentor\Descriptor\Collection { protected $items = [] }; private $settings = class phpDocumentor\Descriptor\ProjectDescriptor\Settings { private $isModified = FALSE; private $visibility = 7; private $includeSource = FALSE; private $custom = ['guides.enabled' => FALSE, 'graphs.enabled' => FALSE] }; private $partials = class phpDocumentor\Descriptor\Collection { protected $items = [] }; private $versions = class phpDocumentor\Descriptor\Collection { protected $items = [0 => class phpDocumentor\Descriptor\VersionDescriptor { ... }] }; private $description = class phpDocumentor\Descriptor\DocBlock\DescriptionDescriptor { private $description = class phpDocumentor\Reflection\DocBlock\Description { private $bodyTemplate = ''; private $tags = [...] }; private $inlineTags = [] } }; private $servicesWithCustomSettings = class Symfony\Component\DependencyInjection\Argument\RewindableGenerator { private $generator = class Closure { virtual $closure = "$this->ContainerXfq2Hb3\{closure}" }; private $count = 2 }; private $apiSpecification = class phpDocumentor\Configuration\ApiSpecification { private $source = class phpDocumentor\Configuration\Source { private $dsn = class phpDocumentor\Dsn { private $dsn = '.'; private $uri = class League\Uri\Uri { ... }; private $parameters = [...] }; private $paths = [0 => class phpDocumentor\Path { ... }] }; private $output = '.'; private $ignore = ['hidden' => TRUE, 'symlinks' => TRUE, 'paths' => []]; private $extensions = [0 => 'php', 1 => 'php3', 2 => 'phtml']; private $visibility = [0 => 'public', 1 => 'protected', 2 => 'private']; private $defaultPackageName = 'Application'; private $includeSource = FALSE; private $markers = [0 => 'TODO', 1 => 'FIXME']; private $ignoreTags = []; private $examples = NULL; private $encoding = 'utf-8'; private $validate = FALSE } }; private $pipeline = class League\Pipeline\Pipeline { private $stages = [0 => class League\Pipeline\Pipeline { private $stages = [0 => class phpDocumentor\Pipeline\Stage\Configure { ... }, 1 => class phpDocumentor\Pipeline\Stage\TransformToPayload { ... }, 2 => class phpDocumentor\Pipeline\Stage\InitializeBuilderFromConfig { ... }, 3 => class phpDocumentor\Pipeline\Stage\Cache\PurgeCachesWhenForced { ... }]; private $processor = class League\Pipeline\FingersCrossedProcessor {  } }, 1 => class League\Pipeline\Pipeline { private $stages = []; private $processor = class League\Pipeline\FingersCrossedProcessor {  } }, 2 => class League\Pipeline\Pipeline { private $stages = [0 => class phpDocumentor\Pipeline\Stage\Parser\TransformToParserPayload { ... }, 1 => class phpDocumentor\Pipeline\Stage\Parser\CollectFiles { ... }, 2 => class phpDocumentor\Pipeline\Stage\Cache\GarbageCollectCache { ... }, 3 => class phpDocumentor\Pipeline\Stage\Cache\LoadProjectDescriptorFromCache { ... }, 4 => class phpDocumentor\Pipeline\Stage\Cache\LoadGuidesFromCache { ... }, 5 => class phpDocumentor\Pipeline\Stage\Parser\ParseFiles { ... }, 6 => class phpDocumentor\Pipeline\Stage\Parser\ParseGuides { ... }, 7 => class phpDocumentor\Pipeline\Stage\Cache\StoreProjectDescriptorToCache { ... }, 8 => class phpDocumentor\Pipeline\Stage\Cache\StoreGuidesToCache { ... }]; private $processor = class League\Pipeline\FingersCrossedProcessor {  } }, 3 => class League\Pipeline\Pipeline { private $stages = [0 => class phpDocumentor\Pipeline\Stage\Cache\LoadProjectDescriptorFromCache { ... }, 1 => class phpDocumentor\Pipeline\Stage\Compile { ... }, 2 => class phpDocumentor\Pipeline\Stage\Cache\LoadGuidesFromCache { ... }, 3 => class phpDocumentor\Pipeline\Stage\Transform { ... }]; private $processor = class League\Pipeline\FingersCrossedProcessor {  } }]; private $processor = class League\Pipeline\FingersCrossedProcessor {  } }; private $progressBar = class Symfony\Component\Console\Helper\ProgressBar { private $barWidth = 28; private $barChar = NULL; private $emptyBarChar = '-'; private $progressChar = '>'; private $format = ' %current%/%max% [%bar%] %percent:3s%%'; private $internalFormat = NULL; private $redrawFreq = NULL; private $writeCount = 6; private $lastWriteTime = 1678210059.7155; private $minSecondsBetweenRedraws = 0.04; private $maxSecondsBetweenRedraws = 1; private $output = class Symfony\Component\Console\Output\StreamOutput { private $stream = resource(159) of type (stream); private ${Symfony\Component\Console\Output\Output}verbosity = 32; private ${Symfony\Component\Console\Output\Output}formatter = class Symfony\Component\Console\Formatter\OutputFormatter { private $decorated = TRUE; private $styles = ['error' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { ... }, 'info' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { ... }, 'comment' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { ... }, 'question' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { ... }]; private $styleStack = class Symfony\Component\Console\Formatter\OutputFormatterStyleStack { private $styles = [...]; private $emptyStyle = class Symfony\Component\Console\Formatter\OutputFormatterStyle { ... } } } }; private $step = 20; private $max = 36; private $startTime = 1678210058; private $stepWidth = 2; private $percent = 0.55555555555556; private $formatLineCount = 0; private $messages = []; private $overwrite = TRUE; private $terminal = class Symfony\Component\Console\Terminal {  }; private $previousMessage = ' 18/36 [==============>-------------]  50%'; private $cursor = class Symfony\Component\Console\Cursor { private $output = class Symfony\Component\Console\Output\StreamOutput { private $stream = resource(159) of type (stream); private ${Symfony\Component\Console\Output\Output}verbosity = 32; private ${Symfony\Component\Console\Output\Output}formatter = class Symfony\Component\Console\Formatter\OutputFormatter { private $decorated = TRUE; private $styles = [...]; private $styleStack = class Symfony\Component\Console\Formatter\OutputFormatterStyleStack { ... } } }; private $input = resource(1) of type (stream) } }; private $transformerProgressBar = NULL; private $eventDispatcher = class Symfony\Component\EventDispatcher\EventDispatcher { private $listeners = ['kernel.response' => [0 => [0 => [...]], -1024 => [0 => [...]], -128 => [0 => [...]]], 'kernel.request' => [100 => [0 => [...]], 16 => [0 => [...]], 256 => [0 => [...]], 15 => [0 => [...]], 2048 => [0 => [...]], 32 => [0 => [...]]], 'kernel.finish_request' => [0 => [0 => [...], 1 => [...]], -15 => [0 => [...]]], 'kernel.controller_arguments' => [0 => [0 => [...]]], 'kernel.exception' => [0 => [0 => [...]], -128 => [0 => [...]], -64 => [0 => [...]]], 'console.error' => [-128 => [0 => [...]], 0 => [0 => [...]]], 'console.terminate' => [-128 => [0 => [...]], -255 => [0 => [...]]], 'console.command' => [2048 => [0 => [...]], 255 => [0 => [...]]], 'transformer.transformation.post' => [0 => [0 => class Closure { virtual $closure = "$this->phpDocumentor\Console\Command\Project\{closure}", ... }]]]; private $sorted = []; private $optimized = ['console.command' => [0 => class Closure { virtual $closure = "$this->configure" }, 1 => class Closure { virtual $closure = "$this->onCommand" }]] }; private ${Symfony\Component\Console\Command\Command}application = class phpDocumentor\Console\Application { private ${Symfony\Bundle\FrameworkBundle\Console\Application}kernel = class phpDocumentor\Kernel { protected $bundles = ['FrameworkBundle' => class Symfony\Bundle\FrameworkBundle\FrameworkBundle { protected $name = 'FrameworkBundle'; protected $extension = NULL; protected $path = NULL; private ${Symfony\Component\HttpKernel\Bundle\Bundle}namespace = 'Symfony\\Bundle\\FrameworkBundle'; protected $container = class ContainerXfq2Hb3\phpDocumentor_KernelProdContainer { ... } }, 'MonologBundle' => class Symfony\Bundle\MonologBundle\MonologBundle { protected $name = 'MonologBundle'; protected $extension = NULL; protected $path = NULL; private ${Symfony\Component\HttpKernel\Bundle\Bundle}namespace = 'Symfony\\Bundle\\MonologBundle'; protected $container = class ContainerXfq2Hb3\phpDocumentor_KernelProdContainer { ... } }, 'TacticianBundle' => class League\Tactician\Bundle\TacticianBundle { private $handlerMapping = class League\Tactician\Bundle\DependencyInjection\HandlerMapping\CompositeMapping { ... }; protected $name = 'TacticianBundle'; protected $extension = NULL; protected $path = NULL; private ${Symfony\Component\HttpKernel\Bundle\Bundle}namespace = 'League\\Tactician\\Bundle'; protected $container = class ContainerXfq2Hb3\phpDocumentor_KernelProdContainer { ... } }]; protected $container = class ContainerXfq2Hb3\phpDocumentor_KernelProdContainer { protected $containerDir = 'phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/var/cache/prod\\ContainerXfq2Hb3'; protected $targetDir = 'phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/var/cache/prod'; protected $parameters = ['kernel.project_dir' => 'phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar', 'kernel.environment' => 'prod', 'kernel.debug' => FALSE, 'kernel.logs_dir' => 'phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/var/log', 'kernel.bundles' => [...], 'kernel.bundles_metadata' => [...], 'kernel.charset' => 'UTF-8', 'kernel.container_class' => 'phpDocumentor_KernelProdContainer', 'container.autowiring.strict_mode' => TRUE, 'container.dumper.inline_class_loader' => TRUE, 'linker.substitutions' => [...], 'event_dispatcher.event_aliases' => [...], 'fragment.renderer.hinclude.global_template' => NULL, 'fragment.path' => '/_fragment', 'kernel.secret' => 'foobar', 'kernel.http_method_override' => TRUE, 'kernel.trusted_hosts' => [...], 'kernel.default_locale' => 'en', 'kernel.error_controller' => 'error_controller', 'debug.file_link_format' => NULL, 'data_collector.templates' => [...], 'debug.error_handler.throw_at' => 0, 'router.request_context.host' => 'localhost', 'router.request_context.scheme' => 'http', 'router.request_context.base_url' => '', 'router.resource' => 'kernel::loadRoutes', 'request_listener.http_port' => 80, 'request_listener.https_port' => 443, 'monolog.use_microseconds' => TRUE, 'monolog.swift_mailer.handlers' => [...], 'monolog.handlers_to_channels' => [...], 'console.command.ids' => [...]]; private $buildParameters = ['container.build_hash' => 'Xfq2Hb3', 'container.build_id' => 'f99fa181', 'container.build_time' => 1640715452]; protected $getService = class Closure { virtual $closure = "$this->getService" }; private $loadedDynamicParameters = ['kernel.runtime_environment' => FALSE, 'kernel.build_dir' => FALSE, 'kernel.cache_dir' => FALSE]; private $dynamicParameters = []; protected $parameterBag = NULL; protected $services = ['kernel' => ..., 'console.command_loader' => class Symfony\Component\Console\CommandLoader\ContainerCommandLoader { ... }, 'console.command.public_alias.phpDocumentor\Console\Command\Project\ListSettingsCommand' => class phpDocumentor\Console\Command\Project\ListSettingsCommand { ... }, 'router' => class Symfony\Bundle\FrameworkBundle\Routing\Router { ... }, 'tactician.commandbus.default' => class League\Tactician\CommandBus { ... }, 'event_dispatcher' => class Symfony\Component\EventDispatcher\EventDispatcher { ... }, 'console.command.public_alias.phpDocumentor\Console\Command\Project\RunCommand' => ..., 'console.command.public_alias.tactician.command.debug' => class League\Tactician\Bundle\Command\DebugCommand { ... }]; protected $privates = ['phpDocumentor\Descriptor\Filter\StripIgnore' => class phpDocumentor\Descriptor\Filter\StripIgnore { ... }, 'phpDocumentor\Descriptor\Filter\StripIgnoredTags' => class phpDocumentor\Descriptor\Filter\StripIgnoredTags { ... }, 'phpDocumentor\Descriptor\Filter\StripInternal' => class phpDocumentor\Descriptor\Filter\StripInternal { ... }, 'phpDocumentor\Descriptor\Filter\StripOnVisibility' => class phpDocumentor\Descriptor\Filter\StripOnVisibility { ... }, 'phpDocumentor\Descriptor\ProjectDescriptorBuilder' => class phpDocumentor\Descriptor\ProjectDescriptorBuilder { ... }, 'monolog.logger' => class Symfony\Bridge\Monolog\Logger { ... }, 'monolog.handler.main' => class Symfony\Bridge\Monolog\Handler\ConsoleHandler { ... }, 'files' => class phpDocumentor\Parser\Cache\FilesystemAdapter { ... }, 'descriptors' => class phpDocumentor\Parser\Cache\FilesystemAdapter { ... }, 'router.request_context' => class Symfony\Component\Routing\RequestContext { ... }, 'router.expression_language_provider' => class Symfony\Component\Routing\Matcher\ExpressionLanguageProvider { ... }, 'slugger' => class Symfony\Component\String\Slugger\AsciiSlugger { ... }, 'phpDocumentor\Transformer\Router\Router' => class phpDocumentor\Transformer\Router\Router { ... }, 'League\CommonMark\Extension\DisallowedRawHtml\DisallowedRawHtmlExtension' => class League\CommonMark\Extension\DisallowedRawHtml\DisallowedRawHtmlExtension { ... }, 'phpDocumentor\Transformer\Writer\Twig\EnvironmentFactory' => class phpDocumentor\Transformer\Writer\Twig\EnvironmentFactory { ... }, 'phpDocumentor\Pipeline\Stage\Configure' => class phpDocumentor\Pipeline\Stage\Configure { ... }, 'phpDocumentor\Pipeline\Stage\TransformToPayload' => class phpDocumentor\Pipeline\Stage\TransformToPayload { ... }, 'phpDocumentor\Pipeline\Stage\InitializeBuilderFromConfig' => class phpDocumentor\Pipeline\Stage\InitializeBuilderFromConfig { ... }, 'phpDocumentor\Pipeline\Stage\Cache\PurgeCachesWhenForced' => class phpDocumentor\Pipeline\Stage\Cache\PurgeCachesWhenForced { ... }, 'phpdoc.configuration.pipeline' => class League\Pipeline\Pipeline { ... }, 'phpdoc.cache.pipeline' => class League\Pipeline\Pipeline { ... }, 'phpDocumentor\Pipeline\Stage\Parser\TransformToParserPayload' => class phpDocumentor\Pipeline\Stage\Parser\TransformToParserPayload { ... }, 'phpDocumentor\Parser\FlySystemFactory' => class phpDocumentor\Parser\FlySystemFactory { ... }, 'phpDocumentor\Pipeline\Stage\Parser\CollectFiles' => class phpDocumentor\Pipeline\Stage\Parser\CollectFiles { ... }, 'phpDocumentor\Descriptor\Cache\ProjectDescriptorMapper' => class phpDocumentor\Descriptor\Cache\ProjectDescriptorMapper { ... }, 'phpDocumentor\Pipeline\Stage\Cache\GarbageCollectCache' => class phpDocumentor\Pipeline\Stage\Cache\GarbageCollectCache { ... }, 'phpDocumentor\Pipeline\Stage\Cache\LoadProjectDescriptorFromCache' => class phpDocumentor\Pipeline\Stage\Cache\LoadProjectDescriptorFromCache { ... }, 'phpDocumentor\Pipeline\Stage\Cache\LoadGuidesFromCache' => class phpDocumentor\Pipeline\Stage\Cache\LoadGuidesFromCache { ... }, 'debug.stopwatch' => class Symfony\Component\Stopwatch\Stopwatch { ... }, 'phpDocumentor\Parser\Middleware\StopwatchMiddleware' => class phpDocumentor\Parser\Middleware\StopwatchMiddleware { ... }, 'phpDocumentor\Parser\Middleware\EmittingMiddleware' => class phpDocumentor\Parser\Middleware\EmittingMiddleware { ... }, 'phpDocumentor\Parser\Middleware\CacheMiddleware' => class phpDocumentor\Parser\Middleware\CacheMiddleware { ... }, 'phpDocumentor\Parser\Middleware\ErrorHandlingMiddleware' => class phpDocumentor\Parser\Middleware\ErrorHandlingMiddleware { ... }, 'phpDocumentor\Parser\Middleware\ReEncodingMiddleware' => class phpDocumentor\Parser\Middleware\ReEncodingMiddleware { ... }, 'phpDocumentor\Parser\Parser' => class phpDocumentor\Parser\Parser { ... }, 'phpDocumentor\Pipeline\Stage\Parser\ParseFiles' => class phpDocumentor\Pipeline\Stage\Parser\ParseFiles { ... }, 'phpDocumentor\Pipeline\Stage\Parser\ParseGuides' => class phpDocumentor\Pipeline\Stage\Parser\ParseGuides { ... }, 'phpDocumentor\Pipeline\Stage\Cache\StoreProjectDescriptorToCache' => class phpDocumentor\Pipeline\Stage\Cache\StoreProjectDescriptorToCache { ... }, 'phpDocumentor\Pipeline\Stage\Cache\StoreGuidesToCache' => class phpDocumentor\Pipeline\Stage\Cache\StoreGuidesToCache { ... }, 'phpdoc.parse.pipeline' => class League\Pipeline\Pipeline { ... }, 'phpDocumentor\Pipeline\Stage\Compile' => class phpDocumentor\Pipeline\Stage\Compile { ... }, 'phpDocumentor\Transformer\Writer\FileIo' => class phpDocumentor\Transformer\Writer\FileIo { ... }, 'phpDocumentor\Transformer\Writer\Graph\PlantumlRenderer' => class phpDocumentor\Transformer\Writer\Graph\PlantumlRenderer { ... }, 'phpDocumentor\Transformer\Writer\Graph' => class phpDocumentor\Transformer\Writer\Graph { ... }, 'phpDocumentor\Guides\Renderer' => class phpDocumentor\Guides\Renderer { ... }, 'phpDocumentor\Transformer\Writer\RenderGuide' => class phpDocumentor\Transformer\Writer\RenderGuide { ... }, 'phpDocumentor\Transformer\Writer\PathGenerator' => class phpDocumentor\Transformer\Writer\PathGenerator { ... }, 'phpDocumentor\Transformer\Writer\Sourcecode' => class phpDocumentor\Transformer\Writer\Sourcecode { ... }, 'phpDocumentor\Transformer\Writer\Twig' => class phpDocumentor\Transformer\Writer\Twig { ... }, 'phpDocumentor\Pipeline\Stage\Transform' => class phpDocumentor\Pipeline\Stage\Transform { ... }, 'phpdoc.transform.pipeline' => class League\Pipeline\Pipeline { ... }, 'debug.file_link_formatter' => class Symfony\Component\HttpKernel\Debug\FileLinkFormatter { ... }, 'debug.debug_handlers_listener' => class Symfony\Component\HttpKernel\EventListener\DebugHandlersListener { ... }]; protected $fileMap = ['.container.private.cache_clearer' => 'get_Container_Private_CacheClearerService', '.container.private.filesystem' => 'get_Container_Private_FilesystemService', 'Symfony\Bundle\FrameworkBundle\Controller\RedirectController' => 'getRedirectControllerService', 'Symfony\Bundle\FrameworkBundle\Controller\TemplateController' => 'getTemplateControllerService', 'cache.app' => 'getCache_AppService', 'cache.app_clearer' => 'getCache_AppClearerService', 'cache.global_clearer' => 'getCache_GlobalClearerService', 'cache.system' => 'getCache_SystemService', 'cache.system_clearer' => 'getCache_SystemClearerService', 'cache_warmer' => 'getCacheWarmerService', 'console.command.public_alias.phpDocumentor\Console\Command\Project\ListSettingsCommand' => 'getListSettingsCommandService', 'console.command.public_alias.phpDocumentor\Console\Command\Project\RunCommand' => 'getRunCommandService', 'console.command.public_alias.tactician.command.debug' => 'getConsole_Command_PublicAlias_Tactician_Command_DebugService', 'console.command_loader' => 'getConsole_CommandLoaderService', 'container.env_var_processors_locator' => 'getContainer_EnvVarProcessorsLocatorService', 'error_controller' => 'getErrorControllerService', 'routing.loader' => 'getRouting_LoaderService', 'services_resetter' => 'getServicesResetterService', 'tactician.commandbus.default' => 'getTactician_Commandbus_DefaultService']; protected $methodMap = ['event_dispatcher' => 'getEventDispatcherService', 'http_kernel' => 'getHttpKernelService', 'request_stack' => 'getRequestStackService', 'router' => 'getRouterService', 'cache_clearer' => 'getCacheClearerService', 'filesystem' => 'getFilesystemService']; protected $factories = []; protected $aliases = []; protected $loading = []; protected $resolving = []; protected $syntheticIds = ['kernel' => TRUE]; private ${Symfony\Component\DependencyInjection\Container}envCache = []; private ${Symfony\Component\DependencyInjection\Container}compiled = FALSE; private ${Symfony\Component\DependencyInjection\Container}getEnv = NULL }; protected $environment = 'prod'; protected $debug = FALSE; protected $booted = TRUE; protected $startTime = NULL; private ${Symfony\Component\HttpKernel\Kernel}projectDir = 'phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar'; private ${Symfony\Component\HttpKernel\Kernel}warmupDir = NULL; private ${Symfony\Component\HttpKernel\Kernel}requestStackSize = 0; private ${Symfony\Component\HttpKernel\Kernel}resetServices = FALSE }; private ${Symfony\Bundle\FrameworkBundle\Console\Application}commandsRegistered = TRUE; private ${Symfony\Bundle\FrameworkBundle\Console\Application}registrationErrors = []; private ${Symfony\Component\Console\Application}commands = ['help' => class Symfony\Component\Console\Command\HelpCommand { private $command = NULL; private ${Symfony\Component\Console\Command\Command}application = ...; private ${Symfony\Component\Console\Command\Command}name = 'help'; private ${Symfony\Component\Console\Command\Command}processTitle = NULL; private ${Symfony\Component\Console\Command\Command}aliases = []; private ${Symfony\Component\Console\Command\Command}definition = class Symfony\Component\Console\Input\InputDefinition { private $arguments = [...]; private $requiredCount = 0; private $lastArrayArgument = NULL; private $lastOptionalArgument = class Symfony\Component\Console\Input\InputArgument { ... }; private $options = [...]; private $negations = [...]; private $shortcuts = [...] }; private ${Symfony\Component\Console\Command\Command}hidden = FALSE; private ${Symfony\Component\Console\Command\Command}help = 'The <info>%command.name%</info> command displays help for a given command:\n\n  <info>%command.full_name% list</info>\n\nYou can also output the help in other formats by using the <comment>--format</comment> option:\n\n  <info>%command.full_name% --format=xml list</info>\n\nTo display the list of available commands, please use the <info>list</info> command.'; private ${Symfony\Component\Console\Command\Command}description = 'Display help for a command'; private ${Symfony\Component\Console\Command\Command}fullDefinition = NULL; private ${Symfony\Component\Console\Command\Command}ignoreValidationErrors = TRUE; private ${Symfony\Component\Console\Command\Command}code = NULL; private ${Symfony\Component\Console\Command\Command}synopsis = []; private ${Symfony\Component\Console\Command\Command}usages = []; private ${Symfony\Component\Console\Command\Command}helperSet = class Symfony\Component\Console\Helper\HelperSet { private $helpers = [...]; private $command = NULL } }, 'list' => class Symfony\Component\Console\Command\ListCommand { private ${Symfony\Component\Console\Command\Command}application = ...; private ${Symfony\Component\Console\Command\Command}name = 'list'; private ${Symfony\Component\Console\Command\Command}processTitle = NULL; private ${Symfony\Component\Console\Command\Command}aliases = []; private ${Symfony\Component\Console\Command\Command}definition = class Symfony\Component\Console\Input\InputDefinition { private $arguments = [...]; private $requiredCount = 0; private $lastArrayArgument = NULL; private $lastOptionalArgument = class Symfony\Component\Console\Input\InputArgument { ... }; private $options = [...]; private $negations = [...]; private $shortcuts = [...] }; private ${Symfony\Component\Console\Command\Command}hidden = FALSE; private ${Symfony\Component\Console\Command\Command}help = 'The <info>%command.name%</info> command lists all commands:\n\n  <info>%command.full_name%</info>\n\nYou can also display the commands for a specific namespace:\n\n  <info>%command.full_name% test</info>\n\nYou can also output the information in other formats by using the <comment>--format</comment> option:\n\n  <info>%command.full_name% --format=xml</info>\n\nIt\'s also possible to get raw list of commands (useful for embedding command runner):\n\n  <info>%command.full_name% --raw</info>'; private ${Symfony\Component\Console\Command\Command}description = 'List commands'; private ${Symfony\Component\Console\Command\Command}fullDefinition = NULL; private ${Symfony\Component\Console\Command\Command}ignoreValidationErrors = FALSE; private ${Symfony\Component\Console\Command\Command}code = NULL; private ${Symfony\Component\Console\Command\Command}synopsis = []; private ${Symfony\Component\Console\Command\Command}usages = []; private ${Symfony\Component\Console\Command\Command}helperSet = class Symfony\Component\Console\Helper\HelperSet { private $helpers = [...]; private $command = NULL } }, 'settings:list' => class phpDocumentor\Console\Command\Project\ListSettingsCommand { private $servicesWithCustomSettings = class Symfony\Component\DependencyInjection\Argument\RewindableGenerator { private $generator = class Closure { virtual $closure = "$this->ContainerXfq2Hb3\{closure}", ... }; private $count = 2 }; private ${Symfony\Component\Console\Command\Command}application = ...; private ${Symfony\Component\Console\Command\Command}name = 'settings:list'; private ${Symfony\Component\Console\Command\Command}processTitle = NULL; private ${Symfony\Component\Console\Command\Command}aliases = []; private ${Symfony\Component\Console\Command\Command}definition = class Symfony\Component\Console\Input\InputDefinition { private $arguments = [...]; private $requiredCount = 0; private $lastArrayArgument = NULL; private $lastOptionalArgument = NULL; private $options = [...]; private $negations = [...]; private $shortcuts = [...] }; private ${Symfony\Component\Console\Command\Command}hidden = FALSE; private ${Symfony\Component\Console\Command\Command}help = ''; private ${Symfony\Component\Console\Command\Command}description = ''; private ${Symfony\Component\Console\Command\Command}fullDefinition = NULL; private ${Symfony\Component\Console\Command\Command}ignoreValidationErrors = FALSE; private ${Symfony\Component\Console\Command\Command}code = NULL; private ${Symfony\Component\Console\Command\Command}synopsis = []; private ${Symfony\Component\Console\Command\Command}usages = []; private ${Symfony\Component\Console\Command\Command}helperSet = class Symfony\Component\Console\Helper\HelperSet { private $helpers = [...]; private $command = NULL } }, 'project:run' => ..., 'run' => ..., 'debug:tactician' => class League\Tactician\Bundle\Command\DebugCommand { private $mappings = ['default' => [...]]; private ${Symfony\Component\Console\Command\Command}application = ...; private ${Symfony\Component\Console\Command\Command}name = 'debug:tactician'; private ${Symfony\Component\Console\Command\Command}processTitle = NULL; private ${Symfony\Component\Console\Command\Command}aliases = []; private ${Symfony\Component\Console\Command\Command}definition = class Symfony\Component\Console\Input\InputDefinition { private $arguments = [...]; private $requiredCount = 0; private $lastArrayArgument = NULL; private $lastOptionalArgument = NULL; private $options = [...]; private $negations = [...]; private $shortcuts = [...] }; private ${Symfony\Component\Console\Command\Command}hidden = FALSE; private ${Symfony\Component\Console\Command\Command}help = ''; private ${Symfony\Component\Console\Command\Command}description = ''; private ${Symfony\Component\Console\Command\Command}fullDefinition = NULL; private ${Symfony\Component\Console\Command\Command}ignoreValidationErrors = FALSE; private ${Symfony\Component\Console\Command\Command}code = NULL; private ${Symfony\Component\Console\Command\Command}synopsis = []; private ${Symfony\Component\Console\Command\Command}usages = []; private ${Symfony\Component\Console\Command\Command}helperSet = class Symfony\Component\Console\Helper\HelperSet { private $helpers = [...]; private $command = NULL } }]; private ${Symfony\Component\Console\Application}wantHelps = FALSE; private ${Symfony\Component\Console\Application}runningCommand = ...; private ${Symfony\Component\Console\Application}name = 'phpDocumentor'; private ${Symfony\Component\Console\Application}version = 'v3.2.1'; private ${Symfony\Component\Console\Application}commandLoader = class Symfony\Component\Console\CommandLoader\ContainerCommandLoader { private $container = class Symfony\Component\DependencyInjection\Argument\ServiceLocator { private $factory = class Closure { virtual $closure = "$this->getService" }; private $serviceMap = ['console.command.about' => [...], 'console.command.assets_install' => [...], 'console.command.cache_clear' => [...], 'console.command.cache_pool_clear' => [...], 'console.command.cache_pool_delete' => [...], 'console.command.cache_pool_list' => [...], 'console.command.cache_pool_prune' => [...], 'console.command.cache_warmup' => [...], 'console.command.config_debug' => [...], 'console.command.config_dump_reference' => [...], 'console.command.container_debug' => [...], 'console.command.container_lint' => [...], 'console.command.debug_autowiring' => [...], 'console.command.event_dispatcher_debug' => [...], 'console.command.router_debug' => [...], 'console.command.router_match' => [...], 'console.command.secrets_decrypt_to_local' => [...], 'console.command.secrets_encrypt_from_local' => [...], 'console.command.secrets_generate_key' => [...], 'console.command.secrets_list' => [...], 'console.command.secrets_remove' => [...], 'console.command.secrets_set' => [...], 'console.command.yaml_lint' => [...]]; private $serviceTypes = ['console.command.about' => '?', 'console.command.assets_install' => '?', 'console.command.cache_clear' => '?', 'console.command.cache_pool_clear' => '?', 'console.command.cache_pool_delete' => '?', 'console.command.cache_pool_list' => '?', 'console.command.cache_pool_prune' => '?', 'console.command.cache_warmup' => '?', 'console.command.config_debug' => '?', 'console.command.config_dump_reference' => '?', 'console.command.container_debug' => '?', 'console.command.container_lint' => '?', 'console.command.debug_autowiring' => '?', 'console.command.event_dispatcher_debug' => '?', 'console.command.router_debug' => '?', 'console.command.router_match' => '?', 'console.command.secrets_decrypt_to_local' => '?', 'console.command.secrets_encrypt_from_local' => '?', 'console.command.secrets_generate_key' => '?', 'console.command.secrets_list' => '?', 'console.command.secrets_remove' => '?', 'console.command.secrets_set' => '?', 'console.command.yaml_lint' => '?']; private ${Symfony\Component\DependencyInjection\ServiceLocator}externalId = NULL; private ${Symfony\Component\DependencyInjection\ServiceLocator}container = NULL; private ${Symfony\Component\DependencyInjection\ServiceLocator}factories = ['console.command.about' => [...], 'console.command.assets_install' => [...], 'console.command.cache_clear' => [...], 'console.command.cache_pool_clear' => [...], 'console.command.cache_pool_delete' => [...], 'console.command.cache_pool_list' => [...], 'console.command.cache_pool_prune' => [...], 'console.command.cache_warmup' => [...], 'console.command.config_debug' => [...], 'console.command.config_dump_reference' => [...], 'console.command.container_debug' => [...], 'console.command.container_lint' => [...], 'console.command.debug_autowiring' => [...], 'console.command.event_dispatcher_debug' => [...], 'console.command.router_debug' => [...], 'console.command.router_match' => [...], 'console.command.secrets_decrypt_to_local' => [...], 'console.command.secrets_encrypt_from_local' => [...], 'console.command.secrets_generate_key' => [...], 'console.command.secrets_list' => [...], 'console.command.secrets_remove' => [...], 'console.command.secrets_set' => [...], 'console.command.yaml_lint' => [...]]; private ${Symfony\Component\DependencyInjection\ServiceLocator}loading = []; private ${Symfony\Component\DependencyInjection\ServiceLocator}providedTypes = NULL }; private $commandMap = ['about' => 'console.command.about', 'assets:install' => 'console.command.assets_install', 'cache:clear' => 'console.command.cache_clear', 'cache:pool:clear' => 'console.command.cache_pool_clear', 'cache:pool:prune' => 'console.command.cache_pool_prune', 'cache:pool:delete' => 'console.command.cache_pool_delete', 'cache:pool:list' => 'console.command.cache_pool_list', 'cache:warmup' => 'console.command.cache_warmup', 'debug:config' => 'console.command.config_debug', 'config:dump-reference' => 'console.command.config_dump_reference', 'debug:container' => 'console.command.container_debug', 'lint:container' => 'console.command.container_lint', 'debug:autowiring' => 'console.command.debug_autowiring', 'debug:event-dispatcher' => 'console.command.event_dispatcher_debug', 'debug:router' => 'console.command.router_debug', 'router:match' => 'console.command.router_match', 'lint:yaml' => 'console.command.yaml_lint', 'secrets:set' => 'console.command.secrets_set', 'secrets:remove' => 'console.command.secrets_remove', 'secrets:generate-keys' => 'console.command.secrets_generate_key', 'secrets:list' => 'console.command.secrets_list', 'secrets:decrypt-to-local' => 'console.command.secrets_decrypt_to_local', 'secrets:encrypt-from-local' => 'console.command.secrets_encrypt_from_local'] }; private ${Symfony\Component\Console\Application}catchExceptions = TRUE; private ${Symfony\Component\Console\Application}autoExit = TRUE; private ${Symfony\Component\Console\Application}definition = class Symfony\Component\Console\Input\InputDefinition { private $arguments = ['command' => class Symfony\Component\Console\Input\InputArgument { private $name = 'command'; private $mode = 1; private $default = NULL; private $description = 'The command to execute' }]; private $requiredCount = 1; private $lastArrayArgument = NULL; private $lastOptionalArgument = NULL; private $options = ['help' => class Symfony\Component\Console\Input\InputOption { private $name = 'help'; private $shortcut = 'h'; private $mode = 1; private $default = FALSE; private $description = 'Display help for the given command. When no command is given display help for the <info>list</info> command' }, 'quiet' => class Symfony\Component\Console\Input\InputOption { private $name = 'quiet'; private $shortcut = 'q'; private $mode = 1; private $default = FALSE; private $description = 'Do not output any message' }, 'verbose' => class Symfony\Component\Console\Input\InputOption { private $name = 'verbose'; private $shortcut = 'v|vv|vvv'; private $mode = 1; private $default = FALSE; private $description = 'Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug' }, 'version' => class Symfony\Component\Console\Input\InputOption { private $name = 'version'; private $shortcut = 'V'; private $mode = 1; private $default = FALSE; private $description = 'Display this application version' }, 'ansi' => class Symfony\Component\Console\Input\InputOption { private $name = 'ansi'; private $shortcut = NULL; private $mode = 16; private $default = FALSE; private $description = 'Force (or disable --no-ansi) ANSI output' }, 'no-interaction' => class Symfony\Component\Console\Input\InputOption { private $name = 'no-interaction'; private $shortcut = 'n'; private $mode = 1; private $default = FALSE; private $description = 'Do not ask any interactive question' }, 'config' => class Symfony\Component\Console\Input\InputOption { private $name = 'config'; private $shortcut = 'c'; private $mode = 4; private $default = NULL; private $description = 'Location of a custom configuration file' }, 'log' => class Symfony\Component\Console\Input\InputOption { private $name = 'log'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Log file to write to' }, 'env' => class Symfony\Component\Console\Input\InputOption { private $name = 'env'; private $shortcut = 'e'; private $mode = 2; private $default = 'prod'; private $description = 'The Environment name.' }, 'no-debug' => class Symfony\Component\Console\Input\InputOption { private $name = 'no-debug'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Switch off debug mode.' }]; private $negations = ['no-ansi' => 'ansi']; private $shortcuts = ['h' => 'help', 'q' => 'quiet', 'v' => 'verbose', 'vv' => 'verbose', 'vvv' => 'verbose', 'V' => 'version', 'n' => 'no-interaction', 'c' => 'config', 'e' => 'env'] }; private ${Symfony\Component\Console\Application}helperSet = class Symfony\Component\Console\Helper\HelperSet { private $helpers = ['formatter' => class Symfony\Component\Console\Helper\FormatterHelper { protected $helperSet = ... }, 'debug_formatter' => class Symfony\Component\Console\Helper\DebugFormatterHelper { private $colors = [...]; private $started = [...]; private $count = -1; protected $helperSet = ... }, 'process' => class Symfony\Component\Console\Helper\ProcessHelper { protected $helperSet = ... }, 'question' => class Symfony\Component\Console\Helper\QuestionHelper { private $inputStream = NULL; protected $helperSet = ... }]; private $command = NULL }; private ${Symfony\Component\Console\Application}dispatcher = class Symfony\Component\EventDispatcher\EventDispatcher { private $listeners = ['kernel.response' => [0 => [...], -1024 => [...], -128 => [...]], 'kernel.request' => [100 => [...], 16 => [...], 256 => [...], 15 => [...], 2048 => [...], 32 => [...]], 'kernel.finish_request' => [0 => [...], -15 => [...]], 'kernel.controller_arguments' => [0 => [...]], 'kernel.exception' => [0 => [...], -128 => [...], -64 => [...]], 'console.error' => [-128 => [...], 0 => [...]], 'console.terminate' => [-128 => [...], -255 => [...]], 'console.command' => [2048 => [...], 255 => [...]], 'transformer.transformation.post' => [0 => [...]]]; private $sorted = []; private $optimized = ['console.command' => [0 => class Closure { virtual $closure = "$this->configure", ... }, 1 => class Closure { virtual $closure = "$this->onCommand", ... }]] }; private ${Symfony\Component\Console\Application}terminal = class Symfony\Component\Console\Terminal {  }; private ${Symfony\Component\Console\Application}defaultCommand = 'list'; private ${Symfony\Component\Console\Application}singleCommand = FALSE; private ${Symfony\Component\Console\Application}initialized = TRUE; private ${Symfony\Component\Console\Application}signalRegistry = NULL; private ${Symfony\Component\Console\Application}signalsToDispatchEvent = [] }; private ${Symfony\Component\Console\Command\Command}name = 'project:run'; private ${Symfony\Component\Console\Command\Command}processTitle = NULL; private ${Symfony\Component\Console\Command\Command}aliases = [0 => 'run']; private ${Symfony\Component\Console\Command\Command}definition = class Symfony\Component\Console\Input\InputDefinition { private $arguments = []; private $requiredCount = 0; private $lastArrayArgument = NULL; private $lastOptionalArgument = NULL; private $options = ['target' => class Symfony\Component\Console\Input\InputOption { private $name = 'target'; private $shortcut = 't'; private $mode = 4; private $default = NULL; private $description = 'Path where to store the generated output' }, 'cache-folder' => class Symfony\Component\Console\Input\InputOption { private $name = 'cache-folder'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Path where to store the cache files' }, 'filename' => class Symfony\Component\Console\Input\InputOption { private $name = 'filename'; private $shortcut = 'f'; private $mode = 12; private $default = []; private $description = 'File to parse, glob patterns are supported. Provide multiple options of this type to add\n                multiple files.' }, 'directory' => class Symfony\Component\Console\Input\InputOption { private $name = 'directory'; private $shortcut = 'd'; private $mode = 12; private $default = []; private $description = 'directory to parse, glob patterns are supported. Provide multiple options of this type to add\n                multiple directories.' }, 'encoding' => class Symfony\Component\Console\Input\InputOption { private $name = 'encoding'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'encoding to be used to interpret source files with' }, 'extensions' => class Symfony\Component\Console\Input\InputOption { private $name = 'extensions'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Provide multiple options of this type to add multiple extensions. default is php' }, 'ignore' => class Symfony\Component\Console\Input\InputOption { private $name = 'ignore'; private $shortcut = 'i'; private $mode = 12; private $default = []; private $description = 'File(s) and directories (relative to the source-code directory) that will be ignored. Glob patterns are supported. Add multiple options of this type of add more ignore patterns' }, 'ignore-tags' => class Symfony\Component\Console\Input\InputOption { private $name = 'ignore-tags'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Tag that will be ignored, defaults to none. package, subpackage and ignore may not be ignored. Add multiple options of this type to ignore multiple tags.' }, 'hidden' => class Symfony\Component\Console\Input\InputOption { private $name = 'hidden'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Use this option to tell phpDocumentor to parse files and directories that begin with a period (.), by default these are ignored' }, 'ignore-symlinks' => class Symfony\Component\Console\Input\InputOption { private $name = 'ignore-symlinks'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Ignore symlinks to other files or directories, default is on' }, 'markers' => class Symfony\Component\Console\Input\InputOption { private $name = 'markers'; private $shortcut = 'm'; private $mode = 12; private $default = []; private $description = 'Comma-separated list of markers/tags to filter' }, 'title' => class Symfony\Component\Console\Input\InputOption { private $name = 'title'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Sets the title for this project; default is the phpDocumentor logo' }, 'force' => class Symfony\Component\Console\Input\InputOption { private $name = 'force'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Forces a full build of the documentation, does not increment existing documentation' }, 'validate' => class Symfony\Component\Console\Input\InputOption { private $name = 'validate'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Validates every processed file using PHP Lint, costs a lot of performance' }, 'visibility' => class Symfony\Component\Console\Input\InputOption { private $name = 'visibility'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Specifies the parse visibility that should be displayed in the documentation. Add multiple options of\n                this type to specify multiple levels.("public,protected")' }, 'defaultpackagename' => class Symfony\Component\Console\Input\InputOption { private $name = 'defaultpackagename'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Name to use for the default package.' }, 'sourcecode' => class Symfony\Component\Console\Input\InputOption { private $name = 'sourcecode'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Whether to include syntax highlighted source code' }, 'template' => class Symfony\Component\Console\Input\InputOption { private $name = 'template'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Name of the template to use (optional)' }, 'examples-dir' => class Symfony\Component\Console\Input\InputOption { private $name = 'examples-dir'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Directory to seacher for example files referenced by @example tags' }, 'setting' => class Symfony\Component\Console\Input\InputOption { private $name = 'setting'; private $shortcut = 's'; private $mode = 12; private $default = []; private $description = 'Provide custom setting(s) as "key=value", run again with <info>--list-settings</info> for a list' }, 'list-settings' => class Symfony\Component\Console\Input\InputOption { private $name = 'list-settings'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Returns a list of available settings' }, 'parseprivate' => class Symfony\Component\Console\Input\InputOption { private $name = 'parseprivate'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Whether to parse DocBlocks marked with @internal tag' }]; private $negations = []; private $shortcuts = ['t' => 'target', 'f' => 'filename', 'd' => 'directory', 'i' => 'ignore', 'm' => 'markers', 's' => 'setting'] }; private ${Symfony\Component\Console\Command\Command}hidden = FALSE; private ${Symfony\Component\Console\Command\Command}help = '                phpDocumentor creates documentation from PHP source files. The simplest way\n                to use it is:\n\n                    <info>$ phpdoc run -d [directory to parse] -t [output directory]</info>\n\n                This will parse every file ending with .php in <directory\n                to parse> and then output a HTML site containing easily readable documentation\n                in <output directory>.\n\n                phpDocumentor will try to look for a phpdoc.dist.xml or phpdoc.xml file'...; private ${Symfony\Component\Console\Command\Command}description = 'Parses and transforms the given files to a specified location'; private ${Symfony\Component\Console\Command\Command}fullDefinition = class Symfony\Component\Console\Input\InputDefinition { private $arguments = ['command' => class Symfony\Component\Console\Input\InputArgument { private $name = 'command'; private $mode = 1; private $default = NULL; private $description = 'The command to execute' }]; private $requiredCount = 1; private $lastArrayArgument = NULL; private $lastOptionalArgument = NULL; private $options = ['target' => class Symfony\Component\Console\Input\InputOption { private $name = 'target'; private $shortcut = 't'; private $mode = 4; private $default = NULL; private $description = 'Path where to store the generated output' }, 'cache-folder' => class Symfony\Component\Console\Input\InputOption { private $name = 'cache-folder'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Path where to store the cache files' }, 'filename' => class Symfony\Component\Console\Input\InputOption { private $name = 'filename'; private $shortcut = 'f'; private $mode = 12; private $default = []; private $description = 'File to parse, glob patterns are supported. Provide multiple options of this type to add\n                multiple files.' }, 'directory' => class Symfony\Component\Console\Input\InputOption { private $name = 'directory'; private $shortcut = 'd'; private $mode = 12; private $default = []; private $description = 'directory to parse, glob patterns are supported. Provide multiple options of this type to add\n                multiple directories.' }, 'encoding' => class Symfony\Component\Console\Input\InputOption { private $name = 'encoding'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'encoding to be used to interpret source files with' }, 'extensions' => class Symfony\Component\Console\Input\InputOption { private $name = 'extensions'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Provide multiple options of this type to add multiple extensions. default is php' }, 'ignore' => class Symfony\Component\Console\Input\InputOption { private $name = 'ignore'; private $shortcut = 'i'; private $mode = 12; private $default = []; private $description = 'File(s) and directories (relative to the source-code directory) that will be ignored. Glob patterns are supported. Add multiple options of this type of add more ignore patterns' }, 'ignore-tags' => class Symfony\Component\Console\Input\InputOption { private $name = 'ignore-tags'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Tag that will be ignored, defaults to none. package, subpackage and ignore may not be ignored. Add multiple options of this type to ignore multiple tags.' }, 'hidden' => class Symfony\Component\Console\Input\InputOption { private $name = 'hidden'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Use this option to tell phpDocumentor to parse files and directories that begin with a period (.), by default these are ignored' }, 'ignore-symlinks' => class Symfony\Component\Console\Input\InputOption { private $name = 'ignore-symlinks'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Ignore symlinks to other files or directories, default is on' }, 'markers' => class Symfony\Component\Console\Input\InputOption { private $name = 'markers'; private $shortcut = 'm'; private $mode = 12; private $default = []; private $description = 'Comma-separated list of markers/tags to filter' }, 'title' => class Symfony\Component\Console\Input\InputOption { private $name = 'title'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Sets the title for this project; default is the phpDocumentor logo' }, 'force' => class Symfony\Component\Console\Input\InputOption { private $name = 'force'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Forces a full build of the documentation, does not increment existing documentation' }, 'validate' => class Symfony\Component\Console\Input\InputOption { private $name = 'validate'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Validates every processed file using PHP Lint, costs a lot of performance' }, 'visibility' => class Symfony\Component\Console\Input\InputOption { private $name = 'visibility'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Specifies the parse visibility that should be displayed in the documentation. Add multiple options of\n                this type to specify multiple levels.("public,protected")' }, 'defaultpackagename' => class Symfony\Component\Console\Input\InputOption { private $name = 'defaultpackagename'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Name to use for the default package.' }, 'sourcecode' => class Symfony\Component\Console\Input\InputOption { private $name = 'sourcecode'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Whether to include syntax highlighted source code' }, 'template' => class Symfony\Component\Console\Input\InputOption { private $name = 'template'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Name of the template to use (optional)' }, 'examples-dir' => class Symfony\Component\Console\Input\InputOption { private $name = 'examples-dir'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Directory to seacher for example files referenced by @example tags' }, 'setting' => class Symfony\Component\Console\Input\InputOption { private $name = 'setting'; private $shortcut = 's'; private $mode = 12; private $default = []; private $description = 'Provide custom setting(s) as "key=value", run again with <info>--list-settings</info> for a list' }, 'list-settings' => class Symfony\Component\Console\Input\InputOption { private $name = 'list-settings'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Returns a list of available settings' }, 'parseprivate' => class Symfony\Component\Console\Input\InputOption { private $name = 'parseprivate'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Whether to parse DocBlocks marked with @internal tag' }, 'help' => class Symfony\Component\Console\Input\InputOption { private $name = 'help'; private $shortcut = 'h'; private $mode = 1; private $default = FALSE; private $description = 'Display help for the given command. When no command is given display help for the <info>list</info> command' }, 'quiet' => class Symfony\Component\Console\Input\InputOption { private $name = 'quiet'; private $shortcut = 'q'; private $mode = 1; private $default = FALSE; private $description = 'Do not output any message' }, 'verbose' => class Symfony\Component\Console\Input\InputOption { private $name = 'verbose'; private $shortcut = 'v|vv|vvv'; private $mode = 1; private $default = FALSE; private $description = 'Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug' }, 'version' => class Symfony\Component\Console\Input\InputOption { private $name = 'version'; private $shortcut = 'V'; private $mode = 1; private $default = FALSE; private $description = 'Display this application version' }, 'ansi' => class Symfony\Component\Console\Input\InputOption { private $name = 'ansi'; private $shortcut = NULL; private $mode = 16; private $default = FALSE; private $description = 'Force (or disable --no-ansi) ANSI output' }, 'no-interaction' => class Symfony\Component\Console\Input\InputOption { private $name = 'no-interaction'; private $shortcut = 'n'; private $mode = 1; private $default = FALSE; private $description = 'Do not ask any interactive question' }, 'config' => class Symfony\Component\Console\Input\InputOption { private $name = 'config'; private $shortcut = 'c'; private $mode = 4; private $default = NULL; private $description = 'Location of a custom configuration file' }, 'log' => class Symfony\Component\Console\Input\InputOption { private $name = 'log'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Log file to write to' }, 'env' => class Symfony\Component\Console\Input\InputOption { private $name = 'env'; private $shortcut = 'e'; private $mode = 2; private $default = 'prod'; private $description = 'The Environment name.' }, 'no-debug' => class Symfony\Component\Console\Input\InputOption { private $name = 'no-debug'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Switch off debug mode.' }]; private $negations = ['no-ansi' => 'ansi']; private $shortcuts = ['t' => 'target', 'f' => 'filename', 'd' => 'directory', 'i' => 'ignore', 'm' => 'markers', 's' => 'setting', 'h' => 'help', 'q' => 'quiet', 'v' => 'verbose', 'vv' => 'verbose', 'vvv' => 'verbose', 'V' => 'version', 'n' => 'no-interaction', 'c' => 'config', 'e' => 'env'] }; private ${Symfony\Component\Console\Command\Command}ignoreValidationErrors = FALSE; private ${Symfony\Component\Console\Command\Command}code = NULL; private ${Symfony\Component\Console\Command\Command}synopsis = []; private ${Symfony\Component\Console\Command\Command}usages = []; private ${Symfony\Component\Console\Command\Command}helperSet = class Symfony\Component\Console\Helper\HelperSet { private $helpers = ['formatter' => class Symfony\Component\Console\Helper\FormatterHelper { protected $helperSet = ... }, 'debug_formatter' => class Symfony\Component\Console\Helper\DebugFormatterHelper { private $colors = [0 => 'black', 1 => 'red', 2 => 'green', 3 => 'yellow', 4 => 'blue', 5 => 'magenta', 6 => 'cyan', 7 => 'white', 8 => 'default']; private $started = []; private $count = -1; protected $helperSet = ... }, 'process' => class Symfony\Component\Console\Helper\ProcessHelper { protected $helperSet = ... }, 'question' => class Symfony\Component\Console\Helper\QuestionHelper { private $inputStream = NULL; protected $helperSet = ... }]; private $command = NULL } }, $input = class Symfony\Component\Console\Input\ArgvInput { private $tokens = []; private $parsed = []; protected $definition = class Symfony\Component\Console\Input\InputDefinition { private $arguments = ['command' => class Symfony\Component\Console\Input\InputArgument { private $name = 'command'; private $mode = 1; private $default = NULL; private $description = 'The command to execute' }]; private $requiredCount = 1; private $lastArrayArgument = NULL; private $lastOptionalArgument = NULL; private $options = ['target' => class Symfony\Component\Console\Input\InputOption { private $name = 'target'; private $shortcut = 't'; private $mode = 4; private $default = NULL; private $description = 'Path where to store the generated output' }, 'cache-folder' => class Symfony\Component\Console\Input\InputOption { private $name = 'cache-folder'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Path where to store the cache files' }, 'filename' => class Symfony\Component\Console\Input\InputOption { private $name = 'filename'; private $shortcut = 'f'; private $mode = 12; private $default = []; private $description = 'File to parse, glob patterns are supported. Provide multiple options of this type to add\n                multiple files.' }, 'directory' => class Symfony\Component\Console\Input\InputOption { private $name = 'directory'; private $shortcut = 'd'; private $mode = 12; private $default = []; private $description = 'directory to parse, glob patterns are supported. Provide multiple options of this type to add\n                multiple directories.' }, 'encoding' => class Symfony\Component\Console\Input\InputOption { private $name = 'encoding'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'encoding to be used to interpret source files with' }, 'extensions' => class Symfony\Component\Console\Input\InputOption { private $name = 'extensions'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Provide multiple options of this type to add multiple extensions. default is php' }, 'ignore' => class Symfony\Component\Console\Input\InputOption { private $name = 'ignore'; private $shortcut = 'i'; private $mode = 12; private $default = []; private $description = 'File(s) and directories (relative to the source-code directory) that will be ignored. Glob patterns are supported. Add multiple options of this type of add more ignore patterns' }, 'ignore-tags' => class Symfony\Component\Console\Input\InputOption { private $name = 'ignore-tags'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Tag that will be ignored, defaults to none. package, subpackage and ignore may not be ignored. Add multiple options of this type to ignore multiple tags.' }, 'hidden' => class Symfony\Component\Console\Input\InputOption { private $name = 'hidden'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Use this option to tell phpDocumentor to parse files and directories that begin with a period (.), by default these are ignored' }, 'ignore-symlinks' => class Symfony\Component\Console\Input\InputOption { private $name = 'ignore-symlinks'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Ignore symlinks to other files or directories, default is on' }, 'markers' => class Symfony\Component\Console\Input\InputOption { private $name = 'markers'; private $shortcut = 'm'; private $mode = 12; private $default = []; private $description = 'Comma-separated list of markers/tags to filter' }, 'title' => class Symfony\Component\Console\Input\InputOption { private $name = 'title'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Sets the title for this project; default is the phpDocumentor logo' }, 'force' => class Symfony\Component\Console\Input\InputOption { private $name = 'force'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Forces a full build of the documentation, does not increment existing documentation' }, 'validate' => class Symfony\Component\Console\Input\InputOption { private $name = 'validate'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Validates every processed file using PHP Lint, costs a lot of performance' }, 'visibility' => class Symfony\Component\Console\Input\InputOption { private $name = 'visibility'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Specifies the parse visibility that should be displayed in the documentation. Add multiple options of\n                this type to specify multiple levels.("public,protected")' }, 'defaultpackagename' => class Symfony\Component\Console\Input\InputOption { private $name = 'defaultpackagename'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Name to use for the default package.' }, 'sourcecode' => class Symfony\Component\Console\Input\InputOption { private $name = 'sourcecode'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Whether to include syntax highlighted source code' }, 'template' => class Symfony\Component\Console\Input\InputOption { private $name = 'template'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Name of the template to use (optional)' }, 'examples-dir' => class Symfony\Component\Console\Input\InputOption { private $name = 'examples-dir'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Directory to seacher for example files referenced by @example tags' }, 'setting' => class Symfony\Component\Console\Input\InputOption { private $name = 'setting'; private $shortcut = 's'; private $mode = 12; private $default = []; private $description = 'Provide custom setting(s) as "key=value", run again with <info>--list-settings</info> for a list' }, 'list-settings' => class Symfony\Component\Console\Input\InputOption { private $name = 'list-settings'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Returns a list of available settings' }, 'parseprivate' => class Symfony\Component\Console\Input\InputOption { private $name = 'parseprivate'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Whether to parse DocBlocks marked with @internal tag' }, 'help' => class Symfony\Component\Console\Input\InputOption { private $name = 'help'; private $shortcut = 'h'; private $mode = 1; private $default = FALSE; private $description = 'Display help for the given command. When no command is given display help for the <info>list</info> command' }, 'quiet' => class Symfony\Component\Console\Input\InputOption { private $name = 'quiet'; private $shortcut = 'q'; private $mode = 1; private $default = FALSE; private $description = 'Do not output any message' }, 'verbose' => class Symfony\Component\Console\Input\InputOption { private $name = 'verbose'; private $shortcut = 'v|vv|vvv'; private $mode = 1; private $default = FALSE; private $description = 'Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug' }, 'version' => class Symfony\Component\Console\Input\InputOption { private $name = 'version'; private $shortcut = 'V'; private $mode = 1; private $default = FALSE; private $description = 'Display this application version' }, 'ansi' => class Symfony\Component\Console\Input\InputOption { private $name = 'ansi'; private $shortcut = NULL; private $mode = 16; private $default = FALSE; private $description = 'Force (or disable --no-ansi) ANSI output' }, 'no-interaction' => class Symfony\Component\Console\Input\InputOption { private $name = 'no-interaction'; private $shortcut = 'n'; private $mode = 1; private $default = FALSE; private $description = 'Do not ask any interactive question' }, 'config' => class Symfony\Component\Console\Input\InputOption { private $name = 'config'; private $shortcut = 'c'; private $mode = 4; private $default = NULL; private $description = 'Location of a custom configuration file' }, 'log' => class Symfony\Component\Console\Input\InputOption { private $name = 'log'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Log file to write to' }, 'env' => class Symfony\Component\Console\Input\InputOption { private $name = 'env'; private $shortcut = 'e'; private $mode = 2; private $default = 'prod'; private $description = 'The Environment name.' }, 'no-debug' => class Symfony\Component\Console\Input\InputOption { private $name = 'no-debug'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Switch off debug mode.' }]; private $negations = ['no-ansi' => 'ansi']; private $shortcuts = ['t' => 'target', 'f' => 'filename', 'd' => 'directory', 'i' => 'ignore', 'm' => 'markers', 's' => 'setting', 'h' => 'help', 'q' => 'quiet', 'v' => 'verbose', 'vv' => 'verbose', 'vvv' => 'verbose', 'V' => 'version', 'n' => 'no-interaction', 'c' => 'config', 'e' => 'env'] }; protected $stream = NULL; protected $options = []; protected $arguments = ['command' => 'project:run']; protected $interactive = TRUE }, $output = class Symfony\Component\Console\Output\ConsoleOutput { private $stderr = class Symfony\Component\Console\Output\StreamOutput { private $stream = resource(159) of type (stream); private ${Symfony\Component\Console\Output\Output}verbosity = 32; private ${Symfony\Component\Console\Output\Output}formatter = class Symfony\Component\Console\Formatter\OutputFormatter { private $decorated = TRUE; private $styles = ['error' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { ... }; private $foreground = 'white'; private $background = 'red'; private $options = [...]; private $href = NULL; private $handlesHrefGracefully = NULL }, 'info' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { ... }; private $foreground = 'green'; private $background = ''; private $options = [...]; private $href = NULL; private $handlesHrefGracefully = NULL }, 'comment' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { ... }; private $foreground = 'yellow'; private $background = ''; private $options = [...]; private $href = NULL; private $handlesHrefGracefully = NULL }, 'question' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { ... }; private $foreground = 'black'; private $background = 'cyan'; private $options = [...]; private $href = NULL; private $handlesHrefGracefully = NULL }]; private $styleStack = class Symfony\Component\Console\Formatter\OutputFormatterStyleStack { private $styles = []; private $emptyStyle = class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { ... }; private $foreground = ''; private $background = ''; private $options = [...]; private $href = NULL; private $handlesHrefGracefully = TRUE } } } }; private $consoleSectionOutputs = []; private ${Symfony\Component\Console\Output\StreamOutput}stream = resource(144) of type (stream); private ${Symfony\Component\Console\Output\Output}verbosity = 32; private ${Symfony\Component\Console\Output\Output}formatter = class Symfony\Component\Console\Formatter\OutputFormatter { private $decorated = TRUE; private $styles = ['error' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { private $foreground = '37'; private $background = '41'; private $options = [...] }; private $foreground = 'white'; private $background = 'red'; private $options = []; private $href = NULL; private $handlesHrefGracefully = NULL }, 'info' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { private $foreground = '32'; private $background = ''; private $options = [...] }; private $foreground = 'green'; private $background = ''; private $options = []; private $href = NULL; private $handlesHrefGracefully = NULL }, 'comment' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { private $foreground = '33'; private $background = ''; private $options = [...] }; private $foreground = 'yellow'; private $background = ''; private $options = []; private $href = NULL; private $handlesHrefGracefully = NULL }, 'question' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { private $foreground = '30'; private $background = '46'; private $options = [...] }; private $foreground = 'black'; private $background = 'cyan'; private $options = []; private $href = NULL; private $handlesHrefGracefully = NULL }]; private $styleStack = class Symfony\Component\Console\Formatter\OutputFormatterStyleStack { private $styles = []; private $emptyStyle = class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { private $foreground = ''; private $background = ''; private $options = [...] }; private $foreground = ''; private $background = ''; private $options = []; private $href = NULL; private $handlesHrefGracefully = TRUE } } } }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/symfony/framework-bundle/Console/Application.php:96
    1.2074   17413664   8. Symfony\Component\Console\Command\Command->run($input = class Symfony\Component\Console\Input\ArgvInput { private $tokens = []; private $parsed = []; protected $definition = class Symfony\Component\Console\Input\InputDefinition { private $arguments = ['command' => class Symfony\Component\Console\Input\InputArgument { private $name = 'command'; private $mode = 1; private $default = NULL; private $description = 'The command to execute' }]; private $requiredCount = 1; private $lastArrayArgument = NULL; private $lastOptionalArgument = NULL; private $options = ['target' => class Symfony\Component\Console\Input\InputOption { private $name = 'target'; private $shortcut = 't'; private $mode = 4; private $default = NULL; private $description = 'Path where to store the generated output' }, 'cache-folder' => class Symfony\Component\Console\Input\InputOption { private $name = 'cache-folder'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Path where to store the cache files' }, 'filename' => class Symfony\Component\Console\Input\InputOption { private $name = 'filename'; private $shortcut = 'f'; private $mode = 12; private $default = []; private $description = 'File to parse, glob patterns are supported. Provide multiple options of this type to add\n                multiple files.' }, 'directory' => class Symfony\Component\Console\Input\InputOption { private $name = 'directory'; private $shortcut = 'd'; private $mode = 12; private $default = []; private $description = 'directory to parse, glob patterns are supported. Provide multiple options of this type to add\n                multiple directories.' }, 'encoding' => class Symfony\Component\Console\Input\InputOption { private $name = 'encoding'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'encoding to be used to interpret source files with' }, 'extensions' => class Symfony\Component\Console\Input\InputOption { private $name = 'extensions'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Provide multiple options of this type to add multiple extensions. default is php' }, 'ignore' => class Symfony\Component\Console\Input\InputOption { private $name = 'ignore'; private $shortcut = 'i'; private $mode = 12; private $default = []; private $description = 'File(s) and directories (relative to the source-code directory) that will be ignored. Glob patterns are supported. Add multiple options of this type of add more ignore patterns' }, 'ignore-tags' => class Symfony\Component\Console\Input\InputOption { private $name = 'ignore-tags'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Tag that will be ignored, defaults to none. package, subpackage and ignore may not be ignored. Add multiple options of this type to ignore multiple tags.' }, 'hidden' => class Symfony\Component\Console\Input\InputOption { private $name = 'hidden'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Use this option to tell phpDocumentor to parse files and directories that begin with a period (.), by default these are ignored' }, 'ignore-symlinks' => class Symfony\Component\Console\Input\InputOption { private $name = 'ignore-symlinks'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Ignore symlinks to other files or directories, default is on' }, 'markers' => class Symfony\Component\Console\Input\InputOption { private $name = 'markers'; private $shortcut = 'm'; private $mode = 12; private $default = []; private $description = 'Comma-separated list of markers/tags to filter' }, 'title' => class Symfony\Component\Console\Input\InputOption { private $name = 'title'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Sets the title for this project; default is the phpDocumentor logo' }, 'force' => class Symfony\Component\Console\Input\InputOption { private $name = 'force'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Forces a full build of the documentation, does not increment existing documentation' }, 'validate' => class Symfony\Component\Console\Input\InputOption { private $name = 'validate'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Validates every processed file using PHP Lint, costs a lot of performance' }, 'visibility' => class Symfony\Component\Console\Input\InputOption { private $name = 'visibility'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Specifies the parse visibility that should be displayed in the documentation. Add multiple options of\n                this type to specify multiple levels.("public,protected")' }, 'defaultpackagename' => class Symfony\Component\Console\Input\InputOption { private $name = 'defaultpackagename'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Name to use for the default package.' }, 'sourcecode' => class Symfony\Component\Console\Input\InputOption { private $name = 'sourcecode'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Whether to include syntax highlighted source code' }, 'template' => class Symfony\Component\Console\Input\InputOption { private $name = 'template'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Name of the template to use (optional)' }, 'examples-dir' => class Symfony\Component\Console\Input\InputOption { private $name = 'examples-dir'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Directory to seacher for example files referenced by @example tags' }, 'setting' => class Symfony\Component\Console\Input\InputOption { private $name = 'setting'; private $shortcut = 's'; private $mode = 12; private $default = []; private $description = 'Provide custom setting(s) as "key=value", run again with <info>--list-settings</info> for a list' }, 'list-settings' => class Symfony\Component\Console\Input\InputOption { private $name = 'list-settings'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Returns a list of available settings' }, 'parseprivate' => class Symfony\Component\Console\Input\InputOption { private $name = 'parseprivate'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Whether to parse DocBlocks marked with @internal tag' }, 'help' => class Symfony\Component\Console\Input\InputOption { private $name = 'help'; private $shortcut = 'h'; private $mode = 1; private $default = FALSE; private $description = 'Display help for the given command. When no command is given display help for the <info>list</info> command' }, 'quiet' => class Symfony\Component\Console\Input\InputOption { private $name = 'quiet'; private $shortcut = 'q'; private $mode = 1; private $default = FALSE; private $description = 'Do not output any message' }, 'verbose' => class Symfony\Component\Console\Input\InputOption { private $name = 'verbose'; private $shortcut = 'v|vv|vvv'; private $mode = 1; private $default = FALSE; private $description = 'Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug' }, 'version' => class Symfony\Component\Console\Input\InputOption { private $name = 'version'; private $shortcut = 'V'; private $mode = 1; private $default = FALSE; private $description = 'Display this application version' }, 'ansi' => class Symfony\Component\Console\Input\InputOption { private $name = 'ansi'; private $shortcut = NULL; private $mode = 16; private $default = FALSE; private $description = 'Force (or disable --no-ansi) ANSI output' }, 'no-interaction' => class Symfony\Component\Console\Input\InputOption { private $name = 'no-interaction'; private $shortcut = 'n'; private $mode = 1; private $default = FALSE; private $description = 'Do not ask any interactive question' }, 'config' => class Symfony\Component\Console\Input\InputOption { private $name = 'config'; private $shortcut = 'c'; private $mode = 4; private $default = NULL; private $description = 'Location of a custom configuration file' }, 'log' => class Symfony\Component\Console\Input\InputOption { private $name = 'log'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Log file to write to' }, 'env' => class Symfony\Component\Console\Input\InputOption { private $name = 'env'; private $shortcut = 'e'; private $mode = 2; private $default = 'prod'; private $description = 'The Environment name.' }, 'no-debug' => class Symfony\Component\Console\Input\InputOption { private $name = 'no-debug'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Switch off debug mode.' }]; private $negations = ['no-ansi' => 'ansi']; private $shortcuts = ['t' => 'target', 'f' => 'filename', 'd' => 'directory', 'i' => 'ignore', 'm' => 'markers', 's' => 'setting', 'h' => 'help', 'q' => 'quiet', 'v' => 'verbose', 'vv' => 'verbose', 'vvv' => 'verbose', 'V' => 'version', 'n' => 'no-interaction', 'c' => 'config', 'e' => 'env'] }; protected $stream = NULL; protected $options = []; protected $arguments = ['command' => 'project:run']; protected $interactive = TRUE }, $output = class Symfony\Component\Console\Output\ConsoleOutput { private $stderr = class Symfony\Component\Console\Output\StreamOutput { private $stream = resource(159) of type (stream); private ${Symfony\Component\Console\Output\Output}verbosity = 32; private ${Symfony\Component\Console\Output\Output}formatter = class Symfony\Component\Console\Formatter\OutputFormatter { private $decorated = TRUE; private $styles = ['error' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { ... }; private $foreground = 'white'; private $background = 'red'; private $options = [...]; private $href = NULL; private $handlesHrefGracefully = NULL }, 'info' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { ... }; private $foreground = 'green'; private $background = ''; private $options = [...]; private $href = NULL; private $handlesHrefGracefully = NULL }, 'comment' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { ... }; private $foreground = 'yellow'; private $background = ''; private $options = [...]; private $href = NULL; private $handlesHrefGracefully = NULL }, 'question' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { ... }; private $foreground = 'black'; private $background = 'cyan'; private $options = [...]; private $href = NULL; private $handlesHrefGracefully = NULL }]; private $styleStack = class Symfony\Component\Console\Formatter\OutputFormatterStyleStack { private $styles = []; private $emptyStyle = class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { ... }; private $foreground = ''; private $background = ''; private $options = [...]; private $href = NULL; private $handlesHrefGracefully = TRUE } } } }; private $consoleSectionOutputs = []; private ${Symfony\Component\Console\Output\StreamOutput}stream = resource(144) of type (stream); private ${Symfony\Component\Console\Output\Output}verbosity = 32; private ${Symfony\Component\Console\Output\Output}formatter = class Symfony\Component\Console\Formatter\OutputFormatter { private $decorated = TRUE; private $styles = ['error' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { private $foreground = '37'; private $background = '41'; private $options = [...] }; private $foreground = 'white'; private $background = 'red'; private $options = []; private $href = NULL; private $handlesHrefGracefully = NULL }, 'info' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { private $foreground = '32'; private $background = ''; private $options = [...] }; private $foreground = 'green'; private $background = ''; private $options = []; private $href = NULL; private $handlesHrefGracefully = NULL }, 'comment' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { private $foreground = '33'; private $background = ''; private $options = [...] }; private $foreground = 'yellow'; private $background = ''; private $options = []; private $href = NULL; private $handlesHrefGracefully = NULL }, 'question' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { private $foreground = '30'; private $background = '46'; private $options = [...] }; private $foreground = 'black'; private $background = 'cyan'; private $options = []; private $href = NULL; private $handlesHrefGracefully = NULL }]; private $styleStack = class Symfony\Component\Console\Formatter\OutputFormatterStyleStack { private $styles = []; private $emptyStyle = class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { private $foreground = ''; private $background = ''; private $options = [...] }; private $foreground = ''; private $background = ''; private $options = []; private $href = NULL; private $handlesHrefGracefully = TRUE } } } }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/symfony/console/Application.php:996
    1.2154   17414040   9. phpDocumentor\Console\Command\Project\RunCommand->execute($input = class Symfony\Component\Console\Input\ArgvInput { private $tokens = []; private $parsed = []; protected $definition = class Symfony\Component\Console\Input\InputDefinition { private $arguments = ['command' => class Symfony\Component\Console\Input\InputArgument { private $name = 'command'; private $mode = 1; private $default = NULL; private $description = 'The command to execute' }]; private $requiredCount = 1; private $lastArrayArgument = NULL; private $lastOptionalArgument = NULL; private $options = ['target' => class Symfony\Component\Console\Input\InputOption { private $name = 'target'; private $shortcut = 't'; private $mode = 4; private $default = NULL; private $description = 'Path where to store the generated output' }, 'cache-folder' => class Symfony\Component\Console\Input\InputOption { private $name = 'cache-folder'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Path where to store the cache files' }, 'filename' => class Symfony\Component\Console\Input\InputOption { private $name = 'filename'; private $shortcut = 'f'; private $mode = 12; private $default = []; private $description = 'File to parse, glob patterns are supported. Provide multiple options of this type to add\n                multiple files.' }, 'directory' => class Symfony\Component\Console\Input\InputOption { private $name = 'directory'; private $shortcut = 'd'; private $mode = 12; private $default = []; private $description = 'directory to parse, glob patterns are supported. Provide multiple options of this type to add\n                multiple directories.' }, 'encoding' => class Symfony\Component\Console\Input\InputOption { private $name = 'encoding'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'encoding to be used to interpret source files with' }, 'extensions' => class Symfony\Component\Console\Input\InputOption { private $name = 'extensions'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Provide multiple options of this type to add multiple extensions. default is php' }, 'ignore' => class Symfony\Component\Console\Input\InputOption { private $name = 'ignore'; private $shortcut = 'i'; private $mode = 12; private $default = []; private $description = 'File(s) and directories (relative to the source-code directory) that will be ignored. Glob patterns are supported. Add multiple options of this type of add more ignore patterns' }, 'ignore-tags' => class Symfony\Component\Console\Input\InputOption { private $name = 'ignore-tags'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Tag that will be ignored, defaults to none. package, subpackage and ignore may not be ignored. Add multiple options of this type to ignore multiple tags.' }, 'hidden' => class Symfony\Component\Console\Input\InputOption { private $name = 'hidden'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Use this option to tell phpDocumentor to parse files and directories that begin with a period (.), by default these are ignored' }, 'ignore-symlinks' => class Symfony\Component\Console\Input\InputOption { private $name = 'ignore-symlinks'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Ignore symlinks to other files or directories, default is on' }, 'markers' => class Symfony\Component\Console\Input\InputOption { private $name = 'markers'; private $shortcut = 'm'; private $mode = 12; private $default = []; private $description = 'Comma-separated list of markers/tags to filter' }, 'title' => class Symfony\Component\Console\Input\InputOption { private $name = 'title'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Sets the title for this project; default is the phpDocumentor logo' }, 'force' => class Symfony\Component\Console\Input\InputOption { private $name = 'force'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Forces a full build of the documentation, does not increment existing documentation' }, 'validate' => class Symfony\Component\Console\Input\InputOption { private $name = 'validate'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Validates every processed file using PHP Lint, costs a lot of performance' }, 'visibility' => class Symfony\Component\Console\Input\InputOption { private $name = 'visibility'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Specifies the parse visibility that should be displayed in the documentation. Add multiple options of\n                this type to specify multiple levels.("public,protected")' }, 'defaultpackagename' => class Symfony\Component\Console\Input\InputOption { private $name = 'defaultpackagename'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Name to use for the default package.' }, 'sourcecode' => class Symfony\Component\Console\Input\InputOption { private $name = 'sourcecode'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Whether to include syntax highlighted source code' }, 'template' => class Symfony\Component\Console\Input\InputOption { private $name = 'template'; private $shortcut = NULL; private $mode = 12; private $default = []; private $description = 'Name of the template to use (optional)' }, 'examples-dir' => class Symfony\Component\Console\Input\InputOption { private $name = 'examples-dir'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Directory to seacher for example files referenced by @example tags' }, 'setting' => class Symfony\Component\Console\Input\InputOption { private $name = 'setting'; private $shortcut = 's'; private $mode = 12; private $default = []; private $description = 'Provide custom setting(s) as "key=value", run again with <info>--list-settings</info> for a list' }, 'list-settings' => class Symfony\Component\Console\Input\InputOption { private $name = 'list-settings'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Returns a list of available settings' }, 'parseprivate' => class Symfony\Component\Console\Input\InputOption { private $name = 'parseprivate'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Whether to parse DocBlocks marked with @internal tag' }, 'help' => class Symfony\Component\Console\Input\InputOption { private $name = 'help'; private $shortcut = 'h'; private $mode = 1; private $default = FALSE; private $description = 'Display help for the given command. When no command is given display help for the <info>list</info> command' }, 'quiet' => class Symfony\Component\Console\Input\InputOption { private $name = 'quiet'; private $shortcut = 'q'; private $mode = 1; private $default = FALSE; private $description = 'Do not output any message' }, 'verbose' => class Symfony\Component\Console\Input\InputOption { private $name = 'verbose'; private $shortcut = 'v|vv|vvv'; private $mode = 1; private $default = FALSE; private $description = 'Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug' }, 'version' => class Symfony\Component\Console\Input\InputOption { private $name = 'version'; private $shortcut = 'V'; private $mode = 1; private $default = FALSE; private $description = 'Display this application version' }, 'ansi' => class Symfony\Component\Console\Input\InputOption { private $name = 'ansi'; private $shortcut = NULL; private $mode = 16; private $default = FALSE; private $description = 'Force (or disable --no-ansi) ANSI output' }, 'no-interaction' => class Symfony\Component\Console\Input\InputOption { private $name = 'no-interaction'; private $shortcut = 'n'; private $mode = 1; private $default = FALSE; private $description = 'Do not ask any interactive question' }, 'config' => class Symfony\Component\Console\Input\InputOption { private $name = 'config'; private $shortcut = 'c'; private $mode = 4; private $default = NULL; private $description = 'Location of a custom configuration file' }, 'log' => class Symfony\Component\Console\Input\InputOption { private $name = 'log'; private $shortcut = NULL; private $mode = 4; private $default = NULL; private $description = 'Log file to write to' }, 'env' => class Symfony\Component\Console\Input\InputOption { private $name = 'env'; private $shortcut = 'e'; private $mode = 2; private $default = 'prod'; private $description = 'The Environment name.' }, 'no-debug' => class Symfony\Component\Console\Input\InputOption { private $name = 'no-debug'; private $shortcut = NULL; private $mode = 1; private $default = FALSE; private $description = 'Switch off debug mode.' }]; private $negations = ['no-ansi' => 'ansi']; private $shortcuts = ['t' => 'target', 'f' => 'filename', 'd' => 'directory', 'i' => 'ignore', 'm' => 'markers', 's' => 'setting', 'h' => 'help', 'q' => 'quiet', 'v' => 'verbose', 'vv' => 'verbose', 'vvv' => 'verbose', 'V' => 'version', 'n' => 'no-interaction', 'c' => 'config', 'e' => 'env'] }; protected $stream = NULL; protected $options = []; protected $arguments = ['command' => 'project:run']; protected $interactive = TRUE }, $output = class Symfony\Component\Console\Output\ConsoleOutput { private $stderr = class Symfony\Component\Console\Output\StreamOutput { private $stream = resource(159) of type (stream); private ${Symfony\Component\Console\Output\Output}verbosity = 32; private ${Symfony\Component\Console\Output\Output}formatter = class Symfony\Component\Console\Formatter\OutputFormatter { private $decorated = TRUE; private $styles = ['error' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { ... }; private $foreground = 'white'; private $background = 'red'; private $options = [...]; private $href = NULL; private $handlesHrefGracefully = NULL }, 'info' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { ... }; private $foreground = 'green'; private $background = ''; private $options = [...]; private $href = NULL; private $handlesHrefGracefully = NULL }, 'comment' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { ... }; private $foreground = 'yellow'; private $background = ''; private $options = [...]; private $href = NULL; private $handlesHrefGracefully = NULL }, 'question' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { ... }; private $foreground = 'black'; private $background = 'cyan'; private $options = [...]; private $href = NULL; private $handlesHrefGracefully = NULL }]; private $styleStack = class Symfony\Component\Console\Formatter\OutputFormatterStyleStack { private $styles = []; private $emptyStyle = class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { ... }; private $foreground = ''; private $background = ''; private $options = [...]; private $href = NULL; private $handlesHrefGracefully = TRUE } } } }; private $consoleSectionOutputs = []; private ${Symfony\Component\Console\Output\StreamOutput}stream = resource(144) of type (stream); private ${Symfony\Component\Console\Output\Output}verbosity = 32; private ${Symfony\Component\Console\Output\Output}formatter = class Symfony\Component\Console\Formatter\OutputFormatter { private $decorated = TRUE; private $styles = ['error' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { private $foreground = '37'; private $background = '41'; private $options = [...] }; private $foreground = 'white'; private $background = 'red'; private $options = []; private $href = NULL; private $handlesHrefGracefully = NULL }, 'info' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { private $foreground = '32'; private $background = ''; private $options = [...] }; private $foreground = 'green'; private $background = ''; private $options = []; private $href = NULL; private $handlesHrefGracefully = NULL }, 'comment' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { private $foreground = '33'; private $background = ''; private $options = [...] }; private $foreground = 'yellow'; private $background = ''; private $options = []; private $href = NULL; private $handlesHrefGracefully = NULL }, 'question' => class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { private $foreground = '30'; private $background = '46'; private $options = [...] }; private $foreground = 'black'; private $background = 'cyan'; private $options = []; private $href = NULL; private $handlesHrefGracefully = NULL }]; private $styleStack = class Symfony\Component\Console\Formatter\OutputFormatterStyleStack { private $styles = []; private $emptyStyle = class Symfony\Component\Console\Formatter\OutputFormatterStyle { private $color = class Symfony\Component\Console\Color { private $foreground = ''; private $background = ''; private $options = [...] }; private $foreground = ''; private $background = ''; private $options = []; private $href = NULL; private $handlesHrefGracefully = TRUE } } } }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/symfony/console/Command/Command.php:299
    1.2245   17506400  10. League\Pipeline\Pipeline->__invoke($payload = ['target' => NULL, 'cache-folder' => NULL, 'filename' => [], 'directory' => [], 'encoding' => NULL, 'extensions' => [], 'ignore' => [], 'ignore-tags' => [], 'hidden' => FALSE, 'ignore-symlinks' => FALSE, 'markers' => [], 'title' => NULL, 'force' => FALSE, 'validate' => FALSE, 'visibility' => [], 'defaultpackagename' => NULL, 'sourcecode' => FALSE, 'template' => [], 'examples-dir' => NULL, 'setting' => [], 'list-settings' => FALSE, 'parseprivate' => FALSE, 'help' => FALSE, 'quiet' => FALSE, 'verbose' => FALSE, 'version' => FALSE, 'ansi' => FALSE, 'no-interaction' => FALSE, 'config' => NULL, 'log' => NULL, 'env' => 'prod', 'no-debug' => FALSE]) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/src/phpDocumentor/Console/Command/Project/RunCommand.php:290
    1.2245   17506400  11. League\Pipeline\Pipeline->process($payload = ['target' => NULL, 'cache-folder' => NULL, 'filename' => [], 'directory' => [], 'encoding' => NULL, 'extensions' => [], 'ignore' => [], 'ignore-tags' => [], 'hidden' => FALSE, 'ignore-symlinks' => FALSE, 'markers' => [], 'title' => NULL, 'force' => FALSE, 'validate' => FALSE, 'visibility' => [], 'defaultpackagename' => NULL, 'sourcecode' => FALSE, 'template' => [], 'examples-dir' => NULL, 'setting' => [], 'list-settings' => FALSE, 'parseprivate' => FALSE, 'help' => FALSE, 'quiet' => FALSE, 'verbose' => FALSE, 'version' => FALSE, 'ansi' => FALSE, 'no-interaction' => FALSE, 'config' => NULL, 'log' => NULL, 'env' => 'prod', 'no-debug' => FALSE]) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/league/pipeline/src/Pipeline.php:39
    1.2245   17506400  12. League\Pipeline\FingersCrossedProcessor->process($payload = ['target' => NULL, 'cache-folder' => NULL, 'filename' => [], 'directory' => [], 'encoding' => NULL, 'extensions' => [], 'ignore' => [], 'ignore-tags' => [], 'hidden' => FALSE, 'ignore-symlinks' => FALSE, 'markers' => [], 'title' => NULL, 'force' => FALSE, 'validate' => FALSE, 'visibility' => [], 'defaultpackagename' => NULL, 'sourcecode' => FALSE, 'template' => [], 'examples-dir' => NULL, 'setting' => [], 'list-settings' => FALSE, 'parseprivate' => FALSE, 'help' => FALSE, 'quiet' => FALSE, 'verbose' => FALSE, 'version' => FALSE, 'ansi' => FALSE, 'no-interaction' => FALSE, 'config' => NULL, 'log' => NULL, 'env' => 'prod', 'no-debug' => FALSE], ...$stages = variadic(class League\Pipeline\Pipeline { private $stages = [0 => class phpDocumentor\Pipeline\Stage\Configure { private $configFactory = class phpDocumentor\Configuration\ConfigurationFactory { private $middlewares = [0 => class phpDocumentor\Configuration\CommandlineOptionsMiddleware { ... }, 1 => class phpDocumentor\Configuration\PathNormalizingMiddleware { ... }, 2 => class phpDocumentor\Configuration\ProvideTemplateOverridePathMiddleware { ... }]; private $defaultFiles = [0 => 'G:\\Github\\phpdoc-test/phpdoc.xml', 1 => 'G:\\Github\\phpdoc-test/phpdoc.dist.xml', 2 => 'G:\\Github\\phpdoc-test/phpdoc.xml.dist', 3 => 'G:\\Github\\phpdoc-test/.phpdoc.xml.dist', 4 => 'G:\\Github\\phpdoc-test/.phpdoc.xml', 5 => 'G:\\Github\\phpdoc-test/.phpdoc.dist.xml']; private $symfonyConfigFactory = class phpDocumentor\Configuration\SymfonyConfigFactory { private $configurationDefinitions = [...] } }; private $configuration = class phpDocumentor\Configuration\Configuration { public $phpdocumentor = ['configVersion' => '3', 'title' => 'Documentation', 'use-cache' => TRUE, 'paths' => [...], 'versions' => [...], 'settings' => [...], 'templates' => [...]] }; private $logger = class Symfony\Bridge\Monolog\Logger { protected $name = 'app'; protected $handlers = [0 => class Symfony\Bridge\Monolog\Handler\ConsoleHandler { ... }]; protected $processors = []; protected $microsecondTimestamps = TRUE; protected $timezone = class DateTimeZone { public $timezone_type = 3; public $timezone = 'Asia/Shanghai' }; protected $exceptionHandler = NULL }; private $locator = class phpDocumentor\Parser\Cache\Locator { private $path = class phpDocumentor\Path { private $path = '.phpdoc/cache' }; private $fileCache = class phpDocumentor\Parser\Cache\FilesystemAdapter { private ${Symfony\Component\Cache\Adapter\AbstractAdapter}namespace = 'waR3U4bTeM:'; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}defaultLifetime = 31556926; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}namespaceVersion = ''; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}versioningIsEnabled = FALSE; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}deferred = [...]; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}ids = [...]; protected $maxIdLength = NULL; protected $logger = NULL; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}callbackWrapper = [...]; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}computing = [...]; private $marshaller = class Symfony\Component\Cache\Marshaller\DefaultMarshaller { ... }; private $directory = 'G:\\Github\\phpdoc-test\\.phpdoc\\cache\\files\\'; private $tmp = 'G:\\Github\\phpdoc-test\\.phpdoc\\cache\\files\\1b095025b6e4' }; private $descriptorCache = class phpDocumentor\Parser\Cache\FilesystemAdapter { private ${Symfony\Component\Cache\Adapter\AbstractAdapter}namespace = 'gFFBC+JB4H:'; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}defaultLifetime = 31556926; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}namespaceVersion = ''; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}versioningIsEnabled = FALSE; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}deferred = [...]; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}ids = [...]; protected $maxIdLength = NULL; protected $logger = NULL; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}callbackWrapper = [...]; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}computing = [...]; private $marshaller = class Symfony\Component\Cache\Marshaller\DefaultMarshaller { ... }; private $directory = 'G:\\Github\\phpdoc-test\\.phpdoc\\cache\\descriptors\\'; private $tmp = NULL } }; private $environmentFactory = class phpDocumentor\Transformer\Writer\Twig\EnvironmentFactory { private $renderer = class phpDocumentor\Transformer\Writer\Twig\LinkRenderer { private $destination = ''; private $router = class phpDocumentor\Transformer\Router\Router { ... }; private $project = NULL; private $convertToRootPath = TRUE }; private $templateOverridesAt = NULL; private $markDownConverter = class League\CommonMark\CommonMarkConverter { protected $environment = class League\CommonMark\Environment { ... }; protected $docParser = class League\CommonMark\DocParser { ... }; protected $htmlRenderer = class League\CommonMark\HtmlRenderer { ... } } } }, 1 => class phpDocumentor\Pipeline\Stage\TransformToPayload { private $descriptorBuilder = class phpDocumentor\Descriptor\ProjectDescriptorBuilder { protected $assemblerFactory = class phpDocumentor\Descriptor\Builder\AssemblerFactory { protected $assemblers = [...]; protected $fallbackAssemblers = [...] }; protected $filter = class phpDocumentor\Descriptor\Filter\Filter { private $pipeline = class League\Pipeline\Pipeline { ... } }; protected $project = class phpDocumentor\Descriptor\ProjectDescriptor { private $name = 'Documentation'; private $namespace = class phpDocumentor\Descriptor\NamespaceDescriptor { ... }; private $package = class phpDocumentor\Descriptor\PackageDescriptor { ... }; private $files = class phpDocumentor\Descriptor\Collection { ... }; private $indexes = class phpDocumentor\Descriptor\Collection { ... }; private $settings = class phpDocumentor\Descriptor\ProjectDescriptor\Settings { ... }; private $partials = class phpDocumentor\Descriptor\Collection { ... }; private $versions = class phpDocumentor\Descriptor\Collection { ... }; private $description = class phpDocumentor\Descriptor\DocBlock\DescriptionDescriptor { ... } }; private $servicesWithCustomSettings = class Symfony\Component\DependencyInjection\Argument\RewindableGenerator { private $generator = class Closure { virtual $closure = "$this->ContainerXfq2Hb3\{closure}", ... }; private $count = 2 }; private $apiSpecification = class phpDocumentor\Configuration\ApiSpecification { private $source = class phpDocumentor\Configuration\Source { ... }; private $output = '.'; private $ignore = [...]; private $extensions = [...]; private $visibility = [...]; private $defaultPackageName = 'Application'; private $includeSource = FALSE; private $markers = [...]; private $ignoreTags = [...]; private $examples = NULL; private $encoding = 'utf-8'; private $validate = FALSE } } }, 2 => class phpDocumentor\Pipeline\Stage\InitializeBuilderFromConfig { private $partials = class phpDocumentor\Descriptor\Collection { protected $items = [] } }, 3 => class phpDocumentor\Pipeline\Stage\Cache\PurgeCachesWhenForced { private $filesCache = class phpDocumentor\Parser\Cache\FilesystemAdapter { private ${Symfony\Component\Cache\Adapter\AbstractAdapter}namespace = 'waR3U4bTeM:'; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}defaultLifetime = 31556926; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}namespaceVersion = ''; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}versioningIsEnabled = FALSE; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}deferred = []; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}ids = ['408b38a51829591b166ecc96a99365ab-25383ef3973570a805774c93039c30e6' => '408b38a51829591b166ecc96a99365ab-25383ef3973570a805774c93039c30e6', 'cbf08f4e960b7ead0948535a41ad5ea5-d9e361a09ccde31989ccb20e88a67911' => 'cbf08f4e960b7ead0948535a41ad5ea5-d9e361a09ccde31989ccb20e88a67911', '9cfc92b04590e789ef6e172f38711a1e-548c7434eede46236d937df49eb48948' => '9cfc92b04590e789ef6e172f38711a1e-548c7434eede46236d937df49eb48948', '77a6e8021661c429a6729afed63a4487-2b678c2b48219fe173c62f57864f2525' => '77a6e8021661c429a6729afed63a4487-2b678c2b48219fe173c62f57864f2525', '7da88019baa714e8b88a155d0357894b-17d32066e871d9fc63297cfd57169977' => '7da88019baa714e8b88a155d0357894b-17d32066e871d9fc63297cfd57169977', '3b51aea473259e10818badfb9d73377a-8bb87bb5e2cc319aae956131058b2c05' => '3b51aea473259e10818badfb9d73377a-8bb87bb5e2cc319aae956131058b2c05', 'cf708b86624f75af111c8b63aa7bcfe5-6855239bc05bb284fa5bac07c3b0ae74' => 'cf708b86624f75af111c8b63aa7bcfe5-6855239bc05bb284fa5bac07c3b0ae74', '0847bff9f9fd0dbb72888a5ecea9936f-d5f20945a818b3c642fdab441d2ab021' => '0847bff9f9fd0dbb72888a5ecea9936f-d5f20945a818b3c642fdab441d2ab021', 'e3e4d7480f72d678a4ab196ccda98c50-4d282567fbbd0bb8bd3806a7c8d48ac4' => 'e3e4d7480f72d678a4ab196ccda98c50-4d282567fbbd0bb8bd3806a7c8d48ac4', 'd083c28c1a046e3a51f5c9f5f1b2008b-b8c7f25d8710acdd4997bf8b9cf326f5' => 'd083c28c1a046e3a51f5c9f5f1b2008b-b8c7f25d8710acdd4997bf8b9cf326f5', '6caa587d896ed69bcdc884618381bde2-7c4ee7a472406e48a31b52a38228e7b8' => '6caa587d896ed69bcdc884618381bde2-7c4ee7a472406e48a31b52a38228e7b8', '0f61c701e0068c0f411b2d54efc0b8ef-614a33e8f17827aa988341b4f193b49f' => '0f61c701e0068c0f411b2d54efc0b8ef-614a33e8f17827aa988341b4f193b49f', '3f22bf6bd2d5dd20309f872573cf3285-9c13e13e5c3217f8f2e974c4dfce67a5' => '3f22bf6bd2d5dd20309f872573cf3285-9c13e13e5c3217f8f2e974c4dfce67a5', 'adec2054291313fc4eb858f401da752c-445eba76dd6b5f15c3fcc343ef10bcf9' => 'adec2054291313fc4eb858f401da752c-445eba76dd6b5f15c3fcc343ef10bcf9', '5e7b081a7efa8eba74518f7bacfcd159-d9019fefa63635ac09f7bb2b6f7c6cba' => '5e7b081a7efa8eba74518f7bacfcd159-d9019fefa63635ac09f7bb2b6f7c6cba', '1d008ecb032761e794f5ee66e68ab455-9f03658e0d23226be1fcd8ca7f88ed8e' => '1d008ecb032761e794f5ee66e68ab455-9f03658e0d23226be1fcd8ca7f88ed8e', 'a4e0369c4f6674bba8c74b98ed0a5848-9b7e83cee7e212b7bdaabae8ecc456f4' => 'a4e0369c4f6674bba8c74b98ed0a5848-9b7e83cee7e212b7bdaabae8ecc456f4', '5d71ca219a1664cf3f55e3729eba1d72-a1d1498b932fe0c2a140120d62e3411c' => '5d71ca219a1664cf3f55e3729eba1d72-a1d1498b932fe0c2a140120d62e3411c', '539de05aa7884db22682be903985c536-845265a10a560b5a5359f1882513c161' => '539de05aa7884db22682be903985c536-845265a10a560b5a5359f1882513c161', '39788fa607b90c855af07c1b8f0887fa-6dac94f657aab7c202434e3e9eb75c7d' => '39788fa607b90c855af07c1b8f0887fa-6dac94f657aab7c202434e3e9eb75c7d']; protected $maxIdLength = NULL; protected $logger = NULL; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}callbackWrapper = [0 => 'Symfony\\Component\\Cache\\LockRegistry', 1 => 'compute']; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}computing = ['39788fa607b90c855af07c1b8f0887fa-6dac94f657aab7c202434e3e9eb75c7d' => '39788fa607b90c855af07c1b8f0887fa-6dac94f657aab7c202434e3e9eb75c7d']; private $marshaller = class Symfony\Component\Cache\Marshaller\DefaultMarshaller { private $useIgbinarySerialize = FALSE }; private $directory = 'G:\\Github\\phpdoc-test\\.phpdoc\\cache\\files\\'; private $tmp = 'G:\\Github\\phpdoc-test\\.phpdoc\\cache\\files\\1b095025b6e4' }; private $descriptorsCache = class phpDocumentor\Parser\Cache\FilesystemAdapter { private ${Symfony\Component\Cache\Adapter\AbstractAdapter}namespace = 'gFFBC+JB4H:'; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}defaultLifetime = 31556926; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}namespaceVersion = ''; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}versioningIsEnabled = FALSE; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}deferred = []; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}ids = ['phpDocumentor-projectDescriptor-filelist' => 'phpDocumentor-projectDescriptor-filelist', 'phpDocumentor-projectDescriptor-settings' => 'phpDocumentor-projectDescriptor-settings', 'phpDocumentor-projectDescriptor-files-408b38a51829591b166ecc96a99365ab' => 'phpDocumentor-projectDescriptor-files-408b38a51829591b166ecc96a99365ab', 'phpDocumentor-projectDescriptor-files-cbf08f4e960b7ead0948535a41ad5ea5' => 'phpDocumentor-projectDescriptor-files-cbf08f4e960b7ead0948535a41ad5ea5', 'phpDocumentor-projectDescriptor-files-9cfc92b04590e789ef6e172f38711a1e' => 'phpDocumentor-projectDescriptor-files-9cfc92b04590e789ef6e172f38711a1e', 'phpDocumentor-projectDescriptor-files-77a6e8021661c429a6729afed63a4487' => 'phpDocumentor-projectDescriptor-files-77a6e8021661c429a6729afed63a4487', 'phpDocumentor-projectDescriptor-files-7da88019baa714e8b88a155d0357894b' => 'phpDocumentor-projectDescriptor-files-7da88019baa714e8b88a155d0357894b', 'phpDocumentor-projectDescriptor-files-3b51aea473259e10818badfb9d73377a' => 'phpDocumentor-projectDescriptor-files-3b51aea473259e10818badfb9d73377a', 'phpDocumentor-projectDescriptor-files-cf708b86624f75af111c8b63aa7bcfe5' => 'phpDocumentor-projectDescriptor-files-cf708b86624f75af111c8b63aa7bcfe5', 'phpDocumentor-projectDescriptor-files-0847bff9f9fd0dbb72888a5ecea9936f' => 'phpDocumentor-projectDescriptor-files-0847bff9f9fd0dbb72888a5ecea9936f', 'phpDocumentor-projectDescriptor-files-e3e4d7480f72d678a4ab196ccda98c50' => 'phpDocumentor-projectDescriptor-files-e3e4d7480f72d678a4ab196ccda98c50', 'phpDocumentor-projectDescriptor-files-d083c28c1a046e3a51f5c9f5f1b2008b' => 'phpDocumentor-projectDescriptor-files-d083c28c1a046e3a51f5c9f5f1b2008b', 'phpDocumentor-projectDescriptor-files-6caa587d896ed69bcdc884618381bde2' => 'phpDocumentor-projectDescriptor-files-6caa587d896ed69bcdc884618381bde2', 'phpDocumentor-projectDescriptor-files-0f61c701e0068c0f411b2d54efc0b8ef' => 'phpDocumentor-projectDescriptor-files-0f61c701e0068c0f411b2d54efc0b8ef', 'phpDocumentor-projectDescriptor-files-3f22bf6bd2d5dd20309f872573cf3285' => 'phpDocumentor-projectDescriptor-files-3f22bf6bd2d5dd20309f872573cf3285', 'phpDocumentor-projectDescriptor-files-adec2054291313fc4eb858f401da752c' => 'phpDocumentor-projectDescriptor-files-adec2054291313fc4eb858f401da752c', 'phpDocumentor-projectDescriptor-files-5e7b081a7efa8eba74518f7bacfcd159' => 'phpDocumentor-projectDescriptor-files-5e7b081a7efa8eba74518f7bacfcd159', 'phpDocumentor-projectDescriptor-files-1d008ecb032761e794f5ee66e68ab455' => 'phpDocumentor-projectDescriptor-files-1d008ecb032761e794f5ee66e68ab455', 'phpDocumentor-projectDescriptor-files-a4e0369c4f6674bba8c74b98ed0a5848' => 'phpDocumentor-projectDescriptor-files-a4e0369c4f6674bba8c74b98ed0a5848', 'phpDocumentor-projectDescriptor-files-5d71ca219a1664cf3f55e3729eba1d72' => 'phpDocumentor-projectDescriptor-files-5d71ca219a1664cf3f55e3729eba1d72', 'phpDocumentor-projectDescriptor-files-539de05aa7884db22682be903985c536' => 'phpDocumentor-projectDescriptor-files-539de05aa7884db22682be903985c536', 'phpDocumentor-projectDescriptor-files-39788fa607b90c855af07c1b8f0887fa' => 'phpDocumentor-projectDescriptor-files-39788fa607b90c855af07c1b8f0887fa', 'phpDocumentor-projectDescriptor-files-c2b9ca04b464260c81bb0a35d376bce7' => 'phpDocumentor-projectDescriptor-files-c2b9ca04b464260c81bb0a35d376bce7', 'phpDocumentor-projectDescriptor-files-1eafa51c05577285440201f039f6d231' => 'phpDocumentor-projectDescriptor-files-1eafa51c05577285440201f039f6d231', 'phpDocumentor-projectDescriptor-files-1e0b1998fafb088d7b261fea7b5cf299' => 'phpDocumentor-projectDescriptor-files-1e0b1998fafb088d7b261fea7b5cf299', 'phpDocumentor-projectDescriptor-files-fbc48c4eb6013d20ab840144e6bd706a' => 'phpDocumentor-projectDescriptor-files-fbc48c4eb6013d20ab840144e6bd706a', 'phpDocumentor-projectDescriptor-files-8fe0e83233b525c9bc7aa12b1406862e' => 'phpDocumentor-projectDescriptor-files-8fe0e83233b525c9bc7aa12b1406862e', 'phpDocumentor-projectDescriptor-files-6c0b352c0b8e36c106c0623eb135a968' => 'phpDocumentor-projectDescriptor-files-6c0b352c0b8e36c106c0623eb135a968', 'phpDocumentor-projectDescriptor-files-0420d47334ffd043578525194e640b7e' => 'phpDocumentor-projectDescriptor-files-0420d47334ffd043578525194e640b7e', 'phpDocumentor-projectDescriptor-files-2d0f06f78e6a53b6dcfbcbabe83d3c5a' => 'phpDocumentor-projectDescriptor-files-2d0f06f78e6a53b6dcfbcbabe83d3c5a', 'phpDocumentor-projectDescriptor-files-c3482ffe3dc3bacd881f8959867d105d' => 'phpDocumentor-projectDescriptor-files-c3482ffe3dc3bacd881f8959867d105d', 'phpDocumentor-projectDescriptor-files-bf1cb019c22551fa17e51134b0550b7d' => 'phpDocumentor-projectDescriptor-files-bf1cb019c22551fa17e51134b0550b7d', 'phpDocumentor-projectDescriptor-files-3c3849cdd6be4ca241b1e1e7db59a966' => 'phpDocumentor-projectDescriptor-files-3c3849cdd6be4ca241b1e1e7db59a966', 'phpDocumentor-projectDescriptor-files-e093b1d35bf183a9e5e0ece1f3091c1a' => 'phpDocumentor-projectDescriptor-files-e093b1d35bf183a9e5e0ece1f3091c1a', 'phpDocumentor-projectDescriptor-files-909dd4a70011f955020912ab5b68b9fe' => 'phpDocumentor-projectDescriptor-files-909dd4a70011f955020912ab5b68b9fe', 'phpDocumentor-projectDescriptor-files-b02cc3efbc9c53300289d6e3101aa0c6' => 'phpDocumentor-projectDescriptor-files-b02cc3efbc9c53300289d6e3101aa0c6', 'phpDocumentor-projectDescriptor-files-0781b6a5bcd323d9fab6c8170812d844' => 'phpDocumentor-projectDescriptor-files-0781b6a5bcd323d9fab6c8170812d844', 'phpDocumentor-projectDescriptor-files-4fe3205649e0bcd0b7c52d71a38d40c7' => 'phpDocumentor-projectDescriptor-files-4fe3205649e0bcd0b7c52d71a38d40c7']; protected $maxIdLength = NULL; protected $logger = NULL; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}callbackWrapper = [0 => 'Symfony\\Component\\Cache\\LockRegistry', 1 => 'compute']; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}computing = []; private $marshaller = class Symfony\Component\Cache\Marshaller\DefaultMarshaller { private $useIgbinarySerialize = FALSE }; private $directory = 'G:\\Github\\phpdoc-test\\.phpdoc\\cache\\descriptors\\'; private $tmp = NULL }; private $logger = class Symfony\Bridge\Monolog\Logger { protected $name = 'app'; protected $handlers = [0 => class Symfony\Bridge\Monolog\Handler\ConsoleHandler { ... }]; protected $processors = []; protected $microsecondTimestamps = TRUE; protected $timezone = class DateTimeZone { public $timezone_type = 3; public $timezone = 'Asia/Shanghai' }; protected $exceptionHandler = NULL } }]; private $processor = class League\Pipeline\FingersCrossedProcessor {  } }, class League\Pipeline\Pipeline { private $stages = []; private $processor = class League\Pipeline\FingersCrossedProcessor {  } }, class League\Pipeline\Pipeline { private $stages = [0 => class phpDocumentor\Pipeline\Stage\Parser\TransformToParserPayload {  }, 1 => class phpDocumentor\Pipeline\Stage\Parser\CollectFiles { private $fileCollector = class phpDocumentor\Parser\FlySystemCollector { private $specificationFactory = class phpDocumentor\Parser\SpecificationFactory {  }; private $flySystemFactory = class phpDocumentor\Parser\FlySystemFactory { private $mountManager = class League\Flysystem\MountManager { ... } } }; private $logger = class Symfony\Bridge\Monolog\Logger { protected $name = 'app'; protected $handlers = [0 => class Symfony\Bridge\Monolog\Handler\ConsoleHandler { ... }]; protected $processors = []; protected $microsecondTimestamps = TRUE; protected $timezone = class DateTimeZone { public $timezone_type = 3; public $timezone = 'Asia/Shanghai' }; protected $exceptionHandler = NULL } }, 2 => class phpDocumentor\Pipeline\Stage\Cache\GarbageCollectCache { private $descriptorMapper = class phpDocumentor\Descriptor\Cache\ProjectDescriptorMapper { private $cache = class phpDocumentor\Parser\Cache\FilesystemAdapter { private ${Symfony\Component\Cache\Adapter\AbstractAdapter}namespace = 'gFFBC+JB4H:'; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}defaultLifetime = 31556926; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}namespaceVersion = ''; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}versioningIsEnabled = FALSE; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}deferred = [...]; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}ids = [...]; protected $maxIdLength = NULL; protected $logger = NULL; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}callbackWrapper = [...]; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}computing = [...]; private $marshaller = class Symfony\Component\Cache\Marshaller\DefaultMarshaller { ... }; private $directory = 'G:\\Github\\phpdoc-test\\.phpdoc\\cache\\descriptors\\'; private $tmp = NULL } } }, 3 => class phpDocumentor\Pipeline\Stage\Cache\LoadProjectDescriptorFromCache { private $descriptorMapper = class phpDocumentor\Descriptor\Cache\ProjectDescriptorMapper { private $cache = class phpDocumentor\Parser\Cache\FilesystemAdapter { private ${Symfony\Component\Cache\Adapter\AbstractAdapter}namespace = 'gFFBC+JB4H:'; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}defaultLifetime = 31556926; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}namespaceVersion = ''; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}versioningIsEnabled = FALSE; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}deferred = [...]; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}ids = [...]; protected $maxIdLength = NULL; protected $logger = NULL; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}callbackWrapper = [...]; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}computing = [...]; private $marshaller = class Symfony\Component\Cache\Marshaller\DefaultMarshaller { ... }; private $directory = 'G:\\Github\\phpdoc-test\\.phpdoc\\cache\\descriptors\\'; private $tmp = NULL } }; private $logger = class Symfony\Bridge\Monolog\Logger { protected $name = 'app'; protected $handlers = [0 => class Symfony\Bridge\Monolog\Handler\ConsoleHandler { ... }]; protected $processors = []; protected $microsecondTimestamps = TRUE; protected $timezone = class DateTimeZone { public $timezone_type = 3; public $timezone = 'Asia/Shanghai' }; protected $exceptionHandler = NULL } }, 4 => class phpDocumentor\Pipeline\Stage\Cache\LoadGuidesFromCache { private $logger = class Symfony\Bridge\Monolog\Logger { protected $name = 'app'; protected $handlers = [0 => class Symfony\Bridge\Monolog\Handler\ConsoleHandler { ... }]; protected $processors = []; protected $microsecondTimestamps = TRUE; protected $timezone = class DateTimeZone { public $timezone_type = 3; public $timezone = 'Asia/Shanghai' }; protected $exceptionHandler = NULL }; private $commandBus = class League\Tactician\CommandBus { private $middlewareChain = class Closure { virtual $closure = "$this->League\Tactician\{closure}" } } }, 5 => class phpDocumentor\Pipeline\Stage\Parser\ParseFiles { private $parser = class phpDocumentor\Parser\Parser { private $defaultPackageName = 'Application'; private $validate = FALSE; private $markers = [0 => 'TODO', 1 => 'FIXME']; private $path = ''; private $logger = class Symfony\Bridge\Monolog\Logger { protected $name = 'app'; protected $handlers = [...]; protected $processors = [...]; protected $microsecondTimestamps = TRUE; protected $timezone = class DateTimeZone { ... }; protected $exceptionHandler = NULL }; private $encoding = 'utf-8'; private $stopwatch = class Symfony\Component\Stopwatch\Stopwatch { private $morePrecision = TRUE; private $sections = [...]; private $activeSections = [...] }; private $projectFactory = class phpDocumentor\Reflection\Php\ProjectFactory { private $strategies = class phpDocumentor\Reflection\Php\ProjectFactoryStrategies { ... } } }; private $logger = class Symfony\Bridge\Monolog\Logger { protected $name = 'app'; protected $handlers = [0 => class Symfony\Bridge\Monolog\Handler\ConsoleHandler { ... }]; protected $processors = []; protected $microsecondTimestamps = TRUE; protected $timezone = class DateTimeZone { public $timezone_type = 3; public $timezone = 'Asia/Shanghai' }; protected $exceptionHandler = NULL }; private $reEncodingMiddleware = class phpDocumentor\Parser\Middleware\ReEncodingMiddleware { private $encoding = 'utf-8' } }, 6 => class phpDocumentor\Pipeline\Stage\Parser\ParseGuides { private $commandBus = class League\Tactician\CommandBus { private $middlewareChain = class Closure { virtual $closure = "$this->League\Tactician\{closure}" } }; private $logger = class Symfony\Bridge\Monolog\Logger { protected $name = 'app'; protected $handlers = [0 => class Symfony\Bridge\Monolog\Handler\ConsoleHandler { ... }]; protected $processors = []; protected $microsecondTimestamps = TRUE; protected $timezone = class DateTimeZone { public $timezone_type = 3; public $timezone = 'Asia/Shanghai' }; protected $exceptionHandler = NULL }; private $flySystemFactory = class phpDocumentor\Parser\FlySystemFactory { private $mountManager = class League\Flysystem\MountManager { protected $filesystems = [...]; protected $plugins = [...] } } }, 7 => class phpDocumentor\Pipeline\Stage\Cache\StoreProjectDescriptorToCache { private $descriptorMapper = class phpDocumentor\Descriptor\Cache\ProjectDescriptorMapper { private $cache = class phpDocumentor\Parser\Cache\FilesystemAdapter { private ${Symfony\Component\Cache\Adapter\AbstractAdapter}namespace = 'gFFBC+JB4H:'; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}defaultLifetime = 31556926; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}namespaceVersion = ''; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}versioningIsEnabled = FALSE; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}deferred = [...]; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}ids = [...]; protected $maxIdLength = NULL; protected $logger = NULL; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}callbackWrapper = [...]; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}computing = [...]; private $marshaller = class Symfony\Component\Cache\Marshaller\DefaultMarshaller { ... }; private $directory = 'G:\\Github\\phpdoc-test\\.phpdoc\\cache\\descriptors\\'; private $tmp = NULL } }; private $logger = class Symfony\Bridge\Monolog\Logger { protected $name = 'app'; protected $handlers = [0 => class Symfony\Bridge\Monolog\Handler\ConsoleHandler { ... }]; protected $processors = []; protected $microsecondTimestamps = TRUE; protected $timezone = class DateTimeZone { public $timezone_type = 3; public $timezone = 'Asia/Shanghai' }; protected $exceptionHandler = NULL } }, 8 => class phpDocumentor\Pipeline\Stage\Cache\StoreGuidesToCache { private $logger = class Symfony\Bridge\Monolog\Logger { protected $name = 'app'; protected $handlers = [0 => class Symfony\Bridge\Monolog\Handler\ConsoleHandler { ... }]; protected $processors = []; protected $microsecondTimestamps = TRUE; protected $timezone = class DateTimeZone { public $timezone_type = 3; public $timezone = 'Asia/Shanghai' }; protected $exceptionHandler = NULL }; private $commandBus = class League\Tactician\CommandBus { private $middlewareChain = class Closure { virtual $closure = "$this->League\Tactician\{closure}" } } }]; private $processor = class League\Pipeline\FingersCrossedProcessor {  } }, class League\Pipeline\Pipeline { private $stages = [0 => class phpDocumentor\Pipeline\Stage\Cache\LoadProjectDescriptorFromCache { private $descriptorMapper = class phpDocumentor\Descriptor\Cache\ProjectDescriptorMapper { private $cache = class phpDocumentor\Parser\Cache\FilesystemAdapter { private ${Symfony\Component\Cache\Adapter\AbstractAdapter}namespace = 'gFFBC+JB4H:'; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}defaultLifetime = 31556926; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}namespaceVersion = ''; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}versioningIsEnabled = FALSE; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}deferred = [...]; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}ids = [...]; protected $maxIdLength = NULL; protected $logger = NULL; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}callbackWrapper = [...]; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}computing = [...]; private $marshaller = class Symfony\Component\Cache\Marshaller\DefaultMarshaller { ... }; private $directory = 'G:\\Github\\phpdoc-test\\.phpdoc\\cache\\descriptors\\'; private $tmp = NULL } }; private $logger = class Symfony\Bridge\Monolog\Logger { protected $name = 'app'; protected $handlers = [0 => class Symfony\Bridge\Monolog\Handler\ConsoleHandler { ... }]; protected $processors = []; protected $microsecondTimestamps = TRUE; protected $timezone = class DateTimeZone { public $timezone_type = 3; public $timezone = 'Asia/Shanghai' }; protected $exceptionHandler = NULL } }, 1 => class phpDocumentor\Pipeline\Stage\Compile { private $compiler = class phpDocumentor\Compiler\Compiler {  } }, 2 => class phpDocumentor\Pipeline\Stage\Cache\LoadGuidesFromCache { private $logger = class Symfony\Bridge\Monolog\Logger { protected $name = 'app'; protected $handlers = [0 => class Symfony\Bridge\Monolog\Handler\ConsoleHandler { ... }]; protected $processors = []; protected $microsecondTimestamps = TRUE; protected $timezone = class DateTimeZone { public $timezone_type = 3; public $timezone = 'Asia/Shanghai' }; protected $exceptionHandler = NULL }; private $commandBus = class League\Tactician\CommandBus { private $middlewareChain = class Closure { virtual $closure = "$this->League\Tactician\{closure}" } } }, 3 => class phpDocumentor\Pipeline\Stage\Transform { private $transformer = class phpDocumentor\Transformer\Transformer { protected $target = NULL; private $destination = NULL; protected $writers = class phpDocumentor\Transformer\Writer\Collection { private $writers = [...] }; private $logger = class Symfony\Bridge\Monolog\Logger { protected $name = 'app'; protected $handlers = [...]; protected $processors = [...]; protected $microsecondTimestamps = TRUE; protected $timezone = class DateTimeZone { ... }; protected $exceptionHandler = NULL }; private $flySystemFactory = class phpDocumentor\Parser\FlySystemFactory { private $mountManager = class League\Flysystem\MountManager { ... } }; private $eventDispatcher = class Symfony\Component\EventDispatcher\EventDispatcher { private $listeners = [...]; private $sorted = [...]; private $optimized = [...] } }; private $logger = class Symfony\Bridge\Monolog\Logger { protected $name = 'app'; protected $handlers = [0 => class Symfony\Bridge\Monolog\Handler\ConsoleHandler { ... }]; protected $processors = []; protected $microsecondTimestamps = TRUE; protected $timezone = class DateTimeZone { public $timezone_type = 3; public $timezone = 'Asia/Shanghai' }; protected $exceptionHandler = NULL }; private $templateFactory = class phpDocumentor\Transformer\Template\Factory { private $flySystemFactory = class phpDocumentor\Parser\FlySystemFactory { private $mountManager = class League\Flysystem\MountManager { ... } }; private $globalTemplatesPath = 'phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/src/phpDocumentor/../../data/templates'; private $writerCollection = class phpDocumentor\Transformer\Writer\Collection { private $writers = [...] } }; private $flySystemFactory = class phpDocumentor\Parser\FlySystemFactory { private $mountManager = class League\Flysystem\MountManager { protected $filesystems = [...]; protected $plugins = [...] } } }]; private $processor = class League\Pipeline\FingersCrossedProcessor {  } })) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/league/pipeline/src/Pipeline.php:34
    1.4228   18217680  13. League\Pipeline\Pipeline->__invoke($payload = class phpDocumentor\Pipeline\Stage\Payload { private $config = ['phpdocumentor' => ['configVersion' => '3', 'title' => 'Documentation', 'use-cache' => TRUE, 'paths' => ['output' => class phpDocumentor\Dsn { private $dsn = '.phpdoc/build'; private $uri = class League\Uri\Uri { ... }; private $parameters = [...] }, 'cache' => class phpDocumentor\Path { private $path = '.phpdoc/cache' }], 'versions' => ['1.0.0' => class phpDocumentor\Configuration\VersionSpecification { private $number = '1.0.0'; public $api = [...]; public $guides = [...] }], 'settings' => [], 'templates' => [0 => ['name' => 'default', 'parameters' => [...]]]]]; private $builder = class phpDocumentor\Descriptor\ProjectDescriptorBuilder { protected $assemblerFactory = class phpDocumentor\Descriptor\Builder\AssemblerFactory { protected $assemblers = [0 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\FileAssembler { ... } }, 1 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\ConstantAssembler { ... } }, 2 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\TraitAssembler { ... } }, 3 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\ClassAssembler { ... } }, 4 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\EnumAssembler { ... } }, 5 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\EnumCaseAssembler { ... } }, 6 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\InterfaceAssembler { ... } }, 7 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\PropertyAssembler { ... } }, 8 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\ArgumentAssembler { ... } }, 9 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\MethodAssembler { ... } }, 10 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\FunctionAssembler { ... } }, 11 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\NamespaceAssembler { ... } }, 12 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\AuthorAssembler { ... } }, 13 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\DeprecatedAssembler { ... } }, 14 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\ExampleAssembler { ... } }, 15 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\LinkAssembler { ... } }, 16 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\MethodAssembler { ... } }, 17 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\PropertyAssembler { ... } }, 18 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\PropertyAssembler { ... } }, 19 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\PropertyAssembler { ... } }, 20 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\InvalidTagAssembler { ... } }, 21 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\VarAssembler { ... } }, 22 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\ParamAssembler { ... } }, 23 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\ThrowsAssembler { ... } }, 24 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\ReturnAssembler { ... } }, 25 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\UsesAssembler { ... } }, 26 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\SeeAssembler { ... } }, 27 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\SinceAssembler { ... } }, 28 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\VersionAssembler { ... } }]; protected $fallbackAssemblers = [0 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\GenericTagAssembler { ... } }] }; protected $filter = class phpDocumentor\Descriptor\Filter\Filter { private $pipeline = class League\Pipeline\Pipeline { private $stages = [0 => class phpDocumentor\Descriptor\Filter\StripIgnore { ... }, 1 => class phpDocumentor\Descriptor\Filter\StripIgnoredTags { ... }, 2 => class phpDocumentor\Descriptor\Filter\StripInternal { ... }, 3 => class phpDocumentor\Descriptor\Filter\StripOnVisibility { ... }]; private $processor = class League\Pipeline\InterruptibleProcessor { private $check = class Closure { virtual $closure = "phpDocumentor\Descriptor\Filter\Filter::phpDocumentor\Descriptor\Filter\{closure}", ... } } } }; protected $project = class phpDocumentor\Descriptor\ProjectDescriptor { private $name = 'Documentation'; private $namespace = class phpDocumentor\Descriptor\NamespaceDescriptor { protected $parent = NULL; protected $children = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $functions = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $constants = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $classes = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $interfaces = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $traits = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; private $enums = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\'; private $name = '' }; protected $name = '\\'; protected $namespace = ''; protected $package = NULL; protected $summary = ''; protected $description = NULL; protected $fileDescriptor = NULL; protected $line = 0; protected $tags = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $errors = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $inheritedElement = NULL }; private $package = class phpDocumentor\Descriptor\PackageDescriptor { protected $parent = NULL; protected $children = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $functions = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $constants = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $classes = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $interfaces = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $traits = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; private ${phpDocumentor\Descriptor\NamespaceDescriptor}enums = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\'; private $name = '' }; protected $name = '\\'; protected $namespace = ''; protected $package = NULL; protected $summary = ''; protected $description = NULL; protected $fileDescriptor = NULL; protected $line = 0; protected $tags = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $errors = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $inheritedElement = NULL }; private $files = class phpDocumentor\Descriptor\Collection { protected $items = ['tag/basic/abstract.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/author.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/category.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/copyright.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/deprecated.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/example.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/filesource.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/final.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/global.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/ignore.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/internal.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/license.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/link.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/method.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/name.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/package.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/param.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/property.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/return.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/see.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/since.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/static.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/staticvar.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/subpackage.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/throws.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/todo.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/tutorial.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/uses.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/var.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/version.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/example.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/inheritdoc.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/internal.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/link.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/source.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/tutorial.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }] }; private $indexes = class phpDocumentor\Descriptor\Collection { protected $items = [] }; private $settings = class phpDocumentor\Descriptor\ProjectDescriptor\Settings { private $isModified = FALSE; private $visibility = 7; private $includeSource = FALSE; private $custom = ['guides.enabled' => FALSE, 'graphs.enabled' => FALSE] }; private $partials = class phpDocumentor\Descriptor\Collection { protected $items = [] }; private $versions = class phpDocumentor\Descriptor\Collection { protected $items = [0 => class phpDocumentor\Descriptor\VersionDescriptor { ... }] }; private $description = class phpDocumentor\Descriptor\DocBlock\DescriptionDescriptor { private $description = class phpDocumentor\Reflection\DocBlock\Description { private $bodyTemplate = ''; private $tags = [...] }; private $inlineTags = [] } }; private $servicesWithCustomSettings = class Symfony\Component\DependencyInjection\Argument\RewindableGenerator { private $generator = class Closure { virtual $closure = "$this->ContainerXfq2Hb3\{closure}" }; private $count = 2 }; private $apiSpecification = class phpDocumentor\Configuration\ApiSpecification { private $source = class phpDocumentor\Configuration\Source { private $dsn = class phpDocumentor\Dsn { private $dsn = '.'; private $uri = class League\Uri\Uri { ... }; private $parameters = [...] }; private $paths = [0 => class phpDocumentor\Path { ... }] }; private $output = '.'; private $ignore = ['hidden' => TRUE, 'symlinks' => TRUE, 'paths' => []]; private $extensions = [0 => 'php', 1 => 'php3', 2 => 'phtml']; private $visibility = [0 => 'public', 1 => 'protected', 2 => 'private']; private $defaultPackageName = 'Application'; private $includeSource = FALSE; private $markers = [0 => 'TODO', 1 => 'FIXME']; private $ignoreTags = []; private $examples = NULL; private $encoding = 'utf-8'; private $validate = FALSE } } }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/league/pipeline/src/FingersCrossedProcessor.php:11
    1.4233   18217680  14. League\Pipeline\Pipeline->process($payload = class phpDocumentor\Pipeline\Stage\Payload { private $config = ['phpdocumentor' => ['configVersion' => '3', 'title' => 'Documentation', 'use-cache' => TRUE, 'paths' => ['output' => class phpDocumentor\Dsn { private $dsn = '.phpdoc/build'; private $uri = class League\Uri\Uri { ... }; private $parameters = [...] }, 'cache' => class phpDocumentor\Path { private $path = '.phpdoc/cache' }], 'versions' => ['1.0.0' => class phpDocumentor\Configuration\VersionSpecification { private $number = '1.0.0'; public $api = [...]; public $guides = [...] }], 'settings' => [], 'templates' => [0 => ['name' => 'default', 'parameters' => [...]]]]]; private $builder = class phpDocumentor\Descriptor\ProjectDescriptorBuilder { protected $assemblerFactory = class phpDocumentor\Descriptor\Builder\AssemblerFactory { protected $assemblers = [0 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\FileAssembler { ... } }, 1 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\ConstantAssembler { ... } }, 2 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\TraitAssembler { ... } }, 3 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\ClassAssembler { ... } }, 4 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\EnumAssembler { ... } }, 5 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\EnumCaseAssembler { ... } }, 6 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\InterfaceAssembler { ... } }, 7 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\PropertyAssembler { ... } }, 8 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\ArgumentAssembler { ... } }, 9 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\MethodAssembler { ... } }, 10 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\FunctionAssembler { ... } }, 11 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\NamespaceAssembler { ... } }, 12 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\AuthorAssembler { ... } }, 13 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\DeprecatedAssembler { ... } }, 14 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\ExampleAssembler { ... } }, 15 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\LinkAssembler { ... } }, 16 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\MethodAssembler { ... } }, 17 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\PropertyAssembler { ... } }, 18 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\PropertyAssembler { ... } }, 19 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\PropertyAssembler { ... } }, 20 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\InvalidTagAssembler { ... } }, 21 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\VarAssembler { ... } }, 22 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\ParamAssembler { ... } }, 23 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\ThrowsAssembler { ... } }, 24 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\ReturnAssembler { ... } }, 25 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\UsesAssembler { ... } }, 26 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\SeeAssembler { ... } }, 27 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\SinceAssembler { ... } }, 28 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\VersionAssembler { ... } }]; protected $fallbackAssemblers = [0 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\GenericTagAssembler { ... } }] }; protected $filter = class phpDocumentor\Descriptor\Filter\Filter { private $pipeline = class League\Pipeline\Pipeline { private $stages = [0 => class phpDocumentor\Descriptor\Filter\StripIgnore { ... }, 1 => class phpDocumentor\Descriptor\Filter\StripIgnoredTags { ... }, 2 => class phpDocumentor\Descriptor\Filter\StripInternal { ... }, 3 => class phpDocumentor\Descriptor\Filter\StripOnVisibility { ... }]; private $processor = class League\Pipeline\InterruptibleProcessor { private $check = class Closure { virtual $closure = "phpDocumentor\Descriptor\Filter\Filter::phpDocumentor\Descriptor\Filter\{closure}", ... } } } }; protected $project = class phpDocumentor\Descriptor\ProjectDescriptor { private $name = 'Documentation'; private $namespace = class phpDocumentor\Descriptor\NamespaceDescriptor { protected $parent = NULL; protected $children = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $functions = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $constants = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $classes = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $interfaces = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $traits = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; private $enums = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\'; private $name = '' }; protected $name = '\\'; protected $namespace = ''; protected $package = NULL; protected $summary = ''; protected $description = NULL; protected $fileDescriptor = NULL; protected $line = 0; protected $tags = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $errors = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $inheritedElement = NULL }; private $package = class phpDocumentor\Descriptor\PackageDescriptor { protected $parent = NULL; protected $children = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $functions = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $constants = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $classes = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $interfaces = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $traits = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; private ${phpDocumentor\Descriptor\NamespaceDescriptor}enums = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\'; private $name = '' }; protected $name = '\\'; protected $namespace = ''; protected $package = NULL; protected $summary = ''; protected $description = NULL; protected $fileDescriptor = NULL; protected $line = 0; protected $tags = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $errors = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $inheritedElement = NULL }; private $files = class phpDocumentor\Descriptor\Collection { protected $items = ['tag/basic/abstract.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/author.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/category.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/copyright.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/deprecated.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/example.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/filesource.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/final.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/global.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/ignore.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/internal.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/license.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/link.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/method.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/name.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/package.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/param.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/property.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/return.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/see.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/since.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/static.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/staticvar.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/subpackage.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/throws.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/todo.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/tutorial.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/uses.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/var.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/version.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/example.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/inheritdoc.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/internal.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/link.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/source.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/tutorial.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }] }; private $indexes = class phpDocumentor\Descriptor\Collection { protected $items = [] }; private $settings = class phpDocumentor\Descriptor\ProjectDescriptor\Settings { private $isModified = FALSE; private $visibility = 7; private $includeSource = FALSE; private $custom = ['guides.enabled' => FALSE, 'graphs.enabled' => FALSE] }; private $partials = class phpDocumentor\Descriptor\Collection { protected $items = [] }; private $versions = class phpDocumentor\Descriptor\Collection { protected $items = [0 => class phpDocumentor\Descriptor\VersionDescriptor { ... }] }; private $description = class phpDocumentor\Descriptor\DocBlock\DescriptionDescriptor { private $description = class phpDocumentor\Reflection\DocBlock\Description { private $bodyTemplate = ''; private $tags = [...] }; private $inlineTags = [] } }; private $servicesWithCustomSettings = class Symfony\Component\DependencyInjection\Argument\RewindableGenerator { private $generator = class Closure { virtual $closure = "$this->ContainerXfq2Hb3\{closure}" }; private $count = 2 }; private $apiSpecification = class phpDocumentor\Configuration\ApiSpecification { private $source = class phpDocumentor\Configuration\Source { private $dsn = class phpDocumentor\Dsn { private $dsn = '.'; private $uri = class League\Uri\Uri { ... }; private $parameters = [...] }; private $paths = [0 => class phpDocumentor\Path { ... }] }; private $output = '.'; private $ignore = ['hidden' => TRUE, 'symlinks' => TRUE, 'paths' => []]; private $extensions = [0 => 'php', 1 => 'php3', 2 => 'phtml']; private $visibility = [0 => 'public', 1 => 'protected', 2 => 'private']; private $defaultPackageName = 'Application'; private $includeSource = FALSE; private $markers = [0 => 'TODO', 1 => 'FIXME']; private $ignoreTags = []; private $examples = NULL; private $encoding = 'utf-8'; private $validate = FALSE } } }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/league/pipeline/src/Pipeline.php:39
    1.4238   18217680  15. League\Pipeline\FingersCrossedProcessor->process($payload = class phpDocumentor\Pipeline\Stage\Payload { private $config = ['phpdocumentor' => ['configVersion' => '3', 'title' => 'Documentation', 'use-cache' => TRUE, 'paths' => ['output' => class phpDocumentor\Dsn { private $dsn = '.phpdoc/build'; private $uri = class League\Uri\Uri { ... }; private $parameters = [...] }, 'cache' => class phpDocumentor\Path { private $path = '.phpdoc/cache' }], 'versions' => ['1.0.0' => class phpDocumentor\Configuration\VersionSpecification { private $number = '1.0.0'; public $api = [...]; public $guides = [...] }], 'settings' => [], 'templates' => [0 => ['name' => 'default', 'parameters' => [...]]]]]; private $builder = class phpDocumentor\Descriptor\ProjectDescriptorBuilder { protected $assemblerFactory = class phpDocumentor\Descriptor\Builder\AssemblerFactory { protected $assemblers = [0 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\FileAssembler { ... } }, 1 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\ConstantAssembler { ... } }, 2 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\TraitAssembler { ... } }, 3 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\ClassAssembler { ... } }, 4 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\EnumAssembler { ... } }, 5 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\EnumCaseAssembler { ... } }, 6 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\InterfaceAssembler { ... } }, 7 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\PropertyAssembler { ... } }, 8 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\ArgumentAssembler { ... } }, 9 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\MethodAssembler { ... } }, 10 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\FunctionAssembler { ... } }, 11 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\NamespaceAssembler { ... } }, 12 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\AuthorAssembler { ... } }, 13 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\DeprecatedAssembler { ... } }, 14 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\ExampleAssembler { ... } }, 15 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\LinkAssembler { ... } }, 16 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\MethodAssembler { ... } }, 17 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\PropertyAssembler { ... } }, 18 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\PropertyAssembler { ... } }, 19 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\PropertyAssembler { ... } }, 20 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\InvalidTagAssembler { ... } }, 21 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\VarAssembler { ... } }, 22 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\ParamAssembler { ... } }, 23 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\ThrowsAssembler { ... } }, 24 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\ReturnAssembler { ... } }, 25 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\UsesAssembler { ... } }, 26 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\SeeAssembler { ... } }, 27 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\SinceAssembler { ... } }, 28 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\VersionAssembler { ... } }]; protected $fallbackAssemblers = [0 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\GenericTagAssembler { ... } }] }; protected $filter = class phpDocumentor\Descriptor\Filter\Filter { private $pipeline = class League\Pipeline\Pipeline { private $stages = [0 => class phpDocumentor\Descriptor\Filter\StripIgnore { ... }, 1 => class phpDocumentor\Descriptor\Filter\StripIgnoredTags { ... }, 2 => class phpDocumentor\Descriptor\Filter\StripInternal { ... }, 3 => class phpDocumentor\Descriptor\Filter\StripOnVisibility { ... }]; private $processor = class League\Pipeline\InterruptibleProcessor { private $check = class Closure { virtual $closure = "phpDocumentor\Descriptor\Filter\Filter::phpDocumentor\Descriptor\Filter\{closure}", ... } } } }; protected $project = class phpDocumentor\Descriptor\ProjectDescriptor { private $name = 'Documentation'; private $namespace = class phpDocumentor\Descriptor\NamespaceDescriptor { protected $parent = NULL; protected $children = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $functions = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $constants = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $classes = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $interfaces = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $traits = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; private $enums = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\'; private $name = '' }; protected $name = '\\'; protected $namespace = ''; protected $package = NULL; protected $summary = ''; protected $description = NULL; protected $fileDescriptor = NULL; protected $line = 0; protected $tags = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $errors = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $inheritedElement = NULL }; private $package = class phpDocumentor\Descriptor\PackageDescriptor { protected $parent = NULL; protected $children = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $functions = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $constants = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $classes = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $interfaces = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $traits = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; private ${phpDocumentor\Descriptor\NamespaceDescriptor}enums = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\'; private $name = '' }; protected $name = '\\'; protected $namespace = ''; protected $package = NULL; protected $summary = ''; protected $description = NULL; protected $fileDescriptor = NULL; protected $line = 0; protected $tags = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $errors = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $inheritedElement = NULL }; private $files = class phpDocumentor\Descriptor\Collection { protected $items = ['tag/basic/abstract.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/author.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/category.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/copyright.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/deprecated.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/example.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/filesource.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/final.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/global.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/ignore.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/internal.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/license.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/link.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/method.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/name.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/package.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/param.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/property.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/return.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/see.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/since.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/static.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/staticvar.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/subpackage.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/throws.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/todo.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/tutorial.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/uses.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/var.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/version.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/example.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/inheritdoc.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/internal.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/link.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/source.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/tutorial.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }] }; private $indexes = class phpDocumentor\Descriptor\Collection { protected $items = [] }; private $settings = class phpDocumentor\Descriptor\ProjectDescriptor\Settings { private $isModified = FALSE; private $visibility = 7; private $includeSource = FALSE; private $custom = ['guides.enabled' => FALSE, 'graphs.enabled' => FALSE] }; private $partials = class phpDocumentor\Descriptor\Collection { protected $items = [] }; private $versions = class phpDocumentor\Descriptor\Collection { protected $items = [0 => class phpDocumentor\Descriptor\VersionDescriptor { ... }] }; private $description = class phpDocumentor\Descriptor\DocBlock\DescriptionDescriptor { private $description = class phpDocumentor\Reflection\DocBlock\Description { private $bodyTemplate = ''; private $tags = [...] }; private $inlineTags = [] } }; private $servicesWithCustomSettings = class Symfony\Component\DependencyInjection\Argument\RewindableGenerator { private $generator = class Closure { virtual $closure = "$this->ContainerXfq2Hb3\{closure}" }; private $count = 2 }; private $apiSpecification = class phpDocumentor\Configuration\ApiSpecification { private $source = class phpDocumentor\Configuration\Source { private $dsn = class phpDocumentor\Dsn { private $dsn = '.'; private $uri = class League\Uri\Uri { ... }; private $parameters = [...] }; private $paths = [0 => class phpDocumentor\Path { ... }] }; private $output = '.'; private $ignore = ['hidden' => TRUE, 'symlinks' => TRUE, 'paths' => []]; private $extensions = [0 => 'php', 1 => 'php3', 2 => 'phtml']; private $visibility = [0 => 'public', 1 => 'protected', 2 => 'private']; private $defaultPackageName = 'Application'; private $includeSource = FALSE; private $markers = [0 => 'TODO', 1 => 'FIXME']; private $ignoreTags = []; private $examples = NULL; private $encoding = 'utf-8'; private $validate = FALSE } } }, ...$stages = variadic(class phpDocumentor\Pipeline\Stage\Parser\TransformToParserPayload {  }, class phpDocumentor\Pipeline\Stage\Parser\CollectFiles { private $fileCollector = class phpDocumentor\Parser\FlySystemCollector { private $specificationFactory = class phpDocumentor\Parser\SpecificationFactory {  }; private $flySystemFactory = class phpDocumentor\Parser\FlySystemFactory { private $mountManager = class League\Flysystem\MountManager { protected $filesystems = ['5058f1af8388633f609cadb75a75dc9d' => class League\Flysystem\Filesystem { ... }]; protected $plugins = [] } } }; private $logger = class Symfony\Bridge\Monolog\Logger { protected $name = 'app'; protected $handlers = [0 => class Symfony\Bridge\Monolog\Handler\ConsoleHandler { private $output = class Symfony\Component\Console\Output\StreamOutput { private $stream = resource(159) of type (stream); private ${Symfony\Component\Console\Output\Output}verbosity = 32; private ${Symfony\Component\Console\Output\Output}formatter = class Symfony\Component\Console\Formatter\OutputFormatter { ... } }; private $verbosityLevelMap = [32 => 400, 64 => 250, 128 => 200, 256 => 100, 16 => 400]; private $consoleFormatterOptions = []; protected $level = 400; protected $bubble = TRUE; protected $processors = []; protected $formatter = NULL }]; protected $processors = []; protected $microsecondTimestamps = TRUE; protected $timezone = class DateTimeZone { public $timezone_type = 3; public $timezone = 'Asia/Shanghai' }; protected $exceptionHandler = NULL } }, class phpDocumentor\Pipeline\Stage\Cache\GarbageCollectCache { private $descriptorMapper = class phpDocumentor\Descriptor\Cache\ProjectDescriptorMapper { private $cache = class phpDocumentor\Parser\Cache\FilesystemAdapter { private ${Symfony\Component\Cache\Adapter\AbstractAdapter}namespace = 'gFFBC+JB4H:'; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}defaultLifetime = 31556926; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}namespaceVersion = ''; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}versioningIsEnabled = FALSE; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}deferred = []; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}ids = ['phpDocumentor-projectDescriptor-filelist' => 'phpDocumentor-projectDescriptor-filelist', 'phpDocumentor-projectDescriptor-settings' => 'phpDocumentor-projectDescriptor-settings', 'phpDocumentor-projectDescriptor-files-408b38a51829591b166ecc96a99365ab' => 'phpDocumentor-projectDescriptor-files-408b38a51829591b166ecc96a99365ab', 'phpDocumentor-projectDescriptor-files-cbf08f4e960b7ead0948535a41ad5ea5' => 'phpDocumentor-projectDescriptor-files-cbf08f4e960b7ead0948535a41ad5ea5', 'phpDocumentor-projectDescriptor-files-9cfc92b04590e789ef6e172f38711a1e' => 'phpDocumentor-projectDescriptor-files-9cfc92b04590e789ef6e172f38711a1e', 'phpDocumentor-projectDescriptor-files-77a6e8021661c429a6729afed63a4487' => 'phpDocumentor-projectDescriptor-files-77a6e8021661c429a6729afed63a4487', 'phpDocumentor-projectDescriptor-files-7da88019baa714e8b88a155d0357894b' => 'phpDocumentor-projectDescriptor-files-7da88019baa714e8b88a155d0357894b', 'phpDocumentor-projectDescriptor-files-3b51aea473259e10818badfb9d73377a' => 'phpDocumentor-projectDescriptor-files-3b51aea473259e10818badfb9d73377a', 'phpDocumentor-projectDescriptor-files-cf708b86624f75af111c8b63aa7bcfe5' => 'phpDocumentor-projectDescriptor-files-cf708b86624f75af111c8b63aa7bcfe5', 'phpDocumentor-projectDescriptor-files-0847bff9f9fd0dbb72888a5ecea9936f' => 'phpDocumentor-projectDescriptor-files-0847bff9f9fd0dbb72888a5ecea9936f', 'phpDocumentor-projectDescriptor-files-e3e4d7480f72d678a4ab196ccda98c50' => 'phpDocumentor-projectDescriptor-files-e3e4d7480f72d678a4ab196ccda98c50', 'phpDocumentor-projectDescriptor-files-d083c28c1a046e3a51f5c9f5f1b2008b' => 'phpDocumentor-projectDescriptor-files-d083c28c1a046e3a51f5c9f5f1b2008b', 'phpDocumentor-projectDescriptor-files-6caa587d896ed69bcdc884618381bde2' => 'phpDocumentor-projectDescriptor-files-6caa587d896ed69bcdc884618381bde2', 'phpDocumentor-projectDescriptor-files-0f61c701e0068c0f411b2d54efc0b8ef' => 'phpDocumentor-projectDescriptor-files-0f61c701e0068c0f411b2d54efc0b8ef', 'phpDocumentor-projectDescriptor-files-3f22bf6bd2d5dd20309f872573cf3285' => 'phpDocumentor-projectDescriptor-files-3f22bf6bd2d5dd20309f872573cf3285', 'phpDocumentor-projectDescriptor-files-adec2054291313fc4eb858f401da752c' => 'phpDocumentor-projectDescriptor-files-adec2054291313fc4eb858f401da752c', 'phpDocumentor-projectDescriptor-files-5e7b081a7efa8eba74518f7bacfcd159' => 'phpDocumentor-projectDescriptor-files-5e7b081a7efa8eba74518f7bacfcd159', 'phpDocumentor-projectDescriptor-files-1d008ecb032761e794f5ee66e68ab455' => 'phpDocumentor-projectDescriptor-files-1d008ecb032761e794f5ee66e68ab455', 'phpDocumentor-projectDescriptor-files-a4e0369c4f6674bba8c74b98ed0a5848' => 'phpDocumentor-projectDescriptor-files-a4e0369c4f6674bba8c74b98ed0a5848', 'phpDocumentor-projectDescriptor-files-5d71ca219a1664cf3f55e3729eba1d72' => 'phpDocumentor-projectDescriptor-files-5d71ca219a1664cf3f55e3729eba1d72', 'phpDocumentor-projectDescriptor-files-539de05aa7884db22682be903985c536' => 'phpDocumentor-projectDescriptor-files-539de05aa7884db22682be903985c536', 'phpDocumentor-projectDescriptor-files-39788fa607b90c855af07c1b8f0887fa' => 'phpDocumentor-projectDescriptor-files-39788fa607b90c855af07c1b8f0887fa', 'phpDocumentor-projectDescriptor-files-c2b9ca04b464260c81bb0a35d376bce7' => 'phpDocumentor-projectDescriptor-files-c2b9ca04b464260c81bb0a35d376bce7', 'phpDocumentor-projectDescriptor-files-1eafa51c05577285440201f039f6d231' => 'phpDocumentor-projectDescriptor-files-1eafa51c05577285440201f039f6d231', 'phpDocumentor-projectDescriptor-files-1e0b1998fafb088d7b261fea7b5cf299' => 'phpDocumentor-projectDescriptor-files-1e0b1998fafb088d7b261fea7b5cf299', 'phpDocumentor-projectDescriptor-files-fbc48c4eb6013d20ab840144e6bd706a' => 'phpDocumentor-projectDescriptor-files-fbc48c4eb6013d20ab840144e6bd706a', 'phpDocumentor-projectDescriptor-files-8fe0e83233b525c9bc7aa12b1406862e' => 'phpDocumentor-projectDescriptor-files-8fe0e83233b525c9bc7aa12b1406862e', 'phpDocumentor-projectDescriptor-files-6c0b352c0b8e36c106c0623eb135a968' => 'phpDocumentor-projectDescriptor-files-6c0b352c0b8e36c106c0623eb135a968', 'phpDocumentor-projectDescriptor-files-0420d47334ffd043578525194e640b7e' => 'phpDocumentor-projectDescriptor-files-0420d47334ffd043578525194e640b7e', 'phpDocumentor-projectDescriptor-files-2d0f06f78e6a53b6dcfbcbabe83d3c5a' => 'phpDocumentor-projectDescriptor-files-2d0f06f78e6a53b6dcfbcbabe83d3c5a', 'phpDocumentor-projectDescriptor-files-c3482ffe3dc3bacd881f8959867d105d' => 'phpDocumentor-projectDescriptor-files-c3482ffe3dc3bacd881f8959867d105d', 'phpDocumentor-projectDescriptor-files-bf1cb019c22551fa17e51134b0550b7d' => 'phpDocumentor-projectDescriptor-files-bf1cb019c22551fa17e51134b0550b7d', 'phpDocumentor-projectDescriptor-files-3c3849cdd6be4ca241b1e1e7db59a966' => 'phpDocumentor-projectDescriptor-files-3c3849cdd6be4ca241b1e1e7db59a966', 'phpDocumentor-projectDescriptor-files-e093b1d35bf183a9e5e0ece1f3091c1a' => 'phpDocumentor-projectDescriptor-files-e093b1d35bf183a9e5e0ece1f3091c1a', 'phpDocumentor-projectDescriptor-files-909dd4a70011f955020912ab5b68b9fe' => 'phpDocumentor-projectDescriptor-files-909dd4a70011f955020912ab5b68b9fe', 'phpDocumentor-projectDescriptor-files-b02cc3efbc9c53300289d6e3101aa0c6' => 'phpDocumentor-projectDescriptor-files-b02cc3efbc9c53300289d6e3101aa0c6', 'phpDocumentor-projectDescriptor-files-0781b6a5bcd323d9fab6c8170812d844' => 'phpDocumentor-projectDescriptor-files-0781b6a5bcd323d9fab6c8170812d844', 'phpDocumentor-projectDescriptor-files-4fe3205649e0bcd0b7c52d71a38d40c7' => 'phpDocumentor-projectDescriptor-files-4fe3205649e0bcd0b7c52d71a38d40c7']; protected $maxIdLength = NULL; protected $logger = NULL; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}callbackWrapper = [0 => 'Symfony\\Component\\Cache\\LockRegistry', 1 => 'compute']; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}computing = []; private $marshaller = class Symfony\Component\Cache\Marshaller\DefaultMarshaller { private $useIgbinarySerialize = FALSE }; private $directory = 'G:\\Github\\phpdoc-test\\.phpdoc\\cache\\descriptors\\'; private $tmp = NULL } } }, class phpDocumentor\Pipeline\Stage\Cache\LoadProjectDescriptorFromCache { private $descriptorMapper = class phpDocumentor\Descriptor\Cache\ProjectDescriptorMapper { private $cache = class phpDocumentor\Parser\Cache\FilesystemAdapter { private ${Symfony\Component\Cache\Adapter\AbstractAdapter}namespace = 'gFFBC+JB4H:'; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}defaultLifetime = 31556926; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}namespaceVersion = ''; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}versioningIsEnabled = FALSE; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}deferred = []; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}ids = ['phpDocumentor-projectDescriptor-filelist' => 'phpDocumentor-projectDescriptor-filelist', 'phpDocumentor-projectDescriptor-settings' => 'phpDocumentor-projectDescriptor-settings', 'phpDocumentor-projectDescriptor-files-408b38a51829591b166ecc96a99365ab' => 'phpDocumentor-projectDescriptor-files-408b38a51829591b166ecc96a99365ab', 'phpDocumentor-projectDescriptor-files-cbf08f4e960b7ead0948535a41ad5ea5' => 'phpDocumentor-projectDescriptor-files-cbf08f4e960b7ead0948535a41ad5ea5', 'phpDocumentor-projectDescriptor-files-9cfc92b04590e789ef6e172f38711a1e' => 'phpDocumentor-projectDescriptor-files-9cfc92b04590e789ef6e172f38711a1e', 'phpDocumentor-projectDescriptor-files-77a6e8021661c429a6729afed63a4487' => 'phpDocumentor-projectDescriptor-files-77a6e8021661c429a6729afed63a4487', 'phpDocumentor-projectDescriptor-files-7da88019baa714e8b88a155d0357894b' => 'phpDocumentor-projectDescriptor-files-7da88019baa714e8b88a155d0357894b', 'phpDocumentor-projectDescriptor-files-3b51aea473259e10818badfb9d73377a' => 'phpDocumentor-projectDescriptor-files-3b51aea473259e10818badfb9d73377a', 'phpDocumentor-projectDescriptor-files-cf708b86624f75af111c8b63aa7bcfe5' => 'phpDocumentor-projectDescriptor-files-cf708b86624f75af111c8b63aa7bcfe5', 'phpDocumentor-projectDescriptor-files-0847bff9f9fd0dbb72888a5ecea9936f' => 'phpDocumentor-projectDescriptor-files-0847bff9f9fd0dbb72888a5ecea9936f', 'phpDocumentor-projectDescriptor-files-e3e4d7480f72d678a4ab196ccda98c50' => 'phpDocumentor-projectDescriptor-files-e3e4d7480f72d678a4ab196ccda98c50', 'phpDocumentor-projectDescriptor-files-d083c28c1a046e3a51f5c9f5f1b2008b' => 'phpDocumentor-projectDescriptor-files-d083c28c1a046e3a51f5c9f5f1b2008b', 'phpDocumentor-projectDescriptor-files-6caa587d896ed69bcdc884618381bde2' => 'phpDocumentor-projectDescriptor-files-6caa587d896ed69bcdc884618381bde2', 'phpDocumentor-projectDescriptor-files-0f61c701e0068c0f411b2d54efc0b8ef' => 'phpDocumentor-projectDescriptor-files-0f61c701e0068c0f411b2d54efc0b8ef', 'phpDocumentor-projectDescriptor-files-3f22bf6bd2d5dd20309f872573cf3285' => 'phpDocumentor-projectDescriptor-files-3f22bf6bd2d5dd20309f872573cf3285', 'phpDocumentor-projectDescriptor-files-adec2054291313fc4eb858f401da752c' => 'phpDocumentor-projectDescriptor-files-adec2054291313fc4eb858f401da752c', 'phpDocumentor-projectDescriptor-files-5e7b081a7efa8eba74518f7bacfcd159' => 'phpDocumentor-projectDescriptor-files-5e7b081a7efa8eba74518f7bacfcd159', 'phpDocumentor-projectDescriptor-files-1d008ecb032761e794f5ee66e68ab455' => 'phpDocumentor-projectDescriptor-files-1d008ecb032761e794f5ee66e68ab455', 'phpDocumentor-projectDescriptor-files-a4e0369c4f6674bba8c74b98ed0a5848' => 'phpDocumentor-projectDescriptor-files-a4e0369c4f6674bba8c74b98ed0a5848', 'phpDocumentor-projectDescriptor-files-5d71ca219a1664cf3f55e3729eba1d72' => 'phpDocumentor-projectDescriptor-files-5d71ca219a1664cf3f55e3729eba1d72', 'phpDocumentor-projectDescriptor-files-539de05aa7884db22682be903985c536' => 'phpDocumentor-projectDescriptor-files-539de05aa7884db22682be903985c536', 'phpDocumentor-projectDescriptor-files-39788fa607b90c855af07c1b8f0887fa' => 'phpDocumentor-projectDescriptor-files-39788fa607b90c855af07c1b8f0887fa', 'phpDocumentor-projectDescriptor-files-c2b9ca04b464260c81bb0a35d376bce7' => 'phpDocumentor-projectDescriptor-files-c2b9ca04b464260c81bb0a35d376bce7', 'phpDocumentor-projectDescriptor-files-1eafa51c05577285440201f039f6d231' => 'phpDocumentor-projectDescriptor-files-1eafa51c05577285440201f039f6d231', 'phpDocumentor-projectDescriptor-files-1e0b1998fafb088d7b261fea7b5cf299' => 'phpDocumentor-projectDescriptor-files-1e0b1998fafb088d7b261fea7b5cf299', 'phpDocumentor-projectDescriptor-files-fbc48c4eb6013d20ab840144e6bd706a' => 'phpDocumentor-projectDescriptor-files-fbc48c4eb6013d20ab840144e6bd706a', 'phpDocumentor-projectDescriptor-files-8fe0e83233b525c9bc7aa12b1406862e' => 'phpDocumentor-projectDescriptor-files-8fe0e83233b525c9bc7aa12b1406862e', 'phpDocumentor-projectDescriptor-files-6c0b352c0b8e36c106c0623eb135a968' => 'phpDocumentor-projectDescriptor-files-6c0b352c0b8e36c106c0623eb135a968', 'phpDocumentor-projectDescriptor-files-0420d47334ffd043578525194e640b7e' => 'phpDocumentor-projectDescriptor-files-0420d47334ffd043578525194e640b7e', 'phpDocumentor-projectDescriptor-files-2d0f06f78e6a53b6dcfbcbabe83d3c5a' => 'phpDocumentor-projectDescriptor-files-2d0f06f78e6a53b6dcfbcbabe83d3c5a', 'phpDocumentor-projectDescriptor-files-c3482ffe3dc3bacd881f8959867d105d' => 'phpDocumentor-projectDescriptor-files-c3482ffe3dc3bacd881f8959867d105d', 'phpDocumentor-projectDescriptor-files-bf1cb019c22551fa17e51134b0550b7d' => 'phpDocumentor-projectDescriptor-files-bf1cb019c22551fa17e51134b0550b7d', 'phpDocumentor-projectDescriptor-files-3c3849cdd6be4ca241b1e1e7db59a966' => 'phpDocumentor-projectDescriptor-files-3c3849cdd6be4ca241b1e1e7db59a966', 'phpDocumentor-projectDescriptor-files-e093b1d35bf183a9e5e0ece1f3091c1a' => 'phpDocumentor-projectDescriptor-files-e093b1d35bf183a9e5e0ece1f3091c1a', 'phpDocumentor-projectDescriptor-files-909dd4a70011f955020912ab5b68b9fe' => 'phpDocumentor-projectDescriptor-files-909dd4a70011f955020912ab5b68b9fe', 'phpDocumentor-projectDescriptor-files-b02cc3efbc9c53300289d6e3101aa0c6' => 'phpDocumentor-projectDescriptor-files-b02cc3efbc9c53300289d6e3101aa0c6', 'phpDocumentor-projectDescriptor-files-0781b6a5bcd323d9fab6c8170812d844' => 'phpDocumentor-projectDescriptor-files-0781b6a5bcd323d9fab6c8170812d844', 'phpDocumentor-projectDescriptor-files-4fe3205649e0bcd0b7c52d71a38d40c7' => 'phpDocumentor-projectDescriptor-files-4fe3205649e0bcd0b7c52d71a38d40c7']; protected $maxIdLength = NULL; protected $logger = NULL; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}callbackWrapper = [0 => 'Symfony\\Component\\Cache\\LockRegistry', 1 => 'compute']; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}computing = []; private $marshaller = class Symfony\Component\Cache\Marshaller\DefaultMarshaller { private $useIgbinarySerialize = FALSE }; private $directory = 'G:\\Github\\phpdoc-test\\.phpdoc\\cache\\descriptors\\'; private $tmp = NULL } }; private $logger = class Symfony\Bridge\Monolog\Logger { protected $name = 'app'; protected $handlers = [0 => class Symfony\Bridge\Monolog\Handler\ConsoleHandler { private $output = class Symfony\Component\Console\Output\StreamOutput { private $stream = resource(159) of type (stream); private ${Symfony\Component\Console\Output\Output}verbosity = 32; private ${Symfony\Component\Console\Output\Output}formatter = class Symfony\Component\Console\Formatter\OutputFormatter { ... } }; private $verbosityLevelMap = [32 => 400, 64 => 250, 128 => 200, 256 => 100, 16 => 400]; private $consoleFormatterOptions = []; protected $level = 400; protected $bubble = TRUE; protected $processors = []; protected $formatter = NULL }]; protected $processors = []; protected $microsecondTimestamps = TRUE; protected $timezone = class DateTimeZone { public $timezone_type = 3; public $timezone = 'Asia/Shanghai' }; protected $exceptionHandler = NULL } }, class phpDocumentor\Pipeline\Stage\Cache\LoadGuidesFromCache { private $logger = class Symfony\Bridge\Monolog\Logger { protected $name = 'app'; protected $handlers = [0 => class Symfony\Bridge\Monolog\Handler\ConsoleHandler { private $output = class Symfony\Component\Console\Output\StreamOutput { private $stream = resource(159) of type (stream); private ${Symfony\Component\Console\Output\Output}verbosity = 32; private ${Symfony\Component\Console\Output\Output}formatter = class Symfony\Component\Console\Formatter\OutputFormatter { ... } }; private $verbosityLevelMap = [32 => 400, 64 => 250, 128 => 200, 256 => 100, 16 => 400]; private $consoleFormatterOptions = []; protected $level = 400; protected $bubble = TRUE; protected $processors = []; protected $formatter = NULL }]; protected $processors = []; protected $microsecondTimestamps = TRUE; protected $timezone = class DateTimeZone { public $timezone_type = 3; public $timezone = 'Asia/Shanghai' }; protected $exceptionHandler = NULL }; private $commandBus = class League\Tactician\CommandBus { private $middlewareChain = class Closure { virtual $closure = "$this->League\Tactician\{closure}" } } }, class phpDocumentor\Pipeline\Stage\Parser\ParseFiles { private $parser = class phpDocumentor\Parser\Parser { private $defaultPackageName = 'Application'; private $validate = FALSE; private $markers = [0 => 'TODO', 1 => 'FIXME']; private $path = ''; private $logger = class Symfony\Bridge\Monolog\Logger { protected $name = 'app'; protected $handlers = [0 => class Symfony\Bridge\Monolog\Handler\ConsoleHandler { private $output = class Symfony\Component\Console\Output\StreamOutput { ... }; private $verbosityLevelMap = [...]; private $consoleFormatterOptions = [...]; protected $level = 400; protected $bubble = TRUE; protected $processors = [...]; protected $formatter = NULL }]; protected $processors = []; protected $microsecondTimestamps = TRUE; protected $timezone = class DateTimeZone { public $timezone_type = 3; public $timezone = 'Asia/Shanghai' }; protected $exceptionHandler = NULL }; private $encoding = 'utf-8'; private $stopwatch = class Symfony\Component\Stopwatch\Stopwatch { private $morePrecision = TRUE; private $sections = ['__root__' => class Symfony\Component\Stopwatch\Section { private $events = [...]; private $origin = NULL; private $morePrecision = TRUE; private $id = NULL; private $children = [...] }]; private $activeSections = ['__root__' => class Symfony\Component\Stopwatch\Section { private $events = [...]; private $origin = NULL; private $morePrecision = TRUE; private $id = NULL; private $children = [...] }] }; private $projectFactory = class phpDocumentor\Reflection\Php\ProjectFactory { private $strategies = class phpDocumentor\Reflection\Php\ProjectFactoryStrategies { private $strategies = class SplPriorityQueue {  } } } }; private $logger = class Symfony\Bridge\Monolog\Logger { protected $name = 'app'; protected $handlers = [0 => class Symfony\Bridge\Monolog\Handler\ConsoleHandler { private $output = class Symfony\Component\Console\Output\StreamOutput { private $stream = resource(159) of type (stream); private ${Symfony\Component\Console\Output\Output}verbosity = 32; private ${Symfony\Component\Console\Output\Output}formatter = class Symfony\Component\Console\Formatter\OutputFormatter { ... } }; private $verbosityLevelMap = [32 => 400, 64 => 250, 128 => 200, 256 => 100, 16 => 400]; private $consoleFormatterOptions = []; protected $level = 400; protected $bubble = TRUE; protected $processors = []; protected $formatter = NULL }]; protected $processors = []; protected $microsecondTimestamps = TRUE; protected $timezone = class DateTimeZone { public $timezone_type = 3; public $timezone = 'Asia/Shanghai' }; protected $exceptionHandler = NULL }; private $reEncodingMiddleware = class phpDocumentor\Parser\Middleware\ReEncodingMiddleware { private $encoding = 'utf-8' } }, class phpDocumentor\Pipeline\Stage\Parser\ParseGuides { private $commandBus = class League\Tactician\CommandBus { private $middlewareChain = class Closure { virtual $closure = "$this->League\Tactician\{closure}" } }; private $logger = class Symfony\Bridge\Monolog\Logger { protected $name = 'app'; protected $handlers = [0 => class Symfony\Bridge\Monolog\Handler\ConsoleHandler { private $output = class Symfony\Component\Console\Output\StreamOutput { private $stream = resource(159) of type (stream); private ${Symfony\Component\Console\Output\Output}verbosity = 32; private ${Symfony\Component\Console\Output\Output}formatter = class Symfony\Component\Console\Formatter\OutputFormatter { ... } }; private $verbosityLevelMap = [32 => 400, 64 => 250, 128 => 200, 256 => 100, 16 => 400]; private $consoleFormatterOptions = []; protected $level = 400; protected $bubble = TRUE; protected $processors = []; protected $formatter = NULL }]; protected $processors = []; protected $microsecondTimestamps = TRUE; protected $timezone = class DateTimeZone { public $timezone_type = 3; public $timezone = 'Asia/Shanghai' }; protected $exceptionHandler = NULL }; private $flySystemFactory = class phpDocumentor\Parser\FlySystemFactory { private $mountManager = class League\Flysystem\MountManager { protected $filesystems = ['5058f1af8388633f609cadb75a75dc9d' => class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { ... }; protected $plugins = [...]; protected $config = class League\Flysystem\Config { ... } }]; protected $plugins = [] } } }, class phpDocumentor\Pipeline\Stage\Cache\StoreProjectDescriptorToCache { private $descriptorMapper = class phpDocumentor\Descriptor\Cache\ProjectDescriptorMapper { private $cache = class phpDocumentor\Parser\Cache\FilesystemAdapter { private ${Symfony\Component\Cache\Adapter\AbstractAdapter}namespace = 'gFFBC+JB4H:'; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}defaultLifetime = 31556926; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}namespaceVersion = ''; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}versioningIsEnabled = FALSE; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}deferred = []; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}ids = ['phpDocumentor-projectDescriptor-filelist' => 'phpDocumentor-projectDescriptor-filelist', 'phpDocumentor-projectDescriptor-settings' => 'phpDocumentor-projectDescriptor-settings', 'phpDocumentor-projectDescriptor-files-408b38a51829591b166ecc96a99365ab' => 'phpDocumentor-projectDescriptor-files-408b38a51829591b166ecc96a99365ab', 'phpDocumentor-projectDescriptor-files-cbf08f4e960b7ead0948535a41ad5ea5' => 'phpDocumentor-projectDescriptor-files-cbf08f4e960b7ead0948535a41ad5ea5', 'phpDocumentor-projectDescriptor-files-9cfc92b04590e789ef6e172f38711a1e' => 'phpDocumentor-projectDescriptor-files-9cfc92b04590e789ef6e172f38711a1e', 'phpDocumentor-projectDescriptor-files-77a6e8021661c429a6729afed63a4487' => 'phpDocumentor-projectDescriptor-files-77a6e8021661c429a6729afed63a4487', 'phpDocumentor-projectDescriptor-files-7da88019baa714e8b88a155d0357894b' => 'phpDocumentor-projectDescriptor-files-7da88019baa714e8b88a155d0357894b', 'phpDocumentor-projectDescriptor-files-3b51aea473259e10818badfb9d73377a' => 'phpDocumentor-projectDescriptor-files-3b51aea473259e10818badfb9d73377a', 'phpDocumentor-projectDescriptor-files-cf708b86624f75af111c8b63aa7bcfe5' => 'phpDocumentor-projectDescriptor-files-cf708b86624f75af111c8b63aa7bcfe5', 'phpDocumentor-projectDescriptor-files-0847bff9f9fd0dbb72888a5ecea9936f' => 'phpDocumentor-projectDescriptor-files-0847bff9f9fd0dbb72888a5ecea9936f', 'phpDocumentor-projectDescriptor-files-e3e4d7480f72d678a4ab196ccda98c50' => 'phpDocumentor-projectDescriptor-files-e3e4d7480f72d678a4ab196ccda98c50', 'phpDocumentor-projectDescriptor-files-d083c28c1a046e3a51f5c9f5f1b2008b' => 'phpDocumentor-projectDescriptor-files-d083c28c1a046e3a51f5c9f5f1b2008b', 'phpDocumentor-projectDescriptor-files-6caa587d896ed69bcdc884618381bde2' => 'phpDocumentor-projectDescriptor-files-6caa587d896ed69bcdc884618381bde2', 'phpDocumentor-projectDescriptor-files-0f61c701e0068c0f411b2d54efc0b8ef' => 'phpDocumentor-projectDescriptor-files-0f61c701e0068c0f411b2d54efc0b8ef', 'phpDocumentor-projectDescriptor-files-3f22bf6bd2d5dd20309f872573cf3285' => 'phpDocumentor-projectDescriptor-files-3f22bf6bd2d5dd20309f872573cf3285', 'phpDocumentor-projectDescriptor-files-adec2054291313fc4eb858f401da752c' => 'phpDocumentor-projectDescriptor-files-adec2054291313fc4eb858f401da752c', 'phpDocumentor-projectDescriptor-files-5e7b081a7efa8eba74518f7bacfcd159' => 'phpDocumentor-projectDescriptor-files-5e7b081a7efa8eba74518f7bacfcd159', 'phpDocumentor-projectDescriptor-files-1d008ecb032761e794f5ee66e68ab455' => 'phpDocumentor-projectDescriptor-files-1d008ecb032761e794f5ee66e68ab455', 'phpDocumentor-projectDescriptor-files-a4e0369c4f6674bba8c74b98ed0a5848' => 'phpDocumentor-projectDescriptor-files-a4e0369c4f6674bba8c74b98ed0a5848', 'phpDocumentor-projectDescriptor-files-5d71ca219a1664cf3f55e3729eba1d72' => 'phpDocumentor-projectDescriptor-files-5d71ca219a1664cf3f55e3729eba1d72', 'phpDocumentor-projectDescriptor-files-539de05aa7884db22682be903985c536' => 'phpDocumentor-projectDescriptor-files-539de05aa7884db22682be903985c536', 'phpDocumentor-projectDescriptor-files-39788fa607b90c855af07c1b8f0887fa' => 'phpDocumentor-projectDescriptor-files-39788fa607b90c855af07c1b8f0887fa', 'phpDocumentor-projectDescriptor-files-c2b9ca04b464260c81bb0a35d376bce7' => 'phpDocumentor-projectDescriptor-files-c2b9ca04b464260c81bb0a35d376bce7', 'phpDocumentor-projectDescriptor-files-1eafa51c05577285440201f039f6d231' => 'phpDocumentor-projectDescriptor-files-1eafa51c05577285440201f039f6d231', 'phpDocumentor-projectDescriptor-files-1e0b1998fafb088d7b261fea7b5cf299' => 'phpDocumentor-projectDescriptor-files-1e0b1998fafb088d7b261fea7b5cf299', 'phpDocumentor-projectDescriptor-files-fbc48c4eb6013d20ab840144e6bd706a' => 'phpDocumentor-projectDescriptor-files-fbc48c4eb6013d20ab840144e6bd706a', 'phpDocumentor-projectDescriptor-files-8fe0e83233b525c9bc7aa12b1406862e' => 'phpDocumentor-projectDescriptor-files-8fe0e83233b525c9bc7aa12b1406862e', 'phpDocumentor-projectDescriptor-files-6c0b352c0b8e36c106c0623eb135a968' => 'phpDocumentor-projectDescriptor-files-6c0b352c0b8e36c106c0623eb135a968', 'phpDocumentor-projectDescriptor-files-0420d47334ffd043578525194e640b7e' => 'phpDocumentor-projectDescriptor-files-0420d47334ffd043578525194e640b7e', 'phpDocumentor-projectDescriptor-files-2d0f06f78e6a53b6dcfbcbabe83d3c5a' => 'phpDocumentor-projectDescriptor-files-2d0f06f78e6a53b6dcfbcbabe83d3c5a', 'phpDocumentor-projectDescriptor-files-c3482ffe3dc3bacd881f8959867d105d' => 'phpDocumentor-projectDescriptor-files-c3482ffe3dc3bacd881f8959867d105d', 'phpDocumentor-projectDescriptor-files-bf1cb019c22551fa17e51134b0550b7d' => 'phpDocumentor-projectDescriptor-files-bf1cb019c22551fa17e51134b0550b7d', 'phpDocumentor-projectDescriptor-files-3c3849cdd6be4ca241b1e1e7db59a966' => 'phpDocumentor-projectDescriptor-files-3c3849cdd6be4ca241b1e1e7db59a966', 'phpDocumentor-projectDescriptor-files-e093b1d35bf183a9e5e0ece1f3091c1a' => 'phpDocumentor-projectDescriptor-files-e093b1d35bf183a9e5e0ece1f3091c1a', 'phpDocumentor-projectDescriptor-files-909dd4a70011f955020912ab5b68b9fe' => 'phpDocumentor-projectDescriptor-files-909dd4a70011f955020912ab5b68b9fe', 'phpDocumentor-projectDescriptor-files-b02cc3efbc9c53300289d6e3101aa0c6' => 'phpDocumentor-projectDescriptor-files-b02cc3efbc9c53300289d6e3101aa0c6', 'phpDocumentor-projectDescriptor-files-0781b6a5bcd323d9fab6c8170812d844' => 'phpDocumentor-projectDescriptor-files-0781b6a5bcd323d9fab6c8170812d844', 'phpDocumentor-projectDescriptor-files-4fe3205649e0bcd0b7c52d71a38d40c7' => 'phpDocumentor-projectDescriptor-files-4fe3205649e0bcd0b7c52d71a38d40c7']; protected $maxIdLength = NULL; protected $logger = NULL; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}callbackWrapper = [0 => 'Symfony\\Component\\Cache\\LockRegistry', 1 => 'compute']; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}computing = []; private $marshaller = class Symfony\Component\Cache\Marshaller\DefaultMarshaller { private $useIgbinarySerialize = FALSE }; private $directory = 'G:\\Github\\phpdoc-test\\.phpdoc\\cache\\descriptors\\'; private $tmp = NULL } }; private $logger = class Symfony\Bridge\Monolog\Logger { protected $name = 'app'; protected $handlers = [0 => class Symfony\Bridge\Monolog\Handler\ConsoleHandler { private $output = class Symfony\Component\Console\Output\StreamOutput { private $stream = resource(159) of type (stream); private ${Symfony\Component\Console\Output\Output}verbosity = 32; private ${Symfony\Component\Console\Output\Output}formatter = class Symfony\Component\Console\Formatter\OutputFormatter { ... } }; private $verbosityLevelMap = [32 => 400, 64 => 250, 128 => 200, 256 => 100, 16 => 400]; private $consoleFormatterOptions = []; protected $level = 400; protected $bubble = TRUE; protected $processors = []; protected $formatter = NULL }]; protected $processors = []; protected $microsecondTimestamps = TRUE; protected $timezone = class DateTimeZone { public $timezone_type = 3; public $timezone = 'Asia/Shanghai' }; protected $exceptionHandler = NULL } }, class phpDocumentor\Pipeline\Stage\Cache\StoreGuidesToCache { private $logger = class Symfony\Bridge\Monolog\Logger { protected $name = 'app'; protected $handlers = [0 => class Symfony\Bridge\Monolog\Handler\ConsoleHandler { private $output = class Symfony\Component\Console\Output\StreamOutput { private $stream = resource(159) of type (stream); private ${Symfony\Component\Console\Output\Output}verbosity = 32; private ${Symfony\Component\Console\Output\Output}formatter = class Symfony\Component\Console\Formatter\OutputFormatter { ... } }; private $verbosityLevelMap = [32 => 400, 64 => 250, 128 => 200, 256 => 100, 16 => 400]; private $consoleFormatterOptions = []; protected $level = 400; protected $bubble = TRUE; protected $processors = []; protected $formatter = NULL }]; protected $processors = []; protected $microsecondTimestamps = TRUE; protected $timezone = class DateTimeZone { public $timezone_type = 3; public $timezone = 'Asia/Shanghai' }; protected $exceptionHandler = NULL }; private $commandBus = class League\Tactician\CommandBus { private $middlewareChain = class Closure { virtual $closure = "$this->League\Tactician\{closure}" } } })) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/league/pipeline/src/Pipeline.php:34
    2.4849   20041192  16. phpDocumentor\Pipeline\Stage\Parser\ParseFiles->__invoke($payload = class phpDocumentor\Pipeline\Stage\Parser\Payload { private $files = [0 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/basic/abstract.php' }, 1 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/basic/author.php' }, 2 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/basic/category.php' }, 3 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/basic/copyright.php' }, 4 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/basic/deprecated.php' }, 5 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/basic/example.php' }, 6 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/basic/filesource.php' }, 7 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/basic/final.php' }, 8 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/basic/global.php' }, 9 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/basic/ignore.php' }, 10 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/basic/internal.php' }, 11 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/basic/license.php' }, 12 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/basic/link.php' }, 13 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/basic/method.php' }, 14 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/basic/name.php' }, 15 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/basic/package.php' }, 16 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/basic/param.php' }, 17 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/basic/property.php' }, 18 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/basic/return.php' }, 19 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/basic/see.php' }, 20 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/basic/since.php' }, 21 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/basic/static.php' }, 22 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/basic/staticvar.php' }, 23 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/basic/subpackage.php' }, 24 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/basic/throws.php' }, 25 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/basic/todo.php' }, 26 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/basic/tutorial.php' }, 27 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/basic/uses.php' }, 28 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/basic/var.php' }, 29 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/basic/version.php' }, 30 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/inline/example.php' }, 31 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/inline/inheritdoc.php' }, 32 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/inline/internal.php' }, 33 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/inline/link.php' }, 34 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/inline/source.php' }, 35 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = [...]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { ... }]; protected $config = class League\Flysystem\Config { protected $settings = [...]; protected $fallback = NULL } }; private $fileName = 'tag/inline/tutorial.php' }]; private ${phpDocumentor\Pipeline\Stage\Payload}config = ['phpdocumentor' => ['configVersion' => '3', 'title' => 'Documentation', 'use-cache' => TRUE, 'paths' => ['output' => class phpDocumentor\Dsn { private $dsn = '.phpdoc/build'; private $uri = class League\Uri\Uri { ... }; private $parameters = [...] }, 'cache' => class phpDocumentor\Path { private $path = '.phpdoc/cache' }], 'versions' => ['1.0.0' => class phpDocumentor\Configuration\VersionSpecification { private $number = '1.0.0'; public $api = [...]; public $guides = [...] }], 'settings' => [], 'templates' => [0 => ['name' => 'default', 'parameters' => [...]]]]]; private ${phpDocumentor\Pipeline\Stage\Payload}builder = class phpDocumentor\Descriptor\ProjectDescriptorBuilder { protected $assemblerFactory = class phpDocumentor\Descriptor\Builder\AssemblerFactory { protected $assemblers = [0 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\FileAssembler { ... } }, 1 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\ConstantAssembler { ... } }, 2 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\TraitAssembler { ... } }, 3 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\ClassAssembler { ... } }, 4 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\EnumAssembler { ... } }, 5 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\EnumCaseAssembler { ... } }, 6 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\InterfaceAssembler { ... } }, 7 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\PropertyAssembler { ... } }, 8 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\ArgumentAssembler { ... } }, 9 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\MethodAssembler { ... } }, 10 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\FunctionAssembler { ... } }, 11 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\NamespaceAssembler { ... } }, 12 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\AuthorAssembler { ... } }, 13 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\DeprecatedAssembler { ... } }, 14 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\ExampleAssembler { ... } }, 15 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\LinkAssembler { ... } }, 16 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\MethodAssembler { ... } }, 17 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\PropertyAssembler { ... } }, 18 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\PropertyAssembler { ... } }, 19 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\PropertyAssembler { ... } }, 20 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\InvalidTagAssembler { ... } }, 21 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\VarAssembler { ... } }, 22 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\ParamAssembler { ... } }, 23 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\ThrowsAssembler { ... } }, 24 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\ReturnAssembler { ... } }, 25 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\UsesAssembler { ... } }, 26 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\SeeAssembler { ... } }, 27 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\SinceAssembler { ... } }, 28 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\VersionAssembler { ... } }]; protected $fallbackAssemblers = [0 => class phpDocumentor\Descriptor\Builder\AssemblerMatcher { private $matcher = class phpDocumentor\Descriptor\Builder\Matcher { ... }; private $assembler = class phpDocumentor\Descriptor\Builder\Reflector\Tags\GenericTagAssembler { ... } }] }; protected $filter = class phpDocumentor\Descriptor\Filter\Filter { private $pipeline = class League\Pipeline\Pipeline { private $stages = [0 => class phpDocumentor\Descriptor\Filter\StripIgnore { ... }, 1 => class phpDocumentor\Descriptor\Filter\StripIgnoredTags { ... }, 2 => class phpDocumentor\Descriptor\Filter\StripInternal { ... }, 3 => class phpDocumentor\Descriptor\Filter\StripOnVisibility { ... }]; private $processor = class League\Pipeline\InterruptibleProcessor { private $check = class Closure { virtual $closure = "phpDocumentor\Descriptor\Filter\Filter::phpDocumentor\Descriptor\Filter\{closure}", ... } } } }; protected $project = class phpDocumentor\Descriptor\ProjectDescriptor { private $name = 'Documentation'; private $namespace = class phpDocumentor\Descriptor\NamespaceDescriptor { protected $parent = NULL; protected $children = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $functions = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $constants = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $classes = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $interfaces = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $traits = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; private $enums = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\'; private $name = '' }; protected $name = '\\'; protected $namespace = ''; protected $package = NULL; protected $summary = ''; protected $description = NULL; protected $fileDescriptor = NULL; protected $line = 0; protected $tags = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $errors = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $inheritedElement = NULL }; private $package = class phpDocumentor\Descriptor\PackageDescriptor { protected $parent = NULL; protected $children = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $functions = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $constants = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $classes = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $interfaces = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $traits = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; private ${phpDocumentor\Descriptor\NamespaceDescriptor}enums = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\'; private $name = '' }; protected $name = '\\'; protected $namespace = ''; protected $package = NULL; protected $summary = ''; protected $description = NULL; protected $fileDescriptor = NULL; protected $line = 0; protected $tags = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $errors = class phpDocumentor\Descriptor\Collection { protected $items = [...] }; protected $inheritedElement = NULL }; private $files = class phpDocumentor\Descriptor\Collection { protected $items = ['tag/basic/abstract.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/author.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/category.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/copyright.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/deprecated.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/example.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/filesource.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/final.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/global.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/ignore.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/internal.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/license.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/link.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/method.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/name.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/package.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/param.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/property.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/return.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/see.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/since.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/static.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/staticvar.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/subpackage.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/throws.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/todo.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/tutorial.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/uses.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/var.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/basic/version.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/example.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/inheritdoc.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/internal.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/link.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/source.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }, 'tag/inline/tutorial.php' => class phpDocumentor\Descriptor\FileDescriptor { ... }] }; private $indexes = class phpDocumentor\Descriptor\Collection { protected $items = [] }; private $settings = class phpDocumentor\Descriptor\ProjectDescriptor\Settings { private $isModified = FALSE; private $visibility = 7; private $includeSource = FALSE; private $custom = ['guides.enabled' => FALSE, 'graphs.enabled' => FALSE] }; private $partials = class phpDocumentor\Descriptor\Collection { protected $items = [] }; private $versions = class phpDocumentor\Descriptor\Collection { protected $items = [0 => class phpDocumentor\Descriptor\VersionDescriptor { ... }] }; private $description = class phpDocumentor\Descriptor\DocBlock\DescriptionDescriptor { private $description = class phpDocumentor\Reflection\DocBlock\Description { private $bodyTemplate = ''; private $tags = [...] }; private $inlineTags = [] } }; private $servicesWithCustomSettings = class Symfony\Component\DependencyInjection\Argument\RewindableGenerator { private $generator = class Closure { virtual $closure = "$this->ContainerXfq2Hb3\{closure}" }; private $count = 2 }; private $apiSpecification = class phpDocumentor\Configuration\ApiSpecification { private $source = class phpDocumentor\Configuration\Source { private $dsn = class phpDocumentor\Dsn { private $dsn = '.'; private $uri = class League\Uri\Uri { ... }; private $parameters = [...] }; private $paths = [0 => class phpDocumentor\Path { ... }] }; private $output = '.'; private $ignore = ['hidden' => TRUE, 'symlinks' => TRUE, 'paths' => []]; private $extensions = [0 => 'php', 1 => 'php3', 2 => 'phtml']; private $visibility = [0 => 'public', 1 => 'protected', 2 => 'private']; private $defaultPackageName = 'Application'; private $includeSource = FALSE; private $markers = [0 => 'TODO', 1 => 'FIXME']; private $ignoreTags = []; private $examples = NULL; private $encoding = 'utf-8'; private $validate = FALSE } } }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/league/pipeline/src/FingersCrossedProcessor.php:11
    2.4872   20041192  17. phpDocumentor\Parser\Parser->parse($files = [0 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/abstract.php' }, 1 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/author.php' }, 2 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/category.php' }, 3 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/copyright.php' }, 4 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/deprecated.php' }, 5 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/example.php' }, 6 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/filesource.php' }, 7 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/final.php' }, 8 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/global.php' }, 9 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/ignore.php' }, 10 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/internal.php' }, 11 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/license.php' }, 12 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/link.php' }, 13 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/method.php' }, 14 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/name.php' }, 15 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/package.php' }, 16 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/param.php' }, 17 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/property.php' }, 18 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/return.php' }, 19 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/see.php' }, 20 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/since.php' }, 21 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/static.php' }, 22 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/staticvar.php' }, 23 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/subpackage.php' }, 24 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/throws.php' }, 25 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/todo.php' }, 26 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/tutorial.php' }, 27 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/uses.php' }, 28 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/var.php' }, 29 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/version.php' }, 30 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/inline/example.php' }, 31 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/inline/inheritdoc.php' }, 32 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/inline/internal.php' }, 33 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/inline/link.php' }, 34 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/inline/source.php' }, 35 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/inline/tutorial.php' }]) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/src/phpDocumentor/Pipeline/Stage/Parser/ParseFiles.php:62
    2.5023   21601504  18. phpDocumentor\Reflection\Php\ProjectFactory->create($name = 'Untitled project', $files = [0 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/abstract.php' }, 1 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/author.php' }, 2 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/category.php' }, 3 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/copyright.php' }, 4 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/deprecated.php' }, 5 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/example.php' }, 6 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/filesource.php' }, 7 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/final.php' }, 8 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/global.php' }, 9 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/ignore.php' }, 10 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/internal.php' }, 11 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/license.php' }, 12 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/link.php' }, 13 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/method.php' }, 14 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/name.php' }, 15 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/package.php' }, 16 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/param.php' }, 17 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/property.php' }, 18 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/return.php' }, 19 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/see.php' }, 20 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/since.php' }, 21 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/static.php' }, 22 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/staticvar.php' }, 23 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/subpackage.php' }, 24 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/throws.php' }, 25 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/todo.php' }, 26 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/tutorial.php' }, 27 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/uses.php' }, 28 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/var.php' }, 29 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/version.php' }, 30 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/inline/example.php' }, 31 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/inline/inheritdoc.php' }, 32 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/inline/internal.php' }, 33 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/inline/link.php' }, 34 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/inline/source.php' }, 35 => class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/inline/tutorial.php' }]) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/src/phpDocumentor/Parser/Parser.php:205
    3.7195   23331032  19. phpDocumentor\Reflection\Php\Factory\AbstractFactory->create($context = class phpDocumentor\Reflection\Php\Factory\ContextStack { private $elements = []; private $typeContext = NULL; private $project = class phpDocumentor\Reflection\Php\Project { private $name = 'Untitled project'; private $rootNamespace = class phpDocumentor\Reflection\Php\Namespace_ { private $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\'; private $name = '' }; private $functions = []; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $metadata = [] }; private $files = ['tag/basic/abstract.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '25383ef3973570a805774c93039c30e6'; private $name = 'abstract.php'; private $path = 'tag/basic/abstract.php'; private $source = '<?php\r\n/**\r\n * 这是abstract的标签示例\r\n * \r\n * 如果类中有最少一个抽象方法的话，那么类应该被声明为抽象类\r\n * 但是生成的文档里面没有此类为抽象类的说明\r\n */\r\n\r\nabstract class AbstractClass\r\n{\r\n    /**\r\n    * 这是一个抽象方法a\r\n    *\r\n    * @abstract\r\n    */\r\n    abstract function abstractFunc1(){}\r\n\r\n    /**\r\n    * 这是一个普通的方法b\r\n    */\r\n    function abstractFunc2(){}\r\n\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\AbstractClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/author.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是author标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = 'd9e361a09ccde31989ccb20e88a67911'; private $name = 'author.php'; private $path = 'tag/basic/author.php'; private $source = '<?php\r\n/**\r\n * 这是author标签示例\r\n * \r\n * 此标签看起来没什么作用\r\n * 当前为page示例\r\n * 此标签可以用于任何需要标记的元素上\r\n * (global variable, include, constant, function, define, class, variable, method, page)\r\n * \r\n * @author honece <china_zhz@year.net>\r\n */\r\n/**\r\n * 当前为function示例\r\n * \r\n * 此函数可能由另一个作者编写\r\n * @author honece No.2\r\n */\r\nfunction authorFunc(){}'; private $namespaces = []; private $includes = []; private $functions = ['\authorFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/category.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '548c7434eede46236d937df49eb48948'; private $name = 'category.php'; private $path = 'tag/basic/category.php'; private $source = '<?php\r\n/**\r\n * 这是category的标签示例\r\n * \r\n * 这是声明类别的示例\r\n * 看起来没有什么作用\r\n * @category mycategory\r\n */\r\n\r\nfunction categoryFunc()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = []; private $includes = []; private $functions = ['\categoryFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/copyright.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '2b678c2b48219fe173c62f57864f2525'; private $name = 'copyright.php'; private $path = 'tag/basic/copyright.php'; private $source = '<?php\r\n/**\r\n * 这是copyright的标签示例\r\n * \r\n * 用来声明版权，看起来没什么作用\r\n * 当前为页面级文档块\r\n * @copyright Copyright (c) 2023, honece\r\n */\r\nfunction copyrightFunc(){}\r\n'; private $namespaces = []; private $includes = []; private $functions = ['\copyrightFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/deprecated.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '17d32066e871d9fc63297cfd57169977'; private $name = 'deprecated.php'; private $path = 'tag/basic/deprecated.php'; private $source = '<?php\r\n/**\r\n * 这是deprecated标签示例\r\n * \r\n * 当前为class级文档块，\r\n * 此标记可用于page级文档块之外的文档块\r\n */\r\nclass DeprecatedClass\r\n{\r\n    /**\r\n     * @deprecated <0.1.0> a方法自0.1.0版本已弃用\r\n     */\r\n    function deprecatedFunc(){}\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\DeprecatedClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/example.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '8bb87bb5e2cc319aae956131058b2c05'; private $name = 'example.php'; private $path = 'tag/basic/example.php'; private $source = '<?php\r\n/**\r\n* 这是example标签示例\r\n*\r\n* 这个标签应该弃用了，没看到作用\r\n* @example /tag/inline/example.php 这是此标签内联用法\r\n* @example example.php 此示例为当前目录文件\r\n*/\r\nfunction exampleFunc(){}'; private $namespaces = []; private $includes = []; private $functions = ['\exampleFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/filesource.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是filesource标签的示例代码'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = '6855239bc05bb284fa5bac07c3b0ae74'; private $name = 'filesource.php'; private $path = 'tag/basic/filesource.php'; private $source = '<?php\r\n/**\r\n * 这是filesource标签的示例代码\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 作用就是给当前文件创建一个链接并显示源代码\r\n * @filesource\r\n */\r\necho "filesource";'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/final.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'd5f20945a818b3c642fdab441d2ab021'; private $name = 'final.php'; private $path = 'tag/basic/final.php'; private $source = '<?php\r\n/**\r\n * 这是final标签的示例\r\n * 此标签已无效，作用就是字面意思\r\n */\r\n\r\nclass FinalClass\r\n{\r\n    /**\r\n     * @final\r\n     */\r\n    final function finalFunc()\r\n    {\r\n    }\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\FinalClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/global.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是global标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = '4d282567fbbd0bb8bd3806a7c8d48ac4'; private $name = 'global.php'; private $path = 'tag/basic/global.php'; private $source = '<?php\r\n/**\r\n * 这是global标签示例\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 主要用于记录全局变量的用法\r\n * 建议直接声明在定义全局变量的上一行，以免引发放在错误的作用域内不识别的错误\r\n */\r\n\r\n/** \r\n * @global mixed $_GLOBALS["myvar"] \r\n */\r\n$_GLOBALS["myvar"] = array("this" => \'工作正常\');\r\n\r\n\r\n\r\n/**\r\n * 将@name与@global一起使用的示例\r\n * 在@name标签中，name必须有$,否则将引发错误\r\n * @global array $GLOBALS[\'ne'...; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/ignore.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是ignore标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = 'b8c7f25d8710acdd4997bf8b9cf326f5'; private $name = 'ignore.php'; private $path = 'tag/basic/ignore.php'; private $source = '<?php\r\n/**\r\n * 这是ignore标签示例\r\n * \r\n * 这个标签应该被弃用了，没看到作用\r\n * 此标签用于组织phpdoc记录元素\r\n */\r\n\r\nif ($ostest) {\r\n    /**\r\n     * This define will either be \'Unix\' or \'Windows\'\r\n     */\r\n    define("OS", "Unix");\r\n}\r\nelse {\r\n    /**\r\n     * @ignore 这里是忽略的常量\r\n     */\r\n    define("OS", "Windows");\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = ['\OS' => class phpDocumentor\Reflection\Php\Constant { ... }]; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/internal.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '7c4ee7a472406e48a31b52a38228e7b8'; private $name = 'internal.php'; private $path = 'tag/basic/internal.php'; private $source = '<?php\r\n/**\r\n * 这是internal标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签可以生成两份文档，官方说是phpdoc最有用的功能之一\r\n * {@internal 要访问有关修改此类的指南,见 {@link http://www.baidu.com 指南},或联系你的主管}}}\r\n * @internal 该类使用私有方法 {@link _foo()} 和 {@link _bar()} 做一些事情\r\n */\r\n\r\nclass InternalClass\r\n{\r\n    private function _foo()\r\n    {\r\n    }\r\n    private function _bar()\r\n    {\r\n    }\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\InternalClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/license.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '614a33e8f17827aa988341b4f193b49f'; private $name = 'license.php'; private $path = 'tag/basic/license.php'; private $source = '<?php\r\n/**\r\n * 这是license标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签用于向用户提示适用于此文档块的许可证\r\n * 展示指向许可证URL的超链接，个人只建议放在文件级别的文档块中\r\n * @license http://www.apache.org/licenses/LICENSE-2.0 Apache2.0\r\n */\r\n\r\nclass LicenseClass\r\n{\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\LicenseClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/link.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是link标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = '9c13e13e5c3217f8f2e974c4dfce67a5'; private $name = 'link.php'; private $path = 'tag/basic/link.php'; private $source = '<?php\r\n/**\r\n * 这是link标签示例\r\n * @link http://www.baidu.com 详情找百度\r\n */\r\n\r\n /**\r\n  * @link https://www.ietf.org/rfc/rfc2396.txt RFC2396\r\n  */\r\n define("TEST_CONSTANT2",3);\r\n'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = ['\TEST_CONSTANT2' => class phpDocumentor\Reflection\Php\Constant { ... }]; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/method.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '445eba76dd6b5f15c3fcc343ef10bcf9'; private $name = 'method.php'; private $path = 'tag/basic/method.php'; private $source = '<?php\r\n/**\r\n * 这是method标签示例\r\n * \r\n * 官方给出的定义是，要在子类中声明父类使用魔术方法来实现的一些非显示存在方法\r\n * \r\n * @method return echo2(string $string) 打印带有换行符的字符串\r\n */\r\nclass MethodClass extends Father{}\r\n\r\nclass Father\r\n{\r\n    function __call($method, string $params)\r\n    {\r\n        if ($method == \'echo2\') {\r\n            echo $params . PHP_EOL;\r\n        }\r\n    }\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\MethodClass' => class phpDocumentor\Reflection\Php\Class_ { ... }, '\Father' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/name.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是name标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = 'd9019fefa63635ac09f7bb2b6f7c6cba'; private $name = 'name.php'; private $path = 'tag/basic/name.php'; private $source = '<?php\r\n/**\r\n * 这是name标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n */\r\n\r\n/**\r\n * 当在函数中使用@global时，它将链接到$baz\r\n * @global array $GLOBALS[\'baz\'] \r\n */\r\n$GLOBALS[\'baz\'] = array(\'foo\', \'bar\');\r\n\r\n/**\r\n * @global array used for stuff\r\n */\r\nfunction name()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = []; private $includes = []; private $functions = ['\name()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/package.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是package标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = '9f03658e0d23226be1fcd8ca7f88ed8e'; private $name = 'package.php'; private $path = 'tag/basic/package.php'; private $source = '<?php\r\n/**\r\n * 这是package标签示例\r\n * \r\n * 页面级DocBlock示例。\r\n * 此DocBlock位于另一个DocBlock之前，将被解析为页面级别。\r\n * 将您的@package和@subpackage标记放在此处\r\n * @package packageTest\r\n */\r\n\r\n/**\r\n * function bluh\r\n */\r\nfunction bluh()\r\n{\r\n}\r\n?>\r\n<?php\r\n/**\r\n* 类 PackageClass\r\n*\r\n* 类级DocBlock示例。以下示例代表packageTestSub包在packageTest内,\r\n* 需要注意下划线[_]也会被解析成包分割符\r\n* @package packageTest\\packageTestSub \r\n*/'...; private $namespaces = []; private $includes = []; private $functions = ['\bluh()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = ['\PackageClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/param.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是param标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = '9b7e83cee7e212b7bdaabae8ecc456f4'; private $name = 'param.php'; private $path = 'tag/basic/param.php'; private $source = '<?php\r\n/**\r\n * 这是param标签示例\r\n * \r\n * 声明方法传入的参数\r\n */\r\n\r\n /**\r\n  * @param int $b 你需要传入一个整数型的变量\r\n  */\r\n function parmFunc(int $b){}'; private $namespaces = []; private $includes = []; private $functions = ['\parmFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/property.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'a1d1498b932fe0c2a140120d62e3411c'; private $name = 'property.php'; private $path = 'tag/basic/property.php'; private $source = '<?php\r\n/**\r\n * 这是property包括它的变体[property-read | property-write]标签示例\r\n *\r\n * @property mixed $regular 声明常规的读写属性\r\n * @property-read int $foo 声明只读\r\n * @property-write string $bar 声明只写\r\n */\r\n\r\nclass PropertyClass\r\n{\r\n    private $_thingy;\r\n    private $_bar;\r\n    function __get($var)\r\n    {\r\n        switch ($var) {\r\n            case \'foo\':\r\n                return 45;\r\n            case \'regular\':\r\n                return $this->_thingy;\r\n        }\r\n    }\r\n'...; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\PropertyClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/return.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '845265a10a560b5a5359f1882513c161'; private $name = 'return.php'; private $path = 'tag/basic/return.php'; private $source = '<?php\r\n/**\r\n * 这是return标签示例\r\n * \r\n * 这个标签用于标记方法或函数的返回值和返回内容\r\n * @return int 这里会返回一个整数类型的数字\r\n */\r\nfunction returnFunc($param)\r\n{\r\n    $b = (int) $param;\r\n    return $b;\r\n}'; private $namespaces = []; private $includes = []; private $functions = ['\returnFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }]; private $namespaces = [] } }, $object = class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => ['public' => 420, 'private' => 384], 'dir' => ['public' => 493, 'private' => 448]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/see.php' }, $strategies = class phpDocumentor\Reflection\Php\ProjectFactoryStrategies { private $strategies = class SplPriorityQueue {  } }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Php/ProjectFactory.php:110
    3.7204   23331032  20. phpDocumentor\Reflection\Php\Factory\File->doCreate($context = class phpDocumentor\Reflection\Php\Factory\ContextStack { private $elements = []; private $typeContext = NULL; private $project = class phpDocumentor\Reflection\Php\Project { private $name = 'Untitled project'; private $rootNamespace = class phpDocumentor\Reflection\Php\Namespace_ { private $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\'; private $name = '' }; private $functions = []; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $metadata = [] }; private $files = ['tag/basic/abstract.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '25383ef3973570a805774c93039c30e6'; private $name = 'abstract.php'; private $path = 'tag/basic/abstract.php'; private $source = '<?php\r\n/**\r\n * 这是abstract的标签示例\r\n * \r\n * 如果类中有最少一个抽象方法的话，那么类应该被声明为抽象类\r\n * 但是生成的文档里面没有此类为抽象类的说明\r\n */\r\n\r\nabstract class AbstractClass\r\n{\r\n    /**\r\n    * 这是一个抽象方法a\r\n    *\r\n    * @abstract\r\n    */\r\n    abstract function abstractFunc1(){}\r\n\r\n    /**\r\n    * 这是一个普通的方法b\r\n    */\r\n    function abstractFunc2(){}\r\n\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\AbstractClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/author.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是author标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = 'd9e361a09ccde31989ccb20e88a67911'; private $name = 'author.php'; private $path = 'tag/basic/author.php'; private $source = '<?php\r\n/**\r\n * 这是author标签示例\r\n * \r\n * 此标签看起来没什么作用\r\n * 当前为page示例\r\n * 此标签可以用于任何需要标记的元素上\r\n * (global variable, include, constant, function, define, class, variable, method, page)\r\n * \r\n * @author honece <china_zhz@year.net>\r\n */\r\n/**\r\n * 当前为function示例\r\n * \r\n * 此函数可能由另一个作者编写\r\n * @author honece No.2\r\n */\r\nfunction authorFunc(){}'; private $namespaces = []; private $includes = []; private $functions = ['\authorFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/category.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '548c7434eede46236d937df49eb48948'; private $name = 'category.php'; private $path = 'tag/basic/category.php'; private $source = '<?php\r\n/**\r\n * 这是category的标签示例\r\n * \r\n * 这是声明类别的示例\r\n * 看起来没有什么作用\r\n * @category mycategory\r\n */\r\n\r\nfunction categoryFunc()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = []; private $includes = []; private $functions = ['\categoryFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/copyright.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '2b678c2b48219fe173c62f57864f2525'; private $name = 'copyright.php'; private $path = 'tag/basic/copyright.php'; private $source = '<?php\r\n/**\r\n * 这是copyright的标签示例\r\n * \r\n * 用来声明版权，看起来没什么作用\r\n * 当前为页面级文档块\r\n * @copyright Copyright (c) 2023, honece\r\n */\r\nfunction copyrightFunc(){}\r\n'; private $namespaces = []; private $includes = []; private $functions = ['\copyrightFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/deprecated.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '17d32066e871d9fc63297cfd57169977'; private $name = 'deprecated.php'; private $path = 'tag/basic/deprecated.php'; private $source = '<?php\r\n/**\r\n * 这是deprecated标签示例\r\n * \r\n * 当前为class级文档块，\r\n * 此标记可用于page级文档块之外的文档块\r\n */\r\nclass DeprecatedClass\r\n{\r\n    /**\r\n     * @deprecated <0.1.0> a方法自0.1.0版本已弃用\r\n     */\r\n    function deprecatedFunc(){}\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\DeprecatedClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/example.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '8bb87bb5e2cc319aae956131058b2c05'; private $name = 'example.php'; private $path = 'tag/basic/example.php'; private $source = '<?php\r\n/**\r\n* 这是example标签示例\r\n*\r\n* 这个标签应该弃用了，没看到作用\r\n* @example /tag/inline/example.php 这是此标签内联用法\r\n* @example example.php 此示例为当前目录文件\r\n*/\r\nfunction exampleFunc(){}'; private $namespaces = []; private $includes = []; private $functions = ['\exampleFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/filesource.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是filesource标签的示例代码'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = '6855239bc05bb284fa5bac07c3b0ae74'; private $name = 'filesource.php'; private $path = 'tag/basic/filesource.php'; private $source = '<?php\r\n/**\r\n * 这是filesource标签的示例代码\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 作用就是给当前文件创建一个链接并显示源代码\r\n * @filesource\r\n */\r\necho "filesource";'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/final.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'd5f20945a818b3c642fdab441d2ab021'; private $name = 'final.php'; private $path = 'tag/basic/final.php'; private $source = '<?php\r\n/**\r\n * 这是final标签的示例\r\n * 此标签已无效，作用就是字面意思\r\n */\r\n\r\nclass FinalClass\r\n{\r\n    /**\r\n     * @final\r\n     */\r\n    final function finalFunc()\r\n    {\r\n    }\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\FinalClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/global.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是global标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = '4d282567fbbd0bb8bd3806a7c8d48ac4'; private $name = 'global.php'; private $path = 'tag/basic/global.php'; private $source = '<?php\r\n/**\r\n * 这是global标签示例\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 主要用于记录全局变量的用法\r\n * 建议直接声明在定义全局变量的上一行，以免引发放在错误的作用域内不识别的错误\r\n */\r\n\r\n/** \r\n * @global mixed $_GLOBALS["myvar"] \r\n */\r\n$_GLOBALS["myvar"] = array("this" => \'工作正常\');\r\n\r\n\r\n\r\n/**\r\n * 将@name与@global一起使用的示例\r\n * 在@name标签中，name必须有$,否则将引发错误\r\n * @global array $GLOBALS[\'ne'...; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/ignore.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是ignore标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = 'b8c7f25d8710acdd4997bf8b9cf326f5'; private $name = 'ignore.php'; private $path = 'tag/basic/ignore.php'; private $source = '<?php\r\n/**\r\n * 这是ignore标签示例\r\n * \r\n * 这个标签应该被弃用了，没看到作用\r\n * 此标签用于组织phpdoc记录元素\r\n */\r\n\r\nif ($ostest) {\r\n    /**\r\n     * This define will either be \'Unix\' or \'Windows\'\r\n     */\r\n    define("OS", "Unix");\r\n}\r\nelse {\r\n    /**\r\n     * @ignore 这里是忽略的常量\r\n     */\r\n    define("OS", "Windows");\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = ['\OS' => class phpDocumentor\Reflection\Php\Constant { ... }]; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/internal.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '7c4ee7a472406e48a31b52a38228e7b8'; private $name = 'internal.php'; private $path = 'tag/basic/internal.php'; private $source = '<?php\r\n/**\r\n * 这是internal标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签可以生成两份文档，官方说是phpdoc最有用的功能之一\r\n * {@internal 要访问有关修改此类的指南,见 {@link http://www.baidu.com 指南},或联系你的主管}}}\r\n * @internal 该类使用私有方法 {@link _foo()} 和 {@link _bar()} 做一些事情\r\n */\r\n\r\nclass InternalClass\r\n{\r\n    private function _foo()\r\n    {\r\n    }\r\n    private function _bar()\r\n    {\r\n    }\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\InternalClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/license.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '614a33e8f17827aa988341b4f193b49f'; private $name = 'license.php'; private $path = 'tag/basic/license.php'; private $source = '<?php\r\n/**\r\n * 这是license标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签用于向用户提示适用于此文档块的许可证\r\n * 展示指向许可证URL的超链接，个人只建议放在文件级别的文档块中\r\n * @license http://www.apache.org/licenses/LICENSE-2.0 Apache2.0\r\n */\r\n\r\nclass LicenseClass\r\n{\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\LicenseClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/link.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是link标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = '9c13e13e5c3217f8f2e974c4dfce67a5'; private $name = 'link.php'; private $path = 'tag/basic/link.php'; private $source = '<?php\r\n/**\r\n * 这是link标签示例\r\n * @link http://www.baidu.com 详情找百度\r\n */\r\n\r\n /**\r\n  * @link https://www.ietf.org/rfc/rfc2396.txt RFC2396\r\n  */\r\n define("TEST_CONSTANT2",3);\r\n'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = ['\TEST_CONSTANT2' => class phpDocumentor\Reflection\Php\Constant { ... }]; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/method.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '445eba76dd6b5f15c3fcc343ef10bcf9'; private $name = 'method.php'; private $path = 'tag/basic/method.php'; private $source = '<?php\r\n/**\r\n * 这是method标签示例\r\n * \r\n * 官方给出的定义是，要在子类中声明父类使用魔术方法来实现的一些非显示存在方法\r\n * \r\n * @method return echo2(string $string) 打印带有换行符的字符串\r\n */\r\nclass MethodClass extends Father{}\r\n\r\nclass Father\r\n{\r\n    function __call($method, string $params)\r\n    {\r\n        if ($method == \'echo2\') {\r\n            echo $params . PHP_EOL;\r\n        }\r\n    }\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\MethodClass' => class phpDocumentor\Reflection\Php\Class_ { ... }, '\Father' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/name.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是name标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = 'd9019fefa63635ac09f7bb2b6f7c6cba'; private $name = 'name.php'; private $path = 'tag/basic/name.php'; private $source = '<?php\r\n/**\r\n * 这是name标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n */\r\n\r\n/**\r\n * 当在函数中使用@global时，它将链接到$baz\r\n * @global array $GLOBALS[\'baz\'] \r\n */\r\n$GLOBALS[\'baz\'] = array(\'foo\', \'bar\');\r\n\r\n/**\r\n * @global array used for stuff\r\n */\r\nfunction name()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = []; private $includes = []; private $functions = ['\name()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/package.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是package标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = '9f03658e0d23226be1fcd8ca7f88ed8e'; private $name = 'package.php'; private $path = 'tag/basic/package.php'; private $source = '<?php\r\n/**\r\n * 这是package标签示例\r\n * \r\n * 页面级DocBlock示例。\r\n * 此DocBlock位于另一个DocBlock之前，将被解析为页面级别。\r\n * 将您的@package和@subpackage标记放在此处\r\n * @package packageTest\r\n */\r\n\r\n/**\r\n * function bluh\r\n */\r\nfunction bluh()\r\n{\r\n}\r\n?>\r\n<?php\r\n/**\r\n* 类 PackageClass\r\n*\r\n* 类级DocBlock示例。以下示例代表packageTestSub包在packageTest内,\r\n* 需要注意下划线[_]也会被解析成包分割符\r\n* @package packageTest\\packageTestSub \r\n*/'...; private $namespaces = []; private $includes = []; private $functions = ['\bluh()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = ['\PackageClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/param.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是param标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = '9b7e83cee7e212b7bdaabae8ecc456f4'; private $name = 'param.php'; private $path = 'tag/basic/param.php'; private $source = '<?php\r\n/**\r\n * 这是param标签示例\r\n * \r\n * 声明方法传入的参数\r\n */\r\n\r\n /**\r\n  * @param int $b 你需要传入一个整数型的变量\r\n  */\r\n function parmFunc(int $b){}'; private $namespaces = []; private $includes = []; private $functions = ['\parmFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/property.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'a1d1498b932fe0c2a140120d62e3411c'; private $name = 'property.php'; private $path = 'tag/basic/property.php'; private $source = '<?php\r\n/**\r\n * 这是property包括它的变体[property-read | property-write]标签示例\r\n *\r\n * @property mixed $regular 声明常规的读写属性\r\n * @property-read int $foo 声明只读\r\n * @property-write string $bar 声明只写\r\n */\r\n\r\nclass PropertyClass\r\n{\r\n    private $_thingy;\r\n    private $_bar;\r\n    function __get($var)\r\n    {\r\n        switch ($var) {\r\n            case \'foo\':\r\n                return 45;\r\n            case \'regular\':\r\n                return $this->_thingy;\r\n        }\r\n    }\r\n'...; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\PropertyClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/return.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '845265a10a560b5a5359f1882513c161'; private $name = 'return.php'; private $path = 'tag/basic/return.php'; private $source = '<?php\r\n/**\r\n * 这是return标签示例\r\n * \r\n * 这个标签用于标记方法或函数的返回值和返回内容\r\n * @return int 这里会返回一个整数类型的数字\r\n */\r\nfunction returnFunc($param)\r\n{\r\n    $b = (int) $param;\r\n    return $b;\r\n}'; private $namespaces = []; private $includes = []; private $functions = ['\returnFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }]; private $namespaces = [] } }, $object = class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => ['public' => 420, 'private' => 384], 'dir' => ['public' => 493, 'private' => 448]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/see.php' }, $strategies = class phpDocumentor\Reflection\Php\ProjectFactoryStrategies { private $strategies = class SplPriorityQueue {  } }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Php/Factory/AbstractFactory.php:59
    3.7215   23331128  21. phpDocumentor\Reflection\Middleware\ChainFactory::phpDocumentor\Reflection\Middleware\{closure:phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Middleware/ChainFactory.php:42-44}($command = class phpDocumentor\Reflection\Php\Factory\File\CreateCommand { private $file = class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/see.php' }; private $strategies = class phpDocumentor\Reflection\Php\ProjectFactoryStrategies { private $strategies = class SplPriorityQueue {  } }; private $context = class phpDocumentor\Reflection\Php\Factory\ContextStack { private $elements = []; private $typeContext = NULL; private $project = class phpDocumentor\Reflection\Php\Project { private $name = 'Untitled project'; private $rootNamespace = class phpDocumentor\Reflection\Php\Namespace_ { private $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\'; private $name = '' }; private $functions = []; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $metadata = [] }; private $files = ['tag/basic/abstract.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '25383ef3973570a805774c93039c30e6'; private $name = 'abstract.php'; private $path = 'tag/basic/abstract.php'; private $source = '<?php\r\n/**\r\n * 这是abstract的标签示例\r\n * \r\n * 如果类中有最少一个抽象方法的话，那么类应该被声明为抽象类\r\n * 但是生成的文档里面没有此类为抽象类的说明\r\n */\r\n\r\nabstract class AbstractClass\r\n{\r\n    /**\r\n    * 这是一个抽象方法a\r\n    *\r\n    * @abstract\r\n    */\r\n    abstract function abstractFunc1(){}\r\n\r\n    /**\r\n    * 这是一个普通的方法b\r\n    */\r\n    function abstractFunc2(){}\r\n\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/author.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'd9e361a09ccde31989ccb20e88a67911'; private $name = 'author.php'; private $path = 'tag/basic/author.php'; private $source = '<?php\r\n/**\r\n * 这是author标签示例\r\n * \r\n * 此标签看起来没什么作用\r\n * 当前为page示例\r\n * 此标签可以用于任何需要标记的元素上\r\n * (global variable, include, constant, function, define, class, variable, method, page)\r\n * \r\n * @author honece <china_zhz@year.net>\r\n */\r\n/**\r\n * 当前为function示例\r\n * \r\n * 此函数可能由另一个作者编写\r\n * @author honece No.2\r\n */\r\nfunction authorFunc(){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/category.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '548c7434eede46236d937df49eb48948'; private $name = 'category.php'; private $path = 'tag/basic/category.php'; private $source = '<?php\r\n/**\r\n * 这是category的标签示例\r\n * \r\n * 这是声明类别的示例\r\n * 看起来没有什么作用\r\n * @category mycategory\r\n */\r\n\r\nfunction categoryFunc()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/copyright.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '2b678c2b48219fe173c62f57864f2525'; private $name = 'copyright.php'; private $path = 'tag/basic/copyright.php'; private $source = '<?php\r\n/**\r\n * 这是copyright的标签示例\r\n * \r\n * 用来声明版权，看起来没什么作用\r\n * 当前为页面级文档块\r\n * @copyright Copyright (c) 2023, honece\r\n */\r\nfunction copyrightFunc(){}\r\n'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/deprecated.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '17d32066e871d9fc63297cfd57169977'; private $name = 'deprecated.php'; private $path = 'tag/basic/deprecated.php'; private $source = '<?php\r\n/**\r\n * 这是deprecated标签示例\r\n * \r\n * 当前为class级文档块，\r\n * 此标记可用于page级文档块之外的文档块\r\n */\r\nclass DeprecatedClass\r\n{\r\n    /**\r\n     * @deprecated <0.1.0> a方法自0.1.0版本已弃用\r\n     */\r\n    function deprecatedFunc(){}\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/example.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '8bb87bb5e2cc319aae956131058b2c05'; private $name = 'example.php'; private $path = 'tag/basic/example.php'; private $source = '<?php\r\n/**\r\n* 这是example标签示例\r\n*\r\n* 这个标签应该弃用了，没看到作用\r\n* @example /tag/inline/example.php 这是此标签内联用法\r\n* @example example.php 此示例为当前目录文件\r\n*/\r\nfunction exampleFunc(){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/filesource.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '6855239bc05bb284fa5bac07c3b0ae74'; private $name = 'filesource.php'; private $path = 'tag/basic/filesource.php'; private $source = '<?php\r\n/**\r\n * 这是filesource标签的示例代码\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 作用就是给当前文件创建一个链接并显示源代码\r\n * @filesource\r\n */\r\necho "filesource";'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/final.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'd5f20945a818b3c642fdab441d2ab021'; private $name = 'final.php'; private $path = 'tag/basic/final.php'; private $source = '<?php\r\n/**\r\n * 这是final标签的示例\r\n * 此标签已无效，作用就是字面意思\r\n */\r\n\r\nclass FinalClass\r\n{\r\n    /**\r\n     * @final\r\n     */\r\n    final function finalFunc()\r\n    {\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/global.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '4d282567fbbd0bb8bd3806a7c8d48ac4'; private $name = 'global.php'; private $path = 'tag/basic/global.php'; private $source = '<?php\r\n/**\r\n * 这是global标签示例\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 主要用于记录全局变量的用法\r\n * 建议直接声明在定义全局变量的上一行，以免引发放在错误的作用域内不识别的错误\r\n */\r\n\r\n/** \r\n * @global mixed $_GLOBALS["myvar"] \r\n */\r\n$_GLOBALS["myvar"] = array("this" => \'工作正常\');\r\n\r\n\r\n\r\n/**\r\n * 将@name与@global一起使用的示例\r\n * 在@name标签中，name必须有$,否则将引发错误\r\n * @global array $GLOBALS[\'ne'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/ignore.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'b8c7f25d8710acdd4997bf8b9cf326f5'; private $name = 'ignore.php'; private $path = 'tag/basic/ignore.php'; private $source = '<?php\r\n/**\r\n * 这是ignore标签示例\r\n * \r\n * 这个标签应该被弃用了，没看到作用\r\n * 此标签用于组织phpdoc记录元素\r\n */\r\n\r\nif ($ostest) {\r\n    /**\r\n     * This define will either be \'Unix\' or \'Windows\'\r\n     */\r\n    define("OS", "Unix");\r\n}\r\nelse {\r\n    /**\r\n     * @ignore 这里是忽略的常量\r\n     */\r\n    define("OS", "Windows");\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/internal.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '7c4ee7a472406e48a31b52a38228e7b8'; private $name = 'internal.php'; private $path = 'tag/basic/internal.php'; private $source = '<?php\r\n/**\r\n * 这是internal标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签可以生成两份文档，官方说是phpdoc最有用的功能之一\r\n * {@internal 要访问有关修改此类的指南,见 {@link http://www.baidu.com 指南},或联系你的主管}}}\r\n * @internal 该类使用私有方法 {@link _foo()} 和 {@link _bar()} 做一些事情\r\n */\r\n\r\nclass InternalClass\r\n{\r\n    private function _foo()\r\n    {\r\n    }\r\n    private function _bar()\r\n    {\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/license.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '614a33e8f17827aa988341b4f193b49f'; private $name = 'license.php'; private $path = 'tag/basic/license.php'; private $source = '<?php\r\n/**\r\n * 这是license标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签用于向用户提示适用于此文档块的许可证\r\n * 展示指向许可证URL的超链接，个人只建议放在文件级别的文档块中\r\n * @license http://www.apache.org/licenses/LICENSE-2.0 Apache2.0\r\n */\r\n\r\nclass LicenseClass\r\n{\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/link.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9c13e13e5c3217f8f2e974c4dfce67a5'; private $name = 'link.php'; private $path = 'tag/basic/link.php'; private $source = '<?php\r\n/**\r\n * 这是link标签示例\r\n * @link http://www.baidu.com 详情找百度\r\n */\r\n\r\n /**\r\n  * @link https://www.ietf.org/rfc/rfc2396.txt RFC2396\r\n  */\r\n define("TEST_CONSTANT2",3);\r\n'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/method.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '445eba76dd6b5f15c3fcc343ef10bcf9'; private $name = 'method.php'; private $path = 'tag/basic/method.php'; private $source = '<?php\r\n/**\r\n * 这是method标签示例\r\n * \r\n * 官方给出的定义是，要在子类中声明父类使用魔术方法来实现的一些非显示存在方法\r\n * \r\n * @method return echo2(string $string) 打印带有换行符的字符串\r\n */\r\nclass MethodClass extends Father{}\r\n\r\nclass Father\r\n{\r\n    function __call($method, string $params)\r\n    {\r\n        if ($method == \'echo2\') {\r\n            echo $params . PHP_EOL;\r\n        }\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/name.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'd9019fefa63635ac09f7bb2b6f7c6cba'; private $name = 'name.php'; private $path = 'tag/basic/name.php'; private $source = '<?php\r\n/**\r\n * 这是name标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n */\r\n\r\n/**\r\n * 当在函数中使用@global时，它将链接到$baz\r\n * @global array $GLOBALS[\'baz\'] \r\n */\r\n$GLOBALS[\'baz\'] = array(\'foo\', \'bar\');\r\n\r\n/**\r\n * @global array used for stuff\r\n */\r\nfunction name()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/package.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9f03658e0d23226be1fcd8ca7f88ed8e'; private $name = 'package.php'; private $path = 'tag/basic/package.php'; private $source = '<?php\r\n/**\r\n * 这是package标签示例\r\n * \r\n * 页面级DocBlock示例。\r\n * 此DocBlock位于另一个DocBlock之前，将被解析为页面级别。\r\n * 将您的@package和@subpackage标记放在此处\r\n * @package packageTest\r\n */\r\n\r\n/**\r\n * function bluh\r\n */\r\nfunction bluh()\r\n{\r\n}\r\n?>\r\n<?php\r\n/**\r\n* 类 PackageClass\r\n*\r\n* 类级DocBlock示例。以下示例代表packageTestSub包在packageTest内,\r\n* 需要注意下划线[_]也会被解析成包分割符\r\n* @package packageTest\\packageTestSub \r\n*/'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/param.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9b7e83cee7e212b7bdaabae8ecc456f4'; private $name = 'param.php'; private $path = 'tag/basic/param.php'; private $source = '<?php\r\n/**\r\n * 这是param标签示例\r\n * \r\n * 声明方法传入的参数\r\n */\r\n\r\n /**\r\n  * @param int $b 你需要传入一个整数型的变量\r\n  */\r\n function parmFunc(int $b){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/property.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'a1d1498b932fe0c2a140120d62e3411c'; private $name = 'property.php'; private $path = 'tag/basic/property.php'; private $source = '<?php\r\n/**\r\n * 这是property包括它的变体[property-read | property-write]标签示例\r\n *\r\n * @property mixed $regular 声明常规的读写属性\r\n * @property-read int $foo 声明只读\r\n * @property-write string $bar 声明只写\r\n */\r\n\r\nclass PropertyClass\r\n{\r\n    private $_thingy;\r\n    private $_bar;\r\n    function __get($var)\r\n    {\r\n        switch ($var) {\r\n            case \'foo\':\r\n                return 45;\r\n            case \'regular\':\r\n                return $this->_thingy;\r\n        }\r\n    }\r\n'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/return.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '845265a10a560b5a5359f1882513c161'; private $name = 'return.php'; private $path = 'tag/basic/return.php'; private $source = '<?php\r\n/**\r\n * 这是return标签示例\r\n * \r\n * 这个标签用于标记方法或函数的返回值和返回内容\r\n * @return int 这里会返回一个整数类型的数字\r\n */\r\nfunction returnFunc($param)\r\n{\r\n    $b = (int) $param;\r\n    return $b;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }]; private $namespaces = [] } } }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Php/Factory/File.php:97
    3.7218   23331504  22. phpDocumentor\Parser\Middleware\StopwatchMiddleware->execute($command = class phpDocumentor\Reflection\Php\Factory\File\CreateCommand { private $file = class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/see.php' }; private $strategies = class phpDocumentor\Reflection\Php\ProjectFactoryStrategies { private $strategies = class SplPriorityQueue {  } }; private $context = class phpDocumentor\Reflection\Php\Factory\ContextStack { private $elements = []; private $typeContext = NULL; private $project = class phpDocumentor\Reflection\Php\Project { private $name = 'Untitled project'; private $rootNamespace = class phpDocumentor\Reflection\Php\Namespace_ { private $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\'; private $name = '' }; private $functions = []; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $metadata = [] }; private $files = ['tag/basic/abstract.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '25383ef3973570a805774c93039c30e6'; private $name = 'abstract.php'; private $path = 'tag/basic/abstract.php'; private $source = '<?php\r\n/**\r\n * 这是abstract的标签示例\r\n * \r\n * 如果类中有最少一个抽象方法的话，那么类应该被声明为抽象类\r\n * 但是生成的文档里面没有此类为抽象类的说明\r\n */\r\n\r\nabstract class AbstractClass\r\n{\r\n    /**\r\n    * 这是一个抽象方法a\r\n    *\r\n    * @abstract\r\n    */\r\n    abstract function abstractFunc1(){}\r\n\r\n    /**\r\n    * 这是一个普通的方法b\r\n    */\r\n    function abstractFunc2(){}\r\n\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/author.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'd9e361a09ccde31989ccb20e88a67911'; private $name = 'author.php'; private $path = 'tag/basic/author.php'; private $source = '<?php\r\n/**\r\n * 这是author标签示例\r\n * \r\n * 此标签看起来没什么作用\r\n * 当前为page示例\r\n * 此标签可以用于任何需要标记的元素上\r\n * (global variable, include, constant, function, define, class, variable, method, page)\r\n * \r\n * @author honece <china_zhz@year.net>\r\n */\r\n/**\r\n * 当前为function示例\r\n * \r\n * 此函数可能由另一个作者编写\r\n * @author honece No.2\r\n */\r\nfunction authorFunc(){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/category.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '548c7434eede46236d937df49eb48948'; private $name = 'category.php'; private $path = 'tag/basic/category.php'; private $source = '<?php\r\n/**\r\n * 这是category的标签示例\r\n * \r\n * 这是声明类别的示例\r\n * 看起来没有什么作用\r\n * @category mycategory\r\n */\r\n\r\nfunction categoryFunc()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/copyright.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '2b678c2b48219fe173c62f57864f2525'; private $name = 'copyright.php'; private $path = 'tag/basic/copyright.php'; private $source = '<?php\r\n/**\r\n * 这是copyright的标签示例\r\n * \r\n * 用来声明版权，看起来没什么作用\r\n * 当前为页面级文档块\r\n * @copyright Copyright (c) 2023, honece\r\n */\r\nfunction copyrightFunc(){}\r\n'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/deprecated.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '17d32066e871d9fc63297cfd57169977'; private $name = 'deprecated.php'; private $path = 'tag/basic/deprecated.php'; private $source = '<?php\r\n/**\r\n * 这是deprecated标签示例\r\n * \r\n * 当前为class级文档块，\r\n * 此标记可用于page级文档块之外的文档块\r\n */\r\nclass DeprecatedClass\r\n{\r\n    /**\r\n     * @deprecated <0.1.0> a方法自0.1.0版本已弃用\r\n     */\r\n    function deprecatedFunc(){}\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/example.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '8bb87bb5e2cc319aae956131058b2c05'; private $name = 'example.php'; private $path = 'tag/basic/example.php'; private $source = '<?php\r\n/**\r\n* 这是example标签示例\r\n*\r\n* 这个标签应该弃用了，没看到作用\r\n* @example /tag/inline/example.php 这是此标签内联用法\r\n* @example example.php 此示例为当前目录文件\r\n*/\r\nfunction exampleFunc(){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/filesource.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '6855239bc05bb284fa5bac07c3b0ae74'; private $name = 'filesource.php'; private $path = 'tag/basic/filesource.php'; private $source = '<?php\r\n/**\r\n * 这是filesource标签的示例代码\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 作用就是给当前文件创建一个链接并显示源代码\r\n * @filesource\r\n */\r\necho "filesource";'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/final.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'd5f20945a818b3c642fdab441d2ab021'; private $name = 'final.php'; private $path = 'tag/basic/final.php'; private $source = '<?php\r\n/**\r\n * 这是final标签的示例\r\n * 此标签已无效，作用就是字面意思\r\n */\r\n\r\nclass FinalClass\r\n{\r\n    /**\r\n     * @final\r\n     */\r\n    final function finalFunc()\r\n    {\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/global.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '4d282567fbbd0bb8bd3806a7c8d48ac4'; private $name = 'global.php'; private $path = 'tag/basic/global.php'; private $source = '<?php\r\n/**\r\n * 这是global标签示例\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 主要用于记录全局变量的用法\r\n * 建议直接声明在定义全局变量的上一行，以免引发放在错误的作用域内不识别的错误\r\n */\r\n\r\n/** \r\n * @global mixed $_GLOBALS["myvar"] \r\n */\r\n$_GLOBALS["myvar"] = array("this" => \'工作正常\');\r\n\r\n\r\n\r\n/**\r\n * 将@name与@global一起使用的示例\r\n * 在@name标签中，name必须有$,否则将引发错误\r\n * @global array $GLOBALS[\'ne'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/ignore.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'b8c7f25d8710acdd4997bf8b9cf326f5'; private $name = 'ignore.php'; private $path = 'tag/basic/ignore.php'; private $source = '<?php\r\n/**\r\n * 这是ignore标签示例\r\n * \r\n * 这个标签应该被弃用了，没看到作用\r\n * 此标签用于组织phpdoc记录元素\r\n */\r\n\r\nif ($ostest) {\r\n    /**\r\n     * This define will either be \'Unix\' or \'Windows\'\r\n     */\r\n    define("OS", "Unix");\r\n}\r\nelse {\r\n    /**\r\n     * @ignore 这里是忽略的常量\r\n     */\r\n    define("OS", "Windows");\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/internal.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '7c4ee7a472406e48a31b52a38228e7b8'; private $name = 'internal.php'; private $path = 'tag/basic/internal.php'; private $source = '<?php\r\n/**\r\n * 这是internal标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签可以生成两份文档，官方说是phpdoc最有用的功能之一\r\n * {@internal 要访问有关修改此类的指南,见 {@link http://www.baidu.com 指南},或联系你的主管}}}\r\n * @internal 该类使用私有方法 {@link _foo()} 和 {@link _bar()} 做一些事情\r\n */\r\n\r\nclass InternalClass\r\n{\r\n    private function _foo()\r\n    {\r\n    }\r\n    private function _bar()\r\n    {\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/license.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '614a33e8f17827aa988341b4f193b49f'; private $name = 'license.php'; private $path = 'tag/basic/license.php'; private $source = '<?php\r\n/**\r\n * 这是license标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签用于向用户提示适用于此文档块的许可证\r\n * 展示指向许可证URL的超链接，个人只建议放在文件级别的文档块中\r\n * @license http://www.apache.org/licenses/LICENSE-2.0 Apache2.0\r\n */\r\n\r\nclass LicenseClass\r\n{\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/link.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9c13e13e5c3217f8f2e974c4dfce67a5'; private $name = 'link.php'; private $path = 'tag/basic/link.php'; private $source = '<?php\r\n/**\r\n * 这是link标签示例\r\n * @link http://www.baidu.com 详情找百度\r\n */\r\n\r\n /**\r\n  * @link https://www.ietf.org/rfc/rfc2396.txt RFC2396\r\n  */\r\n define("TEST_CONSTANT2",3);\r\n'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/method.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '445eba76dd6b5f15c3fcc343ef10bcf9'; private $name = 'method.php'; private $path = 'tag/basic/method.php'; private $source = '<?php\r\n/**\r\n * 这是method标签示例\r\n * \r\n * 官方给出的定义是，要在子类中声明父类使用魔术方法来实现的一些非显示存在方法\r\n * \r\n * @method return echo2(string $string) 打印带有换行符的字符串\r\n */\r\nclass MethodClass extends Father{}\r\n\r\nclass Father\r\n{\r\n    function __call($method, string $params)\r\n    {\r\n        if ($method == \'echo2\') {\r\n            echo $params . PHP_EOL;\r\n        }\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/name.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'd9019fefa63635ac09f7bb2b6f7c6cba'; private $name = 'name.php'; private $path = 'tag/basic/name.php'; private $source = '<?php\r\n/**\r\n * 这是name标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n */\r\n\r\n/**\r\n * 当在函数中使用@global时，它将链接到$baz\r\n * @global array $GLOBALS[\'baz\'] \r\n */\r\n$GLOBALS[\'baz\'] = array(\'foo\', \'bar\');\r\n\r\n/**\r\n * @global array used for stuff\r\n */\r\nfunction name()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/package.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9f03658e0d23226be1fcd8ca7f88ed8e'; private $name = 'package.php'; private $path = 'tag/basic/package.php'; private $source = '<?php\r\n/**\r\n * 这是package标签示例\r\n * \r\n * 页面级DocBlock示例。\r\n * 此DocBlock位于另一个DocBlock之前，将被解析为页面级别。\r\n * 将您的@package和@subpackage标记放在此处\r\n * @package packageTest\r\n */\r\n\r\n/**\r\n * function bluh\r\n */\r\nfunction bluh()\r\n{\r\n}\r\n?>\r\n<?php\r\n/**\r\n* 类 PackageClass\r\n*\r\n* 类级DocBlock示例。以下示例代表packageTestSub包在packageTest内,\r\n* 需要注意下划线[_]也会被解析成包分割符\r\n* @package packageTest\\packageTestSub \r\n*/'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/param.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9b7e83cee7e212b7bdaabae8ecc456f4'; private $name = 'param.php'; private $path = 'tag/basic/param.php'; private $source = '<?php\r\n/**\r\n * 这是param标签示例\r\n * \r\n * 声明方法传入的参数\r\n */\r\n\r\n /**\r\n  * @param int $b 你需要传入一个整数型的变量\r\n  */\r\n function parmFunc(int $b){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/property.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'a1d1498b932fe0c2a140120d62e3411c'; private $name = 'property.php'; private $path = 'tag/basic/property.php'; private $source = '<?php\r\n/**\r\n * 这是property包括它的变体[property-read | property-write]标签示例\r\n *\r\n * @property mixed $regular 声明常规的读写属性\r\n * @property-read int $foo 声明只读\r\n * @property-write string $bar 声明只写\r\n */\r\n\r\nclass PropertyClass\r\n{\r\n    private $_thingy;\r\n    private $_bar;\r\n    function __get($var)\r\n    {\r\n        switch ($var) {\r\n            case \'foo\':\r\n                return 45;\r\n            case \'regular\':\r\n                return $this->_thingy;\r\n        }\r\n    }\r\n'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/return.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '845265a10a560b5a5359f1882513c161'; private $name = 'return.php'; private $path = 'tag/basic/return.php'; private $source = '<?php\r\n/**\r\n * 这是return标签示例\r\n * \r\n * 这个标签用于标记方法或函数的返回值和返回内容\r\n * @return int 这里会返回一个整数类型的数字\r\n */\r\nfunction returnFunc($param)\r\n{\r\n    $b = (int) $param;\r\n    return $b;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }]; private $namespaces = [] } } }, $next = class Closure { virtual $closure = "phpDocumentor\Reflection\Middleware\ChainFactory::phpDocumentor\Reflection\Middleware\{closure}" }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Middleware/ChainFactory.php:43
    3.7221   23331504  23. phpDocumentor\Reflection\Middleware\ChainFactory::phpDocumentor\Reflection\Middleware\{closure:phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Middleware/ChainFactory.php:42-44}($command = class phpDocumentor\Reflection\Php\Factory\File\CreateCommand { private $file = class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/see.php' }; private $strategies = class phpDocumentor\Reflection\Php\ProjectFactoryStrategies { private $strategies = class SplPriorityQueue {  } }; private $context = class phpDocumentor\Reflection\Php\Factory\ContextStack { private $elements = []; private $typeContext = NULL; private $project = class phpDocumentor\Reflection\Php\Project { private $name = 'Untitled project'; private $rootNamespace = class phpDocumentor\Reflection\Php\Namespace_ { private $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\'; private $name = '' }; private $functions = []; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $metadata = [] }; private $files = ['tag/basic/abstract.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '25383ef3973570a805774c93039c30e6'; private $name = 'abstract.php'; private $path = 'tag/basic/abstract.php'; private $source = '<?php\r\n/**\r\n * 这是abstract的标签示例\r\n * \r\n * 如果类中有最少一个抽象方法的话，那么类应该被声明为抽象类\r\n * 但是生成的文档里面没有此类为抽象类的说明\r\n */\r\n\r\nabstract class AbstractClass\r\n{\r\n    /**\r\n    * 这是一个抽象方法a\r\n    *\r\n    * @abstract\r\n    */\r\n    abstract function abstractFunc1(){}\r\n\r\n    /**\r\n    * 这是一个普通的方法b\r\n    */\r\n    function abstractFunc2(){}\r\n\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/author.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'd9e361a09ccde31989ccb20e88a67911'; private $name = 'author.php'; private $path = 'tag/basic/author.php'; private $source = '<?php\r\n/**\r\n * 这是author标签示例\r\n * \r\n * 此标签看起来没什么作用\r\n * 当前为page示例\r\n * 此标签可以用于任何需要标记的元素上\r\n * (global variable, include, constant, function, define, class, variable, method, page)\r\n * \r\n * @author honece <china_zhz@year.net>\r\n */\r\n/**\r\n * 当前为function示例\r\n * \r\n * 此函数可能由另一个作者编写\r\n * @author honece No.2\r\n */\r\nfunction authorFunc(){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/category.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '548c7434eede46236d937df49eb48948'; private $name = 'category.php'; private $path = 'tag/basic/category.php'; private $source = '<?php\r\n/**\r\n * 这是category的标签示例\r\n * \r\n * 这是声明类别的示例\r\n * 看起来没有什么作用\r\n * @category mycategory\r\n */\r\n\r\nfunction categoryFunc()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/copyright.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '2b678c2b48219fe173c62f57864f2525'; private $name = 'copyright.php'; private $path = 'tag/basic/copyright.php'; private $source = '<?php\r\n/**\r\n * 这是copyright的标签示例\r\n * \r\n * 用来声明版权，看起来没什么作用\r\n * 当前为页面级文档块\r\n * @copyright Copyright (c) 2023, honece\r\n */\r\nfunction copyrightFunc(){}\r\n'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/deprecated.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '17d32066e871d9fc63297cfd57169977'; private $name = 'deprecated.php'; private $path = 'tag/basic/deprecated.php'; private $source = '<?php\r\n/**\r\n * 这是deprecated标签示例\r\n * \r\n * 当前为class级文档块，\r\n * 此标记可用于page级文档块之外的文档块\r\n */\r\nclass DeprecatedClass\r\n{\r\n    /**\r\n     * @deprecated <0.1.0> a方法自0.1.0版本已弃用\r\n     */\r\n    function deprecatedFunc(){}\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/example.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '8bb87bb5e2cc319aae956131058b2c05'; private $name = 'example.php'; private $path = 'tag/basic/example.php'; private $source = '<?php\r\n/**\r\n* 这是example标签示例\r\n*\r\n* 这个标签应该弃用了，没看到作用\r\n* @example /tag/inline/example.php 这是此标签内联用法\r\n* @example example.php 此示例为当前目录文件\r\n*/\r\nfunction exampleFunc(){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/filesource.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '6855239bc05bb284fa5bac07c3b0ae74'; private $name = 'filesource.php'; private $path = 'tag/basic/filesource.php'; private $source = '<?php\r\n/**\r\n * 这是filesource标签的示例代码\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 作用就是给当前文件创建一个链接并显示源代码\r\n * @filesource\r\n */\r\necho "filesource";'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/final.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'd5f20945a818b3c642fdab441d2ab021'; private $name = 'final.php'; private $path = 'tag/basic/final.php'; private $source = '<?php\r\n/**\r\n * 这是final标签的示例\r\n * 此标签已无效，作用就是字面意思\r\n */\r\n\r\nclass FinalClass\r\n{\r\n    /**\r\n     * @final\r\n     */\r\n    final function finalFunc()\r\n    {\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/global.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '4d282567fbbd0bb8bd3806a7c8d48ac4'; private $name = 'global.php'; private $path = 'tag/basic/global.php'; private $source = '<?php\r\n/**\r\n * 这是global标签示例\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 主要用于记录全局变量的用法\r\n * 建议直接声明在定义全局变量的上一行，以免引发放在错误的作用域内不识别的错误\r\n */\r\n\r\n/** \r\n * @global mixed $_GLOBALS["myvar"] \r\n */\r\n$_GLOBALS["myvar"] = array("this" => \'工作正常\');\r\n\r\n\r\n\r\n/**\r\n * 将@name与@global一起使用的示例\r\n * 在@name标签中，name必须有$,否则将引发错误\r\n * @global array $GLOBALS[\'ne'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/ignore.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'b8c7f25d8710acdd4997bf8b9cf326f5'; private $name = 'ignore.php'; private $path = 'tag/basic/ignore.php'; private $source = '<?php\r\n/**\r\n * 这是ignore标签示例\r\n * \r\n * 这个标签应该被弃用了，没看到作用\r\n * 此标签用于组织phpdoc记录元素\r\n */\r\n\r\nif ($ostest) {\r\n    /**\r\n     * This define will either be \'Unix\' or \'Windows\'\r\n     */\r\n    define("OS", "Unix");\r\n}\r\nelse {\r\n    /**\r\n     * @ignore 这里是忽略的常量\r\n     */\r\n    define("OS", "Windows");\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/internal.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '7c4ee7a472406e48a31b52a38228e7b8'; private $name = 'internal.php'; private $path = 'tag/basic/internal.php'; private $source = '<?php\r\n/**\r\n * 这是internal标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签可以生成两份文档，官方说是phpdoc最有用的功能之一\r\n * {@internal 要访问有关修改此类的指南,见 {@link http://www.baidu.com 指南},或联系你的主管}}}\r\n * @internal 该类使用私有方法 {@link _foo()} 和 {@link _bar()} 做一些事情\r\n */\r\n\r\nclass InternalClass\r\n{\r\n    private function _foo()\r\n    {\r\n    }\r\n    private function _bar()\r\n    {\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/license.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '614a33e8f17827aa988341b4f193b49f'; private $name = 'license.php'; private $path = 'tag/basic/license.php'; private $source = '<?php\r\n/**\r\n * 这是license标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签用于向用户提示适用于此文档块的许可证\r\n * 展示指向许可证URL的超链接，个人只建议放在文件级别的文档块中\r\n * @license http://www.apache.org/licenses/LICENSE-2.0 Apache2.0\r\n */\r\n\r\nclass LicenseClass\r\n{\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/link.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9c13e13e5c3217f8f2e974c4dfce67a5'; private $name = 'link.php'; private $path = 'tag/basic/link.php'; private $source = '<?php\r\n/**\r\n * 这是link标签示例\r\n * @link http://www.baidu.com 详情找百度\r\n */\r\n\r\n /**\r\n  * @link https://www.ietf.org/rfc/rfc2396.txt RFC2396\r\n  */\r\n define("TEST_CONSTANT2",3);\r\n'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/method.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '445eba76dd6b5f15c3fcc343ef10bcf9'; private $name = 'method.php'; private $path = 'tag/basic/method.php'; private $source = '<?php\r\n/**\r\n * 这是method标签示例\r\n * \r\n * 官方给出的定义是，要在子类中声明父类使用魔术方法来实现的一些非显示存在方法\r\n * \r\n * @method return echo2(string $string) 打印带有换行符的字符串\r\n */\r\nclass MethodClass extends Father{}\r\n\r\nclass Father\r\n{\r\n    function __call($method, string $params)\r\n    {\r\n        if ($method == \'echo2\') {\r\n            echo $params . PHP_EOL;\r\n        }\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/name.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'd9019fefa63635ac09f7bb2b6f7c6cba'; private $name = 'name.php'; private $path = 'tag/basic/name.php'; private $source = '<?php\r\n/**\r\n * 这是name标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n */\r\n\r\n/**\r\n * 当在函数中使用@global时，它将链接到$baz\r\n * @global array $GLOBALS[\'baz\'] \r\n */\r\n$GLOBALS[\'baz\'] = array(\'foo\', \'bar\');\r\n\r\n/**\r\n * @global array used for stuff\r\n */\r\nfunction name()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/package.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9f03658e0d23226be1fcd8ca7f88ed8e'; private $name = 'package.php'; private $path = 'tag/basic/package.php'; private $source = '<?php\r\n/**\r\n * 这是package标签示例\r\n * \r\n * 页面级DocBlock示例。\r\n * 此DocBlock位于另一个DocBlock之前，将被解析为页面级别。\r\n * 将您的@package和@subpackage标记放在此处\r\n * @package packageTest\r\n */\r\n\r\n/**\r\n * function bluh\r\n */\r\nfunction bluh()\r\n{\r\n}\r\n?>\r\n<?php\r\n/**\r\n* 类 PackageClass\r\n*\r\n* 类级DocBlock示例。以下示例代表packageTestSub包在packageTest内,\r\n* 需要注意下划线[_]也会被解析成包分割符\r\n* @package packageTest\\packageTestSub \r\n*/'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/param.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9b7e83cee7e212b7bdaabae8ecc456f4'; private $name = 'param.php'; private $path = 'tag/basic/param.php'; private $source = '<?php\r\n/**\r\n * 这是param标签示例\r\n * \r\n * 声明方法传入的参数\r\n */\r\n\r\n /**\r\n  * @param int $b 你需要传入一个整数型的变量\r\n  */\r\n function parmFunc(int $b){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/property.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'a1d1498b932fe0c2a140120d62e3411c'; private $name = 'property.php'; private $path = 'tag/basic/property.php'; private $source = '<?php\r\n/**\r\n * 这是property包括它的变体[property-read | property-write]标签示例\r\n *\r\n * @property mixed $regular 声明常规的读写属性\r\n * @property-read int $foo 声明只读\r\n * @property-write string $bar 声明只写\r\n */\r\n\r\nclass PropertyClass\r\n{\r\n    private $_thingy;\r\n    private $_bar;\r\n    function __get($var)\r\n    {\r\n        switch ($var) {\r\n            case \'foo\':\r\n                return 45;\r\n            case \'regular\':\r\n                return $this->_thingy;\r\n        }\r\n    }\r\n'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/return.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '845265a10a560b5a5359f1882513c161'; private $name = 'return.php'; private $path = 'tag/basic/return.php'; private $source = '<?php\r\n/**\r\n * 这是return标签示例\r\n * \r\n * 这个标签用于标记方法或函数的返回值和返回内容\r\n * @return int 这里会返回一个整数类型的数字\r\n */\r\nfunction returnFunc($param)\r\n{\r\n    $b = (int) $param;\r\n    return $b;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }]; private $namespaces = [] } } }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/src/phpDocumentor/Parser/Middleware/StopwatchMiddleware.php:50
    3.7225   23331504  24. phpDocumentor\Parser\Middleware\EmittingMiddleware->execute($command = class phpDocumentor\Reflection\Php\Factory\File\CreateCommand { private $file = class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/see.php' }; private $strategies = class phpDocumentor\Reflection\Php\ProjectFactoryStrategies { private $strategies = class SplPriorityQueue {  } }; private $context = class phpDocumentor\Reflection\Php\Factory\ContextStack { private $elements = []; private $typeContext = NULL; private $project = class phpDocumentor\Reflection\Php\Project { private $name = 'Untitled project'; private $rootNamespace = class phpDocumentor\Reflection\Php\Namespace_ { private $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\'; private $name = '' }; private $functions = []; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $metadata = [] }; private $files = ['tag/basic/abstract.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '25383ef3973570a805774c93039c30e6'; private $name = 'abstract.php'; private $path = 'tag/basic/abstract.php'; private $source = '<?php\r\n/**\r\n * 这是abstract的标签示例\r\n * \r\n * 如果类中有最少一个抽象方法的话，那么类应该被声明为抽象类\r\n * 但是生成的文档里面没有此类为抽象类的说明\r\n */\r\n\r\nabstract class AbstractClass\r\n{\r\n    /**\r\n    * 这是一个抽象方法a\r\n    *\r\n    * @abstract\r\n    */\r\n    abstract function abstractFunc1(){}\r\n\r\n    /**\r\n    * 这是一个普通的方法b\r\n    */\r\n    function abstractFunc2(){}\r\n\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/author.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'd9e361a09ccde31989ccb20e88a67911'; private $name = 'author.php'; private $path = 'tag/basic/author.php'; private $source = '<?php\r\n/**\r\n * 这是author标签示例\r\n * \r\n * 此标签看起来没什么作用\r\n * 当前为page示例\r\n * 此标签可以用于任何需要标记的元素上\r\n * (global variable, include, constant, function, define, class, variable, method, page)\r\n * \r\n * @author honece <china_zhz@year.net>\r\n */\r\n/**\r\n * 当前为function示例\r\n * \r\n * 此函数可能由另一个作者编写\r\n * @author honece No.2\r\n */\r\nfunction authorFunc(){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/category.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '548c7434eede46236d937df49eb48948'; private $name = 'category.php'; private $path = 'tag/basic/category.php'; private $source = '<?php\r\n/**\r\n * 这是category的标签示例\r\n * \r\n * 这是声明类别的示例\r\n * 看起来没有什么作用\r\n * @category mycategory\r\n */\r\n\r\nfunction categoryFunc()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/copyright.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '2b678c2b48219fe173c62f57864f2525'; private $name = 'copyright.php'; private $path = 'tag/basic/copyright.php'; private $source = '<?php\r\n/**\r\n * 这是copyright的标签示例\r\n * \r\n * 用来声明版权，看起来没什么作用\r\n * 当前为页面级文档块\r\n * @copyright Copyright (c) 2023, honece\r\n */\r\nfunction copyrightFunc(){}\r\n'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/deprecated.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '17d32066e871d9fc63297cfd57169977'; private $name = 'deprecated.php'; private $path = 'tag/basic/deprecated.php'; private $source = '<?php\r\n/**\r\n * 这是deprecated标签示例\r\n * \r\n * 当前为class级文档块，\r\n * 此标记可用于page级文档块之外的文档块\r\n */\r\nclass DeprecatedClass\r\n{\r\n    /**\r\n     * @deprecated <0.1.0> a方法自0.1.0版本已弃用\r\n     */\r\n    function deprecatedFunc(){}\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/example.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '8bb87bb5e2cc319aae956131058b2c05'; private $name = 'example.php'; private $path = 'tag/basic/example.php'; private $source = '<?php\r\n/**\r\n* 这是example标签示例\r\n*\r\n* 这个标签应该弃用了，没看到作用\r\n* @example /tag/inline/example.php 这是此标签内联用法\r\n* @example example.php 此示例为当前目录文件\r\n*/\r\nfunction exampleFunc(){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/filesource.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '6855239bc05bb284fa5bac07c3b0ae74'; private $name = 'filesource.php'; private $path = 'tag/basic/filesource.php'; private $source = '<?php\r\n/**\r\n * 这是filesource标签的示例代码\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 作用就是给当前文件创建一个链接并显示源代码\r\n * @filesource\r\n */\r\necho "filesource";'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/final.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'd5f20945a818b3c642fdab441d2ab021'; private $name = 'final.php'; private $path = 'tag/basic/final.php'; private $source = '<?php\r\n/**\r\n * 这是final标签的示例\r\n * 此标签已无效，作用就是字面意思\r\n */\r\n\r\nclass FinalClass\r\n{\r\n    /**\r\n     * @final\r\n     */\r\n    final function finalFunc()\r\n    {\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/global.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '4d282567fbbd0bb8bd3806a7c8d48ac4'; private $name = 'global.php'; private $path = 'tag/basic/global.php'; private $source = '<?php\r\n/**\r\n * 这是global标签示例\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 主要用于记录全局变量的用法\r\n * 建议直接声明在定义全局变量的上一行，以免引发放在错误的作用域内不识别的错误\r\n */\r\n\r\n/** \r\n * @global mixed $_GLOBALS["myvar"] \r\n */\r\n$_GLOBALS["myvar"] = array("this" => \'工作正常\');\r\n\r\n\r\n\r\n/**\r\n * 将@name与@global一起使用的示例\r\n * 在@name标签中，name必须有$,否则将引发错误\r\n * @global array $GLOBALS[\'ne'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/ignore.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'b8c7f25d8710acdd4997bf8b9cf326f5'; private $name = 'ignore.php'; private $path = 'tag/basic/ignore.php'; private $source = '<?php\r\n/**\r\n * 这是ignore标签示例\r\n * \r\n * 这个标签应该被弃用了，没看到作用\r\n * 此标签用于组织phpdoc记录元素\r\n */\r\n\r\nif ($ostest) {\r\n    /**\r\n     * This define will either be \'Unix\' or \'Windows\'\r\n     */\r\n    define("OS", "Unix");\r\n}\r\nelse {\r\n    /**\r\n     * @ignore 这里是忽略的常量\r\n     */\r\n    define("OS", "Windows");\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/internal.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '7c4ee7a472406e48a31b52a38228e7b8'; private $name = 'internal.php'; private $path = 'tag/basic/internal.php'; private $source = '<?php\r\n/**\r\n * 这是internal标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签可以生成两份文档，官方说是phpdoc最有用的功能之一\r\n * {@internal 要访问有关修改此类的指南,见 {@link http://www.baidu.com 指南},或联系你的主管}}}\r\n * @internal 该类使用私有方法 {@link _foo()} 和 {@link _bar()} 做一些事情\r\n */\r\n\r\nclass InternalClass\r\n{\r\n    private function _foo()\r\n    {\r\n    }\r\n    private function _bar()\r\n    {\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/license.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '614a33e8f17827aa988341b4f193b49f'; private $name = 'license.php'; private $path = 'tag/basic/license.php'; private $source = '<?php\r\n/**\r\n * 这是license标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签用于向用户提示适用于此文档块的许可证\r\n * 展示指向许可证URL的超链接，个人只建议放在文件级别的文档块中\r\n * @license http://www.apache.org/licenses/LICENSE-2.0 Apache2.0\r\n */\r\n\r\nclass LicenseClass\r\n{\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/link.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9c13e13e5c3217f8f2e974c4dfce67a5'; private $name = 'link.php'; private $path = 'tag/basic/link.php'; private $source = '<?php\r\n/**\r\n * 这是link标签示例\r\n * @link http://www.baidu.com 详情找百度\r\n */\r\n\r\n /**\r\n  * @link https://www.ietf.org/rfc/rfc2396.txt RFC2396\r\n  */\r\n define("TEST_CONSTANT2",3);\r\n'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/method.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '445eba76dd6b5f15c3fcc343ef10bcf9'; private $name = 'method.php'; private $path = 'tag/basic/method.php'; private $source = '<?php\r\n/**\r\n * 这是method标签示例\r\n * \r\n * 官方给出的定义是，要在子类中声明父类使用魔术方法来实现的一些非显示存在方法\r\n * \r\n * @method return echo2(string $string) 打印带有换行符的字符串\r\n */\r\nclass MethodClass extends Father{}\r\n\r\nclass Father\r\n{\r\n    function __call($method, string $params)\r\n    {\r\n        if ($method == \'echo2\') {\r\n            echo $params . PHP_EOL;\r\n        }\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/name.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'd9019fefa63635ac09f7bb2b6f7c6cba'; private $name = 'name.php'; private $path = 'tag/basic/name.php'; private $source = '<?php\r\n/**\r\n * 这是name标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n */\r\n\r\n/**\r\n * 当在函数中使用@global时，它将链接到$baz\r\n * @global array $GLOBALS[\'baz\'] \r\n */\r\n$GLOBALS[\'baz\'] = array(\'foo\', \'bar\');\r\n\r\n/**\r\n * @global array used for stuff\r\n */\r\nfunction name()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/package.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9f03658e0d23226be1fcd8ca7f88ed8e'; private $name = 'package.php'; private $path = 'tag/basic/package.php'; private $source = '<?php\r\n/**\r\n * 这是package标签示例\r\n * \r\n * 页面级DocBlock示例。\r\n * 此DocBlock位于另一个DocBlock之前，将被解析为页面级别。\r\n * 将您的@package和@subpackage标记放在此处\r\n * @package packageTest\r\n */\r\n\r\n/**\r\n * function bluh\r\n */\r\nfunction bluh()\r\n{\r\n}\r\n?>\r\n<?php\r\n/**\r\n* 类 PackageClass\r\n*\r\n* 类级DocBlock示例。以下示例代表packageTestSub包在packageTest内,\r\n* 需要注意下划线[_]也会被解析成包分割符\r\n* @package packageTest\\packageTestSub \r\n*/'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/param.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9b7e83cee7e212b7bdaabae8ecc456f4'; private $name = 'param.php'; private $path = 'tag/basic/param.php'; private $source = '<?php\r\n/**\r\n * 这是param标签示例\r\n * \r\n * 声明方法传入的参数\r\n */\r\n\r\n /**\r\n  * @param int $b 你需要传入一个整数型的变量\r\n  */\r\n function parmFunc(int $b){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/property.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'a1d1498b932fe0c2a140120d62e3411c'; private $name = 'property.php'; private $path = 'tag/basic/property.php'; private $source = '<?php\r\n/**\r\n * 这是property包括它的变体[property-read | property-write]标签示例\r\n *\r\n * @property mixed $regular 声明常规的读写属性\r\n * @property-read int $foo 声明只读\r\n * @property-write string $bar 声明只写\r\n */\r\n\r\nclass PropertyClass\r\n{\r\n    private $_thingy;\r\n    private $_bar;\r\n    function __get($var)\r\n    {\r\n        switch ($var) {\r\n            case \'foo\':\r\n                return 45;\r\n            case \'regular\':\r\n                return $this->_thingy;\r\n        }\r\n    }\r\n'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/return.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '845265a10a560b5a5359f1882513c161'; private $name = 'return.php'; private $path = 'tag/basic/return.php'; private $source = '<?php\r\n/**\r\n * 这是return标签示例\r\n * \r\n * 这个标签用于标记方法或函数的返回值和返回内容\r\n * @return int 这里会返回一个整数类型的数字\r\n */\r\nfunction returnFunc($param)\r\n{\r\n    $b = (int) $param;\r\n    return $b;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }]; private $namespaces = [] } } }, $next = class Closure { virtual $closure = "phpDocumentor\Reflection\Middleware\ChainFactory::phpDocumentor\Reflection\Middleware\{closure}" }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Middleware/ChainFactory.php:43
    3.7248   23331504  25. phpDocumentor\Reflection\Middleware\ChainFactory::phpDocumentor\Reflection\Middleware\{closure:phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Middleware/ChainFactory.php:42-44}($command = class phpDocumentor\Reflection\Php\Factory\File\CreateCommand { private $file = class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/see.php' }; private $strategies = class phpDocumentor\Reflection\Php\ProjectFactoryStrategies { private $strategies = class SplPriorityQueue {  } }; private $context = class phpDocumentor\Reflection\Php\Factory\ContextStack { private $elements = []; private $typeContext = NULL; private $project = class phpDocumentor\Reflection\Php\Project { private $name = 'Untitled project'; private $rootNamespace = class phpDocumentor\Reflection\Php\Namespace_ { private $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\'; private $name = '' }; private $functions = []; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $metadata = [] }; private $files = ['tag/basic/abstract.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '25383ef3973570a805774c93039c30e6'; private $name = 'abstract.php'; private $path = 'tag/basic/abstract.php'; private $source = '<?php\r\n/**\r\n * 这是abstract的标签示例\r\n * \r\n * 如果类中有最少一个抽象方法的话，那么类应该被声明为抽象类\r\n * 但是生成的文档里面没有此类为抽象类的说明\r\n */\r\n\r\nabstract class AbstractClass\r\n{\r\n    /**\r\n    * 这是一个抽象方法a\r\n    *\r\n    * @abstract\r\n    */\r\n    abstract function abstractFunc1(){}\r\n\r\n    /**\r\n    * 这是一个普通的方法b\r\n    */\r\n    function abstractFunc2(){}\r\n\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/author.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'd9e361a09ccde31989ccb20e88a67911'; private $name = 'author.php'; private $path = 'tag/basic/author.php'; private $source = '<?php\r\n/**\r\n * 这是author标签示例\r\n * \r\n * 此标签看起来没什么作用\r\n * 当前为page示例\r\n * 此标签可以用于任何需要标记的元素上\r\n * (global variable, include, constant, function, define, class, variable, method, page)\r\n * \r\n * @author honece <china_zhz@year.net>\r\n */\r\n/**\r\n * 当前为function示例\r\n * \r\n * 此函数可能由另一个作者编写\r\n * @author honece No.2\r\n */\r\nfunction authorFunc(){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/category.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '548c7434eede46236d937df49eb48948'; private $name = 'category.php'; private $path = 'tag/basic/category.php'; private $source = '<?php\r\n/**\r\n * 这是category的标签示例\r\n * \r\n * 这是声明类别的示例\r\n * 看起来没有什么作用\r\n * @category mycategory\r\n */\r\n\r\nfunction categoryFunc()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/copyright.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '2b678c2b48219fe173c62f57864f2525'; private $name = 'copyright.php'; private $path = 'tag/basic/copyright.php'; private $source = '<?php\r\n/**\r\n * 这是copyright的标签示例\r\n * \r\n * 用来声明版权，看起来没什么作用\r\n * 当前为页面级文档块\r\n * @copyright Copyright (c) 2023, honece\r\n */\r\nfunction copyrightFunc(){}\r\n'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/deprecated.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '17d32066e871d9fc63297cfd57169977'; private $name = 'deprecated.php'; private $path = 'tag/basic/deprecated.php'; private $source = '<?php\r\n/**\r\n * 这是deprecated标签示例\r\n * \r\n * 当前为class级文档块，\r\n * 此标记可用于page级文档块之外的文档块\r\n */\r\nclass DeprecatedClass\r\n{\r\n    /**\r\n     * @deprecated <0.1.0> a方法自0.1.0版本已弃用\r\n     */\r\n    function deprecatedFunc(){}\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/example.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '8bb87bb5e2cc319aae956131058b2c05'; private $name = 'example.php'; private $path = 'tag/basic/example.php'; private $source = '<?php\r\n/**\r\n* 这是example标签示例\r\n*\r\n* 这个标签应该弃用了，没看到作用\r\n* @example /tag/inline/example.php 这是此标签内联用法\r\n* @example example.php 此示例为当前目录文件\r\n*/\r\nfunction exampleFunc(){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/filesource.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '6855239bc05bb284fa5bac07c3b0ae74'; private $name = 'filesource.php'; private $path = 'tag/basic/filesource.php'; private $source = '<?php\r\n/**\r\n * 这是filesource标签的示例代码\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 作用就是给当前文件创建一个链接并显示源代码\r\n * @filesource\r\n */\r\necho "filesource";'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/final.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'd5f20945a818b3c642fdab441d2ab021'; private $name = 'final.php'; private $path = 'tag/basic/final.php'; private $source = '<?php\r\n/**\r\n * 这是final标签的示例\r\n * 此标签已无效，作用就是字面意思\r\n */\r\n\r\nclass FinalClass\r\n{\r\n    /**\r\n     * @final\r\n     */\r\n    final function finalFunc()\r\n    {\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/global.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '4d282567fbbd0bb8bd3806a7c8d48ac4'; private $name = 'global.php'; private $path = 'tag/basic/global.php'; private $source = '<?php\r\n/**\r\n * 这是global标签示例\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 主要用于记录全局变量的用法\r\n * 建议直接声明在定义全局变量的上一行，以免引发放在错误的作用域内不识别的错误\r\n */\r\n\r\n/** \r\n * @global mixed $_GLOBALS["myvar"] \r\n */\r\n$_GLOBALS["myvar"] = array("this" => \'工作正常\');\r\n\r\n\r\n\r\n/**\r\n * 将@name与@global一起使用的示例\r\n * 在@name标签中，name必须有$,否则将引发错误\r\n * @global array $GLOBALS[\'ne'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/ignore.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'b8c7f25d8710acdd4997bf8b9cf326f5'; private $name = 'ignore.php'; private $path = 'tag/basic/ignore.php'; private $source = '<?php\r\n/**\r\n * 这是ignore标签示例\r\n * \r\n * 这个标签应该被弃用了，没看到作用\r\n * 此标签用于组织phpdoc记录元素\r\n */\r\n\r\nif ($ostest) {\r\n    /**\r\n     * This define will either be \'Unix\' or \'Windows\'\r\n     */\r\n    define("OS", "Unix");\r\n}\r\nelse {\r\n    /**\r\n     * @ignore 这里是忽略的常量\r\n     */\r\n    define("OS", "Windows");\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/internal.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '7c4ee7a472406e48a31b52a38228e7b8'; private $name = 'internal.php'; private $path = 'tag/basic/internal.php'; private $source = '<?php\r\n/**\r\n * 这是internal标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签可以生成两份文档，官方说是phpdoc最有用的功能之一\r\n * {@internal 要访问有关修改此类的指南,见 {@link http://www.baidu.com 指南},或联系你的主管}}}\r\n * @internal 该类使用私有方法 {@link _foo()} 和 {@link _bar()} 做一些事情\r\n */\r\n\r\nclass InternalClass\r\n{\r\n    private function _foo()\r\n    {\r\n    }\r\n    private function _bar()\r\n    {\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/license.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '614a33e8f17827aa988341b4f193b49f'; private $name = 'license.php'; private $path = 'tag/basic/license.php'; private $source = '<?php\r\n/**\r\n * 这是license标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签用于向用户提示适用于此文档块的许可证\r\n * 展示指向许可证URL的超链接，个人只建议放在文件级别的文档块中\r\n * @license http://www.apache.org/licenses/LICENSE-2.0 Apache2.0\r\n */\r\n\r\nclass LicenseClass\r\n{\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/link.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9c13e13e5c3217f8f2e974c4dfce67a5'; private $name = 'link.php'; private $path = 'tag/basic/link.php'; private $source = '<?php\r\n/**\r\n * 这是link标签示例\r\n * @link http://www.baidu.com 详情找百度\r\n */\r\n\r\n /**\r\n  * @link https://www.ietf.org/rfc/rfc2396.txt RFC2396\r\n  */\r\n define("TEST_CONSTANT2",3);\r\n'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/method.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '445eba76dd6b5f15c3fcc343ef10bcf9'; private $name = 'method.php'; private $path = 'tag/basic/method.php'; private $source = '<?php\r\n/**\r\n * 这是method标签示例\r\n * \r\n * 官方给出的定义是，要在子类中声明父类使用魔术方法来实现的一些非显示存在方法\r\n * \r\n * @method return echo2(string $string) 打印带有换行符的字符串\r\n */\r\nclass MethodClass extends Father{}\r\n\r\nclass Father\r\n{\r\n    function __call($method, string $params)\r\n    {\r\n        if ($method == \'echo2\') {\r\n            echo $params . PHP_EOL;\r\n        }\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/name.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'd9019fefa63635ac09f7bb2b6f7c6cba'; private $name = 'name.php'; private $path = 'tag/basic/name.php'; private $source = '<?php\r\n/**\r\n * 这是name标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n */\r\n\r\n/**\r\n * 当在函数中使用@global时，它将链接到$baz\r\n * @global array $GLOBALS[\'baz\'] \r\n */\r\n$GLOBALS[\'baz\'] = array(\'foo\', \'bar\');\r\n\r\n/**\r\n * @global array used for stuff\r\n */\r\nfunction name()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/package.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9f03658e0d23226be1fcd8ca7f88ed8e'; private $name = 'package.php'; private $path = 'tag/basic/package.php'; private $source = '<?php\r\n/**\r\n * 这是package标签示例\r\n * \r\n * 页面级DocBlock示例。\r\n * 此DocBlock位于另一个DocBlock之前，将被解析为页面级别。\r\n * 将您的@package和@subpackage标记放在此处\r\n * @package packageTest\r\n */\r\n\r\n/**\r\n * function bluh\r\n */\r\nfunction bluh()\r\n{\r\n}\r\n?>\r\n<?php\r\n/**\r\n* 类 PackageClass\r\n*\r\n* 类级DocBlock示例。以下示例代表packageTestSub包在packageTest内,\r\n* 需要注意下划线[_]也会被解析成包分割符\r\n* @package packageTest\\packageTestSub \r\n*/'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/param.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9b7e83cee7e212b7bdaabae8ecc456f4'; private $name = 'param.php'; private $path = 'tag/basic/param.php'; private $source = '<?php\r\n/**\r\n * 这是param标签示例\r\n * \r\n * 声明方法传入的参数\r\n */\r\n\r\n /**\r\n  * @param int $b 你需要传入一个整数型的变量\r\n  */\r\n function parmFunc(int $b){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/property.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'a1d1498b932fe0c2a140120d62e3411c'; private $name = 'property.php'; private $path = 'tag/basic/property.php'; private $source = '<?php\r\n/**\r\n * 这是property包括它的变体[property-read | property-write]标签示例\r\n *\r\n * @property mixed $regular 声明常规的读写属性\r\n * @property-read int $foo 声明只读\r\n * @property-write string $bar 声明只写\r\n */\r\n\r\nclass PropertyClass\r\n{\r\n    private $_thingy;\r\n    private $_bar;\r\n    function __get($var)\r\n    {\r\n        switch ($var) {\r\n            case \'foo\':\r\n                return 45;\r\n            case \'regular\':\r\n                return $this->_thingy;\r\n        }\r\n    }\r\n'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/return.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '845265a10a560b5a5359f1882513c161'; private $name = 'return.php'; private $path = 'tag/basic/return.php'; private $source = '<?php\r\n/**\r\n * 这是return标签示例\r\n * \r\n * 这个标签用于标记方法或函数的返回值和返回内容\r\n * @return int 这里会返回一个整数类型的数字\r\n */\r\nfunction returnFunc($param)\r\n{\r\n    $b = (int) $param;\r\n    return $b;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }]; private $namespaces = [] } } }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/src/phpDocumentor/Parser/Middleware/EmittingMiddleware.php:38
    3.7252   23331504  26. phpDocumentor\Parser\Middleware\CacheMiddleware->execute($command = class phpDocumentor\Reflection\Php\Factory\File\CreateCommand { private $file = class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/see.php' }; private $strategies = class phpDocumentor\Reflection\Php\ProjectFactoryStrategies { private $strategies = class SplPriorityQueue {  } }; private $context = class phpDocumentor\Reflection\Php\Factory\ContextStack { private $elements = []; private $typeContext = NULL; private $project = class phpDocumentor\Reflection\Php\Project { private $name = 'Untitled project'; private $rootNamespace = class phpDocumentor\Reflection\Php\Namespace_ { private $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\'; private $name = '' }; private $functions = []; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $metadata = [] }; private $files = ['tag/basic/abstract.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '25383ef3973570a805774c93039c30e6'; private $name = 'abstract.php'; private $path = 'tag/basic/abstract.php'; private $source = '<?php\r\n/**\r\n * 这是abstract的标签示例\r\n * \r\n * 如果类中有最少一个抽象方法的话，那么类应该被声明为抽象类\r\n * 但是生成的文档里面没有此类为抽象类的说明\r\n */\r\n\r\nabstract class AbstractClass\r\n{\r\n    /**\r\n    * 这是一个抽象方法a\r\n    *\r\n    * @abstract\r\n    */\r\n    abstract function abstractFunc1(){}\r\n\r\n    /**\r\n    * 这是一个普通的方法b\r\n    */\r\n    function abstractFunc2(){}\r\n\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/author.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'd9e361a09ccde31989ccb20e88a67911'; private $name = 'author.php'; private $path = 'tag/basic/author.php'; private $source = '<?php\r\n/**\r\n * 这是author标签示例\r\n * \r\n * 此标签看起来没什么作用\r\n * 当前为page示例\r\n * 此标签可以用于任何需要标记的元素上\r\n * (global variable, include, constant, function, define, class, variable, method, page)\r\n * \r\n * @author honece <china_zhz@year.net>\r\n */\r\n/**\r\n * 当前为function示例\r\n * \r\n * 此函数可能由另一个作者编写\r\n * @author honece No.2\r\n */\r\nfunction authorFunc(){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/category.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '548c7434eede46236d937df49eb48948'; private $name = 'category.php'; private $path = 'tag/basic/category.php'; private $source = '<?php\r\n/**\r\n * 这是category的标签示例\r\n * \r\n * 这是声明类别的示例\r\n * 看起来没有什么作用\r\n * @category mycategory\r\n */\r\n\r\nfunction categoryFunc()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/copyright.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '2b678c2b48219fe173c62f57864f2525'; private $name = 'copyright.php'; private $path = 'tag/basic/copyright.php'; private $source = '<?php\r\n/**\r\n * 这是copyright的标签示例\r\n * \r\n * 用来声明版权，看起来没什么作用\r\n * 当前为页面级文档块\r\n * @copyright Copyright (c) 2023, honece\r\n */\r\nfunction copyrightFunc(){}\r\n'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/deprecated.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '17d32066e871d9fc63297cfd57169977'; private $name = 'deprecated.php'; private $path = 'tag/basic/deprecated.php'; private $source = '<?php\r\n/**\r\n * 这是deprecated标签示例\r\n * \r\n * 当前为class级文档块，\r\n * 此标记可用于page级文档块之外的文档块\r\n */\r\nclass DeprecatedClass\r\n{\r\n    /**\r\n     * @deprecated <0.1.0> a方法自0.1.0版本已弃用\r\n     */\r\n    function deprecatedFunc(){}\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/example.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '8bb87bb5e2cc319aae956131058b2c05'; private $name = 'example.php'; private $path = 'tag/basic/example.php'; private $source = '<?php\r\n/**\r\n* 这是example标签示例\r\n*\r\n* 这个标签应该弃用了，没看到作用\r\n* @example /tag/inline/example.php 这是此标签内联用法\r\n* @example example.php 此示例为当前目录文件\r\n*/\r\nfunction exampleFunc(){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/filesource.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '6855239bc05bb284fa5bac07c3b0ae74'; private $name = 'filesource.php'; private $path = 'tag/basic/filesource.php'; private $source = '<?php\r\n/**\r\n * 这是filesource标签的示例代码\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 作用就是给当前文件创建一个链接并显示源代码\r\n * @filesource\r\n */\r\necho "filesource";'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/final.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'd5f20945a818b3c642fdab441d2ab021'; private $name = 'final.php'; private $path = 'tag/basic/final.php'; private $source = '<?php\r\n/**\r\n * 这是final标签的示例\r\n * 此标签已无效，作用就是字面意思\r\n */\r\n\r\nclass FinalClass\r\n{\r\n    /**\r\n     * @final\r\n     */\r\n    final function finalFunc()\r\n    {\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/global.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '4d282567fbbd0bb8bd3806a7c8d48ac4'; private $name = 'global.php'; private $path = 'tag/basic/global.php'; private $source = '<?php\r\n/**\r\n * 这是global标签示例\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 主要用于记录全局变量的用法\r\n * 建议直接声明在定义全局变量的上一行，以免引发放在错误的作用域内不识别的错误\r\n */\r\n\r\n/** \r\n * @global mixed $_GLOBALS["myvar"] \r\n */\r\n$_GLOBALS["myvar"] = array("this" => \'工作正常\');\r\n\r\n\r\n\r\n/**\r\n * 将@name与@global一起使用的示例\r\n * 在@name标签中，name必须有$,否则将引发错误\r\n * @global array $GLOBALS[\'ne'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/ignore.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'b8c7f25d8710acdd4997bf8b9cf326f5'; private $name = 'ignore.php'; private $path = 'tag/basic/ignore.php'; private $source = '<?php\r\n/**\r\n * 这是ignore标签示例\r\n * \r\n * 这个标签应该被弃用了，没看到作用\r\n * 此标签用于组织phpdoc记录元素\r\n */\r\n\r\nif ($ostest) {\r\n    /**\r\n     * This define will either be \'Unix\' or \'Windows\'\r\n     */\r\n    define("OS", "Unix");\r\n}\r\nelse {\r\n    /**\r\n     * @ignore 这里是忽略的常量\r\n     */\r\n    define("OS", "Windows");\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/internal.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '7c4ee7a472406e48a31b52a38228e7b8'; private $name = 'internal.php'; private $path = 'tag/basic/internal.php'; private $source = '<?php\r\n/**\r\n * 这是internal标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签可以生成两份文档，官方说是phpdoc最有用的功能之一\r\n * {@internal 要访问有关修改此类的指南,见 {@link http://www.baidu.com 指南},或联系你的主管}}}\r\n * @internal 该类使用私有方法 {@link _foo()} 和 {@link _bar()} 做一些事情\r\n */\r\n\r\nclass InternalClass\r\n{\r\n    private function _foo()\r\n    {\r\n    }\r\n    private function _bar()\r\n    {\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/license.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '614a33e8f17827aa988341b4f193b49f'; private $name = 'license.php'; private $path = 'tag/basic/license.php'; private $source = '<?php\r\n/**\r\n * 这是license标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签用于向用户提示适用于此文档块的许可证\r\n * 展示指向许可证URL的超链接，个人只建议放在文件级别的文档块中\r\n * @license http://www.apache.org/licenses/LICENSE-2.0 Apache2.0\r\n */\r\n\r\nclass LicenseClass\r\n{\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/link.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9c13e13e5c3217f8f2e974c4dfce67a5'; private $name = 'link.php'; private $path = 'tag/basic/link.php'; private $source = '<?php\r\n/**\r\n * 这是link标签示例\r\n * @link http://www.baidu.com 详情找百度\r\n */\r\n\r\n /**\r\n  * @link https://www.ietf.org/rfc/rfc2396.txt RFC2396\r\n  */\r\n define("TEST_CONSTANT2",3);\r\n'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/method.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '445eba76dd6b5f15c3fcc343ef10bcf9'; private $name = 'method.php'; private $path = 'tag/basic/method.php'; private $source = '<?php\r\n/**\r\n * 这是method标签示例\r\n * \r\n * 官方给出的定义是，要在子类中声明父类使用魔术方法来实现的一些非显示存在方法\r\n * \r\n * @method return echo2(string $string) 打印带有换行符的字符串\r\n */\r\nclass MethodClass extends Father{}\r\n\r\nclass Father\r\n{\r\n    function __call($method, string $params)\r\n    {\r\n        if ($method == \'echo2\') {\r\n            echo $params . PHP_EOL;\r\n        }\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/name.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'd9019fefa63635ac09f7bb2b6f7c6cba'; private $name = 'name.php'; private $path = 'tag/basic/name.php'; private $source = '<?php\r\n/**\r\n * 这是name标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n */\r\n\r\n/**\r\n * 当在函数中使用@global时，它将链接到$baz\r\n * @global array $GLOBALS[\'baz\'] \r\n */\r\n$GLOBALS[\'baz\'] = array(\'foo\', \'bar\');\r\n\r\n/**\r\n * @global array used for stuff\r\n */\r\nfunction name()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/package.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9f03658e0d23226be1fcd8ca7f88ed8e'; private $name = 'package.php'; private $path = 'tag/basic/package.php'; private $source = '<?php\r\n/**\r\n * 这是package标签示例\r\n * \r\n * 页面级DocBlock示例。\r\n * 此DocBlock位于另一个DocBlock之前，将被解析为页面级别。\r\n * 将您的@package和@subpackage标记放在此处\r\n * @package packageTest\r\n */\r\n\r\n/**\r\n * function bluh\r\n */\r\nfunction bluh()\r\n{\r\n}\r\n?>\r\n<?php\r\n/**\r\n* 类 PackageClass\r\n*\r\n* 类级DocBlock示例。以下示例代表packageTestSub包在packageTest内,\r\n* 需要注意下划线[_]也会被解析成包分割符\r\n* @package packageTest\\packageTestSub \r\n*/'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/param.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9b7e83cee7e212b7bdaabae8ecc456f4'; private $name = 'param.php'; private $path = 'tag/basic/param.php'; private $source = '<?php\r\n/**\r\n * 这是param标签示例\r\n * \r\n * 声明方法传入的参数\r\n */\r\n\r\n /**\r\n  * @param int $b 你需要传入一个整数型的变量\r\n  */\r\n function parmFunc(int $b){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/property.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'a1d1498b932fe0c2a140120d62e3411c'; private $name = 'property.php'; private $path = 'tag/basic/property.php'; private $source = '<?php\r\n/**\r\n * 这是property包括它的变体[property-read | property-write]标签示例\r\n *\r\n * @property mixed $regular 声明常规的读写属性\r\n * @property-read int $foo 声明只读\r\n * @property-write string $bar 声明只写\r\n */\r\n\r\nclass PropertyClass\r\n{\r\n    private $_thingy;\r\n    private $_bar;\r\n    function __get($var)\r\n    {\r\n        switch ($var) {\r\n            case \'foo\':\r\n                return 45;\r\n            case \'regular\':\r\n                return $this->_thingy;\r\n        }\r\n    }\r\n'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/return.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '845265a10a560b5a5359f1882513c161'; private $name = 'return.php'; private $path = 'tag/basic/return.php'; private $source = '<?php\r\n/**\r\n * 这是return标签示例\r\n * \r\n * 这个标签用于标记方法或函数的返回值和返回内容\r\n * @return int 这里会返回一个整数类型的数字\r\n */\r\nfunction returnFunc($param)\r\n{\r\n    $b = (int) $param;\r\n    return $b;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }]; private $namespaces = [] } } }, $next = class Closure { virtual $closure = "phpDocumentor\Reflection\Middleware\ChainFactory::phpDocumentor\Reflection\Middleware\{closure}" }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Middleware/ChainFactory.php:43
    3.7270   23332360  27. Symfony\Component\Cache\Adapter\AbstractAdapter->get($key = '39788fa607b90c855af07c1b8f0887fa-6dac94f657aab7c202434e3e9eb75c7d', $callback = class Closure { virtual $closure = "$this->phpDocumentor\Parser\Middleware\{closure}" }, $beta = ???, $metadata = ???) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/src/phpDocumentor/Parser/Middleware/CacheMiddleware.php:69
    3.7271   23332384  28. Symfony\Component\Cache\Adapter\AbstractAdapter->doGet($pool = class phpDocumentor\Parser\Cache\FilesystemAdapter { private ${Symfony\Component\Cache\Adapter\AbstractAdapter}namespace = 'waR3U4bTeM:'; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}defaultLifetime = 31556926; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}namespaceVersion = ''; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}versioningIsEnabled = FALSE; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}deferred = []; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}ids = ['408b38a51829591b166ecc96a99365ab-25383ef3973570a805774c93039c30e6' => '408b38a51829591b166ecc96a99365ab-25383ef3973570a805774c93039c30e6', 'cbf08f4e960b7ead0948535a41ad5ea5-d9e361a09ccde31989ccb20e88a67911' => 'cbf08f4e960b7ead0948535a41ad5ea5-d9e361a09ccde31989ccb20e88a67911', '9cfc92b04590e789ef6e172f38711a1e-548c7434eede46236d937df49eb48948' => '9cfc92b04590e789ef6e172f38711a1e-548c7434eede46236d937df49eb48948', '77a6e8021661c429a6729afed63a4487-2b678c2b48219fe173c62f57864f2525' => '77a6e8021661c429a6729afed63a4487-2b678c2b48219fe173c62f57864f2525', '7da88019baa714e8b88a155d0357894b-17d32066e871d9fc63297cfd57169977' => '7da88019baa714e8b88a155d0357894b-17d32066e871d9fc63297cfd57169977', '3b51aea473259e10818badfb9d73377a-8bb87bb5e2cc319aae956131058b2c05' => '3b51aea473259e10818badfb9d73377a-8bb87bb5e2cc319aae956131058b2c05', 'cf708b86624f75af111c8b63aa7bcfe5-6855239bc05bb284fa5bac07c3b0ae74' => 'cf708b86624f75af111c8b63aa7bcfe5-6855239bc05bb284fa5bac07c3b0ae74', '0847bff9f9fd0dbb72888a5ecea9936f-d5f20945a818b3c642fdab441d2ab021' => '0847bff9f9fd0dbb72888a5ecea9936f-d5f20945a818b3c642fdab441d2ab021', 'e3e4d7480f72d678a4ab196ccda98c50-4d282567fbbd0bb8bd3806a7c8d48ac4' => 'e3e4d7480f72d678a4ab196ccda98c50-4d282567fbbd0bb8bd3806a7c8d48ac4', 'd083c28c1a046e3a51f5c9f5f1b2008b-b8c7f25d8710acdd4997bf8b9cf326f5' => 'd083c28c1a046e3a51f5c9f5f1b2008b-b8c7f25d8710acdd4997bf8b9cf326f5', '6caa587d896ed69bcdc884618381bde2-7c4ee7a472406e48a31b52a38228e7b8' => '6caa587d896ed69bcdc884618381bde2-7c4ee7a472406e48a31b52a38228e7b8', '0f61c701e0068c0f411b2d54efc0b8ef-614a33e8f17827aa988341b4f193b49f' => '0f61c701e0068c0f411b2d54efc0b8ef-614a33e8f17827aa988341b4f193b49f', '3f22bf6bd2d5dd20309f872573cf3285-9c13e13e5c3217f8f2e974c4dfce67a5' => '3f22bf6bd2d5dd20309f872573cf3285-9c13e13e5c3217f8f2e974c4dfce67a5', 'adec2054291313fc4eb858f401da752c-445eba76dd6b5f15c3fcc343ef10bcf9' => 'adec2054291313fc4eb858f401da752c-445eba76dd6b5f15c3fcc343ef10bcf9', '5e7b081a7efa8eba74518f7bacfcd159-d9019fefa63635ac09f7bb2b6f7c6cba' => '5e7b081a7efa8eba74518f7bacfcd159-d9019fefa63635ac09f7bb2b6f7c6cba', '1d008ecb032761e794f5ee66e68ab455-9f03658e0d23226be1fcd8ca7f88ed8e' => '1d008ecb032761e794f5ee66e68ab455-9f03658e0d23226be1fcd8ca7f88ed8e', 'a4e0369c4f6674bba8c74b98ed0a5848-9b7e83cee7e212b7bdaabae8ecc456f4' => 'a4e0369c4f6674bba8c74b98ed0a5848-9b7e83cee7e212b7bdaabae8ecc456f4', '5d71ca219a1664cf3f55e3729eba1d72-a1d1498b932fe0c2a140120d62e3411c' => '5d71ca219a1664cf3f55e3729eba1d72-a1d1498b932fe0c2a140120d62e3411c', '539de05aa7884db22682be903985c536-845265a10a560b5a5359f1882513c161' => '539de05aa7884db22682be903985c536-845265a10a560b5a5359f1882513c161', '39788fa607b90c855af07c1b8f0887fa-6dac94f657aab7c202434e3e9eb75c7d' => '39788fa607b90c855af07c1b8f0887fa-6dac94f657aab7c202434e3e9eb75c7d']; protected $maxIdLength = NULL; protected $logger = NULL; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}callbackWrapper = [0 => 'Symfony\\Component\\Cache\\LockRegistry', 1 => 'compute']; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}computing = ['39788fa607b90c855af07c1b8f0887fa-6dac94f657aab7c202434e3e9eb75c7d' => '39788fa607b90c855af07c1b8f0887fa-6dac94f657aab7c202434e3e9eb75c7d']; private $marshaller = class Symfony\Component\Cache\Marshaller\DefaultMarshaller { private $useIgbinarySerialize = FALSE }; private $directory = 'G:\\Github\\phpdoc-test\\.phpdoc\\cache\\files\\'; private $tmp = 'G:\\Github\\phpdoc-test\\.phpdoc\\cache\\files\\1b095025b6e4' }, $key = '39788fa607b90c855af07c1b8f0887fa-6dac94f657aab7c202434e3e9eb75c7d', $callback = class Closure { virtual $closure = "$this->phpDocumentor\Parser\Middleware\{closure}" }, $beta = NULL, $metadata = []) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/symfony/contracts/Cache/CacheTrait.php:35
    3.7272   23333080  29. Symfony\Component\Cache\Adapter\AbstractAdapter->doGet($pool = class phpDocumentor\Parser\Cache\FilesystemAdapter { private ${Symfony\Component\Cache\Adapter\AbstractAdapter}namespace = 'waR3U4bTeM:'; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}defaultLifetime = 31556926; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}namespaceVersion = ''; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}versioningIsEnabled = FALSE; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}deferred = []; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}ids = ['408b38a51829591b166ecc96a99365ab-25383ef3973570a805774c93039c30e6' => '408b38a51829591b166ecc96a99365ab-25383ef3973570a805774c93039c30e6', 'cbf08f4e960b7ead0948535a41ad5ea5-d9e361a09ccde31989ccb20e88a67911' => 'cbf08f4e960b7ead0948535a41ad5ea5-d9e361a09ccde31989ccb20e88a67911', '9cfc92b04590e789ef6e172f38711a1e-548c7434eede46236d937df49eb48948' => '9cfc92b04590e789ef6e172f38711a1e-548c7434eede46236d937df49eb48948', '77a6e8021661c429a6729afed63a4487-2b678c2b48219fe173c62f57864f2525' => '77a6e8021661c429a6729afed63a4487-2b678c2b48219fe173c62f57864f2525', '7da88019baa714e8b88a155d0357894b-17d32066e871d9fc63297cfd57169977' => '7da88019baa714e8b88a155d0357894b-17d32066e871d9fc63297cfd57169977', '3b51aea473259e10818badfb9d73377a-8bb87bb5e2cc319aae956131058b2c05' => '3b51aea473259e10818badfb9d73377a-8bb87bb5e2cc319aae956131058b2c05', 'cf708b86624f75af111c8b63aa7bcfe5-6855239bc05bb284fa5bac07c3b0ae74' => 'cf708b86624f75af111c8b63aa7bcfe5-6855239bc05bb284fa5bac07c3b0ae74', '0847bff9f9fd0dbb72888a5ecea9936f-d5f20945a818b3c642fdab441d2ab021' => '0847bff9f9fd0dbb72888a5ecea9936f-d5f20945a818b3c642fdab441d2ab021', 'e3e4d7480f72d678a4ab196ccda98c50-4d282567fbbd0bb8bd3806a7c8d48ac4' => 'e3e4d7480f72d678a4ab196ccda98c50-4d282567fbbd0bb8bd3806a7c8d48ac4', 'd083c28c1a046e3a51f5c9f5f1b2008b-b8c7f25d8710acdd4997bf8b9cf326f5' => 'd083c28c1a046e3a51f5c9f5f1b2008b-b8c7f25d8710acdd4997bf8b9cf326f5', '6caa587d896ed69bcdc884618381bde2-7c4ee7a472406e48a31b52a38228e7b8' => '6caa587d896ed69bcdc884618381bde2-7c4ee7a472406e48a31b52a38228e7b8', '0f61c701e0068c0f411b2d54efc0b8ef-614a33e8f17827aa988341b4f193b49f' => '0f61c701e0068c0f411b2d54efc0b8ef-614a33e8f17827aa988341b4f193b49f', '3f22bf6bd2d5dd20309f872573cf3285-9c13e13e5c3217f8f2e974c4dfce67a5' => '3f22bf6bd2d5dd20309f872573cf3285-9c13e13e5c3217f8f2e974c4dfce67a5', 'adec2054291313fc4eb858f401da752c-445eba76dd6b5f15c3fcc343ef10bcf9' => 'adec2054291313fc4eb858f401da752c-445eba76dd6b5f15c3fcc343ef10bcf9', '5e7b081a7efa8eba74518f7bacfcd159-d9019fefa63635ac09f7bb2b6f7c6cba' => '5e7b081a7efa8eba74518f7bacfcd159-d9019fefa63635ac09f7bb2b6f7c6cba', '1d008ecb032761e794f5ee66e68ab455-9f03658e0d23226be1fcd8ca7f88ed8e' => '1d008ecb032761e794f5ee66e68ab455-9f03658e0d23226be1fcd8ca7f88ed8e', 'a4e0369c4f6674bba8c74b98ed0a5848-9b7e83cee7e212b7bdaabae8ecc456f4' => 'a4e0369c4f6674bba8c74b98ed0a5848-9b7e83cee7e212b7bdaabae8ecc456f4', '5d71ca219a1664cf3f55e3729eba1d72-a1d1498b932fe0c2a140120d62e3411c' => '5d71ca219a1664cf3f55e3729eba1d72-a1d1498b932fe0c2a140120d62e3411c', '539de05aa7884db22682be903985c536-845265a10a560b5a5359f1882513c161' => '539de05aa7884db22682be903985c536-845265a10a560b5a5359f1882513c161', '39788fa607b90c855af07c1b8f0887fa-6dac94f657aab7c202434e3e9eb75c7d' => '39788fa607b90c855af07c1b8f0887fa-6dac94f657aab7c202434e3e9eb75c7d']; protected $maxIdLength = NULL; protected $logger = NULL; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}callbackWrapper = [0 => 'Symfony\\Component\\Cache\\LockRegistry', 1 => 'compute']; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}computing = ['39788fa607b90c855af07c1b8f0887fa-6dac94f657aab7c202434e3e9eb75c7d' => '39788fa607b90c855af07c1b8f0887fa-6dac94f657aab7c202434e3e9eb75c7d']; private $marshaller = class Symfony\Component\Cache\Marshaller\DefaultMarshaller { private $useIgbinarySerialize = FALSE }; private $directory = 'G:\\Github\\phpdoc-test\\.phpdoc\\cache\\files\\'; private $tmp = 'G:\\Github\\phpdoc-test\\.phpdoc\\cache\\files\\1b095025b6e4' }, $key = '39788fa607b90c855af07c1b8f0887fa-6dac94f657aab7c202434e3e9eb75c7d', $callback = class Closure { virtual $closure = "$this->Symfony\Component\Cache\Traits\{closure}" }, $beta = 1, $metadata = [], $logger = NULL) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/symfony/cache/Traits/ContractsTrait.php:95
    3.7278   23333296  30. Symfony\Component\Cache\Adapter\AbstractAdapter->Symfony\Component\Cache\Traits\{closure:phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/symfony/cache/Traits/ContractsTrait.php:73-95}($item = class Symfony\Component\Cache\CacheItem { protected $key = '39788fa607b90c855af07c1b8f0887fa-6dac94f657aab7c202434e3e9eb75c7d'; protected $value = NULL; protected $isHit = FALSE; protected $expiry = NULL; protected $metadata = []; protected $newMetadata = []; protected $innerItem = NULL; protected $poolHash = NULL; protected $isTaggable = FALSE }, $save = TRUE) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/symfony/contracts/Cache/CacheTrait.php:72
    3.7278   23334688  31. Symfony\Component\Cache\LockRegistry::compute($callback = class Closure { virtual $closure = "$this->phpDocumentor\Parser\Middleware\{closure}" }, $item = class Symfony\Component\Cache\CacheItem { protected $key = '39788fa607b90c855af07c1b8f0887fa-6dac94f657aab7c202434e3e9eb75c7d'; protected $value = NULL; protected $isHit = FALSE; protected $expiry = NULL; protected $metadata = []; protected $newMetadata = []; protected $innerItem = NULL; protected $poolHash = NULL; protected $isTaggable = FALSE }, $save = TRUE, $pool = class phpDocumentor\Parser\Cache\FilesystemAdapter { private ${Symfony\Component\Cache\Adapter\AbstractAdapter}namespace = 'waR3U4bTeM:'; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}defaultLifetime = 31556926; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}namespaceVersion = ''; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}versioningIsEnabled = FALSE; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}deferred = []; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}ids = ['408b38a51829591b166ecc96a99365ab-25383ef3973570a805774c93039c30e6' => '408b38a51829591b166ecc96a99365ab-25383ef3973570a805774c93039c30e6', 'cbf08f4e960b7ead0948535a41ad5ea5-d9e361a09ccde31989ccb20e88a67911' => 'cbf08f4e960b7ead0948535a41ad5ea5-d9e361a09ccde31989ccb20e88a67911', '9cfc92b04590e789ef6e172f38711a1e-548c7434eede46236d937df49eb48948' => '9cfc92b04590e789ef6e172f38711a1e-548c7434eede46236d937df49eb48948', '77a6e8021661c429a6729afed63a4487-2b678c2b48219fe173c62f57864f2525' => '77a6e8021661c429a6729afed63a4487-2b678c2b48219fe173c62f57864f2525', '7da88019baa714e8b88a155d0357894b-17d32066e871d9fc63297cfd57169977' => '7da88019baa714e8b88a155d0357894b-17d32066e871d9fc63297cfd57169977', '3b51aea473259e10818badfb9d73377a-8bb87bb5e2cc319aae956131058b2c05' => '3b51aea473259e10818badfb9d73377a-8bb87bb5e2cc319aae956131058b2c05', 'cf708b86624f75af111c8b63aa7bcfe5-6855239bc05bb284fa5bac07c3b0ae74' => 'cf708b86624f75af111c8b63aa7bcfe5-6855239bc05bb284fa5bac07c3b0ae74', '0847bff9f9fd0dbb72888a5ecea9936f-d5f20945a818b3c642fdab441d2ab021' => '0847bff9f9fd0dbb72888a5ecea9936f-d5f20945a818b3c642fdab441d2ab021', 'e3e4d7480f72d678a4ab196ccda98c50-4d282567fbbd0bb8bd3806a7c8d48ac4' => 'e3e4d7480f72d678a4ab196ccda98c50-4d282567fbbd0bb8bd3806a7c8d48ac4', 'd083c28c1a046e3a51f5c9f5f1b2008b-b8c7f25d8710acdd4997bf8b9cf326f5' => 'd083c28c1a046e3a51f5c9f5f1b2008b-b8c7f25d8710acdd4997bf8b9cf326f5', '6caa587d896ed69bcdc884618381bde2-7c4ee7a472406e48a31b52a38228e7b8' => '6caa587d896ed69bcdc884618381bde2-7c4ee7a472406e48a31b52a38228e7b8', '0f61c701e0068c0f411b2d54efc0b8ef-614a33e8f17827aa988341b4f193b49f' => '0f61c701e0068c0f411b2d54efc0b8ef-614a33e8f17827aa988341b4f193b49f', '3f22bf6bd2d5dd20309f872573cf3285-9c13e13e5c3217f8f2e974c4dfce67a5' => '3f22bf6bd2d5dd20309f872573cf3285-9c13e13e5c3217f8f2e974c4dfce67a5', 'adec2054291313fc4eb858f401da752c-445eba76dd6b5f15c3fcc343ef10bcf9' => 'adec2054291313fc4eb858f401da752c-445eba76dd6b5f15c3fcc343ef10bcf9', '5e7b081a7efa8eba74518f7bacfcd159-d9019fefa63635ac09f7bb2b6f7c6cba' => '5e7b081a7efa8eba74518f7bacfcd159-d9019fefa63635ac09f7bb2b6f7c6cba', '1d008ecb032761e794f5ee66e68ab455-9f03658e0d23226be1fcd8ca7f88ed8e' => '1d008ecb032761e794f5ee66e68ab455-9f03658e0d23226be1fcd8ca7f88ed8e', 'a4e0369c4f6674bba8c74b98ed0a5848-9b7e83cee7e212b7bdaabae8ecc456f4' => 'a4e0369c4f6674bba8c74b98ed0a5848-9b7e83cee7e212b7bdaabae8ecc456f4', '5d71ca219a1664cf3f55e3729eba1d72-a1d1498b932fe0c2a140120d62e3411c' => '5d71ca219a1664cf3f55e3729eba1d72-a1d1498b932fe0c2a140120d62e3411c', '539de05aa7884db22682be903985c536-845265a10a560b5a5359f1882513c161' => '539de05aa7884db22682be903985c536-845265a10a560b5a5359f1882513c161', '39788fa607b90c855af07c1b8f0887fa-6dac94f657aab7c202434e3e9eb75c7d' => '39788fa607b90c855af07c1b8f0887fa-6dac94f657aab7c202434e3e9eb75c7d']; protected $maxIdLength = NULL; protected $logger = NULL; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}callbackWrapper = [0 => 'Symfony\\Component\\Cache\\LockRegistry', 1 => 'compute']; private ${Symfony\Component\Cache\Adapter\AbstractAdapter}computing = ['39788fa607b90c855af07c1b8f0887fa-6dac94f657aab7c202434e3e9eb75c7d' => '39788fa607b90c855af07c1b8f0887fa-6dac94f657aab7c202434e3e9eb75c7d']; private $marshaller = class Symfony\Component\Cache\Marshaller\DefaultMarshaller { private $useIgbinarySerialize = FALSE }; private $directory = 'G:\\Github\\phpdoc-test\\.phpdoc\\cache\\files\\'; private $tmp = 'G:\\Github\\phpdoc-test\\.phpdoc\\cache\\files\\1b095025b6e4' }, $setMetadata = class Closure { virtual $closure = "$this->Symfony\Component\Cache\Traits\{closure}" }, $logger = NULL) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/symfony/cache/Traits/ContractsTrait.php:88
    3.7280   23334688  32. phpDocumentor\Parser\Middleware\CacheMiddleware->phpDocumentor\Parser\Middleware\{closure:phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/src/phpDocumentor/Parser/Middleware/CacheMiddleware.php:64-69}(class Symfony\Component\Cache\CacheItem { protected $key = '39788fa607b90c855af07c1b8f0887fa-6dac94f657aab7c202434e3e9eb75c7d'; protected $value = NULL; protected $isHit = FALSE; protected $expiry = NULL; protected $metadata = []; protected $newMetadata = []; protected $innerItem = NULL; protected $poolHash = NULL; protected $isTaggable = FALSE }, TRUE) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/symfony/cache/LockRegistry.php:93
    3.7284   23334688  33. phpDocumentor\Reflection\Middleware\ChainFactory::phpDocumentor\Reflection\Middleware\{closure:phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Middleware/ChainFactory.php:42-44}($command = class phpDocumentor\Reflection\Php\Factory\File\CreateCommand { private $file = class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/see.php' }; private $strategies = class phpDocumentor\Reflection\Php\ProjectFactoryStrategies { private $strategies = class SplPriorityQueue {  } }; private $context = class phpDocumentor\Reflection\Php\Factory\ContextStack { private $elements = []; private $typeContext = NULL; private $project = class phpDocumentor\Reflection\Php\Project { private $name = 'Untitled project'; private $rootNamespace = class phpDocumentor\Reflection\Php\Namespace_ { private $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\'; private $name = '' }; private $functions = []; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $metadata = [] }; private $files = ['tag/basic/abstract.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '25383ef3973570a805774c93039c30e6'; private $name = 'abstract.php'; private $path = 'tag/basic/abstract.php'; private $source = '<?php\r\n/**\r\n * 这是abstract的标签示例\r\n * \r\n * 如果类中有最少一个抽象方法的话，那么类应该被声明为抽象类\r\n * 但是生成的文档里面没有此类为抽象类的说明\r\n */\r\n\r\nabstract class AbstractClass\r\n{\r\n    /**\r\n    * 这是一个抽象方法a\r\n    *\r\n    * @abstract\r\n    */\r\n    abstract function abstractFunc1(){}\r\n\r\n    /**\r\n    * 这是一个普通的方法b\r\n    */\r\n    function abstractFunc2(){}\r\n\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/author.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'd9e361a09ccde31989ccb20e88a67911'; private $name = 'author.php'; private $path = 'tag/basic/author.php'; private $source = '<?php\r\n/**\r\n * 这是author标签示例\r\n * \r\n * 此标签看起来没什么作用\r\n * 当前为page示例\r\n * 此标签可以用于任何需要标记的元素上\r\n * (global variable, include, constant, function, define, class, variable, method, page)\r\n * \r\n * @author honece <china_zhz@year.net>\r\n */\r\n/**\r\n * 当前为function示例\r\n * \r\n * 此函数可能由另一个作者编写\r\n * @author honece No.2\r\n */\r\nfunction authorFunc(){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/category.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '548c7434eede46236d937df49eb48948'; private $name = 'category.php'; private $path = 'tag/basic/category.php'; private $source = '<?php\r\n/**\r\n * 这是category的标签示例\r\n * \r\n * 这是声明类别的示例\r\n * 看起来没有什么作用\r\n * @category mycategory\r\n */\r\n\r\nfunction categoryFunc()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/copyright.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '2b678c2b48219fe173c62f57864f2525'; private $name = 'copyright.php'; private $path = 'tag/basic/copyright.php'; private $source = '<?php\r\n/**\r\n * 这是copyright的标签示例\r\n * \r\n * 用来声明版权，看起来没什么作用\r\n * 当前为页面级文档块\r\n * @copyright Copyright (c) 2023, honece\r\n */\r\nfunction copyrightFunc(){}\r\n'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/deprecated.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '17d32066e871d9fc63297cfd57169977'; private $name = 'deprecated.php'; private $path = 'tag/basic/deprecated.php'; private $source = '<?php\r\n/**\r\n * 这是deprecated标签示例\r\n * \r\n * 当前为class级文档块，\r\n * 此标记可用于page级文档块之外的文档块\r\n */\r\nclass DeprecatedClass\r\n{\r\n    /**\r\n     * @deprecated <0.1.0> a方法自0.1.0版本已弃用\r\n     */\r\n    function deprecatedFunc(){}\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/example.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '8bb87bb5e2cc319aae956131058b2c05'; private $name = 'example.php'; private $path = 'tag/basic/example.php'; private $source = '<?php\r\n/**\r\n* 这是example标签示例\r\n*\r\n* 这个标签应该弃用了，没看到作用\r\n* @example /tag/inline/example.php 这是此标签内联用法\r\n* @example example.php 此示例为当前目录文件\r\n*/\r\nfunction exampleFunc(){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/filesource.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '6855239bc05bb284fa5bac07c3b0ae74'; private $name = 'filesource.php'; private $path = 'tag/basic/filesource.php'; private $source = '<?php\r\n/**\r\n * 这是filesource标签的示例代码\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 作用就是给当前文件创建一个链接并显示源代码\r\n * @filesource\r\n */\r\necho "filesource";'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/final.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'd5f20945a818b3c642fdab441d2ab021'; private $name = 'final.php'; private $path = 'tag/basic/final.php'; private $source = '<?php\r\n/**\r\n * 这是final标签的示例\r\n * 此标签已无效，作用就是字面意思\r\n */\r\n\r\nclass FinalClass\r\n{\r\n    /**\r\n     * @final\r\n     */\r\n    final function finalFunc()\r\n    {\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/global.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '4d282567fbbd0bb8bd3806a7c8d48ac4'; private $name = 'global.php'; private $path = 'tag/basic/global.php'; private $source = '<?php\r\n/**\r\n * 这是global标签示例\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 主要用于记录全局变量的用法\r\n * 建议直接声明在定义全局变量的上一行，以免引发放在错误的作用域内不识别的错误\r\n */\r\n\r\n/** \r\n * @global mixed $_GLOBALS["myvar"] \r\n */\r\n$_GLOBALS["myvar"] = array("this" => \'工作正常\');\r\n\r\n\r\n\r\n/**\r\n * 将@name与@global一起使用的示例\r\n * 在@name标签中，name必须有$,否则将引发错误\r\n * @global array $GLOBALS[\'ne'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/ignore.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'b8c7f25d8710acdd4997bf8b9cf326f5'; private $name = 'ignore.php'; private $path = 'tag/basic/ignore.php'; private $source = '<?php\r\n/**\r\n * 这是ignore标签示例\r\n * \r\n * 这个标签应该被弃用了，没看到作用\r\n * 此标签用于组织phpdoc记录元素\r\n */\r\n\r\nif ($ostest) {\r\n    /**\r\n     * This define will either be \'Unix\' or \'Windows\'\r\n     */\r\n    define("OS", "Unix");\r\n}\r\nelse {\r\n    /**\r\n     * @ignore 这里是忽略的常量\r\n     */\r\n    define("OS", "Windows");\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/internal.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '7c4ee7a472406e48a31b52a38228e7b8'; private $name = 'internal.php'; private $path = 'tag/basic/internal.php'; private $source = '<?php\r\n/**\r\n * 这是internal标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签可以生成两份文档，官方说是phpdoc最有用的功能之一\r\n * {@internal 要访问有关修改此类的指南,见 {@link http://www.baidu.com 指南},或联系你的主管}}}\r\n * @internal 该类使用私有方法 {@link _foo()} 和 {@link _bar()} 做一些事情\r\n */\r\n\r\nclass InternalClass\r\n{\r\n    private function _foo()\r\n    {\r\n    }\r\n    private function _bar()\r\n    {\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/license.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '614a33e8f17827aa988341b4f193b49f'; private $name = 'license.php'; private $path = 'tag/basic/license.php'; private $source = '<?php\r\n/**\r\n * 这是license标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签用于向用户提示适用于此文档块的许可证\r\n * 展示指向许可证URL的超链接，个人只建议放在文件级别的文档块中\r\n * @license http://www.apache.org/licenses/LICENSE-2.0 Apache2.0\r\n */\r\n\r\nclass LicenseClass\r\n{\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/link.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9c13e13e5c3217f8f2e974c4dfce67a5'; private $name = 'link.php'; private $path = 'tag/basic/link.php'; private $source = '<?php\r\n/**\r\n * 这是link标签示例\r\n * @link http://www.baidu.com 详情找百度\r\n */\r\n\r\n /**\r\n  * @link https://www.ietf.org/rfc/rfc2396.txt RFC2396\r\n  */\r\n define("TEST_CONSTANT2",3);\r\n'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/method.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '445eba76dd6b5f15c3fcc343ef10bcf9'; private $name = 'method.php'; private $path = 'tag/basic/method.php'; private $source = '<?php\r\n/**\r\n * 这是method标签示例\r\n * \r\n * 官方给出的定义是，要在子类中声明父类使用魔术方法来实现的一些非显示存在方法\r\n * \r\n * @method return echo2(string $string) 打印带有换行符的字符串\r\n */\r\nclass MethodClass extends Father{}\r\n\r\nclass Father\r\n{\r\n    function __call($method, string $params)\r\n    {\r\n        if ($method == \'echo2\') {\r\n            echo $params . PHP_EOL;\r\n        }\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/name.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'd9019fefa63635ac09f7bb2b6f7c6cba'; private $name = 'name.php'; private $path = 'tag/basic/name.php'; private $source = '<?php\r\n/**\r\n * 这是name标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n */\r\n\r\n/**\r\n * 当在函数中使用@global时，它将链接到$baz\r\n * @global array $GLOBALS[\'baz\'] \r\n */\r\n$GLOBALS[\'baz\'] = array(\'foo\', \'bar\');\r\n\r\n/**\r\n * @global array used for stuff\r\n */\r\nfunction name()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/package.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9f03658e0d23226be1fcd8ca7f88ed8e'; private $name = 'package.php'; private $path = 'tag/basic/package.php'; private $source = '<?php\r\n/**\r\n * 这是package标签示例\r\n * \r\n * 页面级DocBlock示例。\r\n * 此DocBlock位于另一个DocBlock之前，将被解析为页面级别。\r\n * 将您的@package和@subpackage标记放在此处\r\n * @package packageTest\r\n */\r\n\r\n/**\r\n * function bluh\r\n */\r\nfunction bluh()\r\n{\r\n}\r\n?>\r\n<?php\r\n/**\r\n* 类 PackageClass\r\n*\r\n* 类级DocBlock示例。以下示例代表packageTestSub包在packageTest内,\r\n* 需要注意下划线[_]也会被解析成包分割符\r\n* @package packageTest\\packageTestSub \r\n*/'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/param.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9b7e83cee7e212b7bdaabae8ecc456f4'; private $name = 'param.php'; private $path = 'tag/basic/param.php'; private $source = '<?php\r\n/**\r\n * 这是param标签示例\r\n * \r\n * 声明方法传入的参数\r\n */\r\n\r\n /**\r\n  * @param int $b 你需要传入一个整数型的变量\r\n  */\r\n function parmFunc(int $b){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/property.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'a1d1498b932fe0c2a140120d62e3411c'; private $name = 'property.php'; private $path = 'tag/basic/property.php'; private $source = '<?php\r\n/**\r\n * 这是property包括它的变体[property-read | property-write]标签示例\r\n *\r\n * @property mixed $regular 声明常规的读写属性\r\n * @property-read int $foo 声明只读\r\n * @property-write string $bar 声明只写\r\n */\r\n\r\nclass PropertyClass\r\n{\r\n    private $_thingy;\r\n    private $_bar;\r\n    function __get($var)\r\n    {\r\n        switch ($var) {\r\n            case \'foo\':\r\n                return 45;\r\n            case \'regular\':\r\n                return $this->_thingy;\r\n        }\r\n    }\r\n'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/return.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '845265a10a560b5a5359f1882513c161'; private $name = 'return.php'; private $path = 'tag/basic/return.php'; private $source = '<?php\r\n/**\r\n * 这是return标签示例\r\n * \r\n * 这个标签用于标记方法或函数的返回值和返回内容\r\n * @return int 这里会返回一个整数类型的数字\r\n */\r\nfunction returnFunc($param)\r\n{\r\n    $b = (int) $param;\r\n    return $b;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }]; private $namespaces = [] } } }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/src/phpDocumentor/Parser/Middleware/CacheMiddleware.php:66
    3.7289   23334688  34. phpDocumentor\Parser\Middleware\ErrorHandlingMiddleware->execute($command = class phpDocumentor\Reflection\Php\Factory\File\CreateCommand { private $file = class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/see.php' }; private $strategies = class phpDocumentor\Reflection\Php\ProjectFactoryStrategies { private $strategies = class SplPriorityQueue {  } }; private $context = class phpDocumentor\Reflection\Php\Factory\ContextStack { private $elements = []; private $typeContext = NULL; private $project = class phpDocumentor\Reflection\Php\Project { private $name = 'Untitled project'; private $rootNamespace = class phpDocumentor\Reflection\Php\Namespace_ { private $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\'; private $name = '' }; private $functions = []; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $metadata = [] }; private $files = ['tag/basic/abstract.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '25383ef3973570a805774c93039c30e6'; private $name = 'abstract.php'; private $path = 'tag/basic/abstract.php'; private $source = '<?php\r\n/**\r\n * 这是abstract的标签示例\r\n * \r\n * 如果类中有最少一个抽象方法的话，那么类应该被声明为抽象类\r\n * 但是生成的文档里面没有此类为抽象类的说明\r\n */\r\n\r\nabstract class AbstractClass\r\n{\r\n    /**\r\n    * 这是一个抽象方法a\r\n    *\r\n    * @abstract\r\n    */\r\n    abstract function abstractFunc1(){}\r\n\r\n    /**\r\n    * 这是一个普通的方法b\r\n    */\r\n    function abstractFunc2(){}\r\n\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/author.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'd9e361a09ccde31989ccb20e88a67911'; private $name = 'author.php'; private $path = 'tag/basic/author.php'; private $source = '<?php\r\n/**\r\n * 这是author标签示例\r\n * \r\n * 此标签看起来没什么作用\r\n * 当前为page示例\r\n * 此标签可以用于任何需要标记的元素上\r\n * (global variable, include, constant, function, define, class, variable, method, page)\r\n * \r\n * @author honece <china_zhz@year.net>\r\n */\r\n/**\r\n * 当前为function示例\r\n * \r\n * 此函数可能由另一个作者编写\r\n * @author honece No.2\r\n */\r\nfunction authorFunc(){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/category.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '548c7434eede46236d937df49eb48948'; private $name = 'category.php'; private $path = 'tag/basic/category.php'; private $source = '<?php\r\n/**\r\n * 这是category的标签示例\r\n * \r\n * 这是声明类别的示例\r\n * 看起来没有什么作用\r\n * @category mycategory\r\n */\r\n\r\nfunction categoryFunc()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/copyright.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '2b678c2b48219fe173c62f57864f2525'; private $name = 'copyright.php'; private $path = 'tag/basic/copyright.php'; private $source = '<?php\r\n/**\r\n * 这是copyright的标签示例\r\n * \r\n * 用来声明版权，看起来没什么作用\r\n * 当前为页面级文档块\r\n * @copyright Copyright (c) 2023, honece\r\n */\r\nfunction copyrightFunc(){}\r\n'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/deprecated.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '17d32066e871d9fc63297cfd57169977'; private $name = 'deprecated.php'; private $path = 'tag/basic/deprecated.php'; private $source = '<?php\r\n/**\r\n * 这是deprecated标签示例\r\n * \r\n * 当前为class级文档块，\r\n * 此标记可用于page级文档块之外的文档块\r\n */\r\nclass DeprecatedClass\r\n{\r\n    /**\r\n     * @deprecated <0.1.0> a方法自0.1.0版本已弃用\r\n     */\r\n    function deprecatedFunc(){}\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/example.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '8bb87bb5e2cc319aae956131058b2c05'; private $name = 'example.php'; private $path = 'tag/basic/example.php'; private $source = '<?php\r\n/**\r\n* 这是example标签示例\r\n*\r\n* 这个标签应该弃用了，没看到作用\r\n* @example /tag/inline/example.php 这是此标签内联用法\r\n* @example example.php 此示例为当前目录文件\r\n*/\r\nfunction exampleFunc(){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/filesource.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '6855239bc05bb284fa5bac07c3b0ae74'; private $name = 'filesource.php'; private $path = 'tag/basic/filesource.php'; private $source = '<?php\r\n/**\r\n * 这是filesource标签的示例代码\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 作用就是给当前文件创建一个链接并显示源代码\r\n * @filesource\r\n */\r\necho "filesource";'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/final.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'd5f20945a818b3c642fdab441d2ab021'; private $name = 'final.php'; private $path = 'tag/basic/final.php'; private $source = '<?php\r\n/**\r\n * 这是final标签的示例\r\n * 此标签已无效，作用就是字面意思\r\n */\r\n\r\nclass FinalClass\r\n{\r\n    /**\r\n     * @final\r\n     */\r\n    final function finalFunc()\r\n    {\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/global.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '4d282567fbbd0bb8bd3806a7c8d48ac4'; private $name = 'global.php'; private $path = 'tag/basic/global.php'; private $source = '<?php\r\n/**\r\n * 这是global标签示例\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 主要用于记录全局变量的用法\r\n * 建议直接声明在定义全局变量的上一行，以免引发放在错误的作用域内不识别的错误\r\n */\r\n\r\n/** \r\n * @global mixed $_GLOBALS["myvar"] \r\n */\r\n$_GLOBALS["myvar"] = array("this" => \'工作正常\');\r\n\r\n\r\n\r\n/**\r\n * 将@name与@global一起使用的示例\r\n * 在@name标签中，name必须有$,否则将引发错误\r\n * @global array $GLOBALS[\'ne'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/ignore.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'b8c7f25d8710acdd4997bf8b9cf326f5'; private $name = 'ignore.php'; private $path = 'tag/basic/ignore.php'; private $source = '<?php\r\n/**\r\n * 这是ignore标签示例\r\n * \r\n * 这个标签应该被弃用了，没看到作用\r\n * 此标签用于组织phpdoc记录元素\r\n */\r\n\r\nif ($ostest) {\r\n    /**\r\n     * This define will either be \'Unix\' or \'Windows\'\r\n     */\r\n    define("OS", "Unix");\r\n}\r\nelse {\r\n    /**\r\n     * @ignore 这里是忽略的常量\r\n     */\r\n    define("OS", "Windows");\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/internal.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '7c4ee7a472406e48a31b52a38228e7b8'; private $name = 'internal.php'; private $path = 'tag/basic/internal.php'; private $source = '<?php\r\n/**\r\n * 这是internal标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签可以生成两份文档，官方说是phpdoc最有用的功能之一\r\n * {@internal 要访问有关修改此类的指南,见 {@link http://www.baidu.com 指南},或联系你的主管}}}\r\n * @internal 该类使用私有方法 {@link _foo()} 和 {@link _bar()} 做一些事情\r\n */\r\n\r\nclass InternalClass\r\n{\r\n    private function _foo()\r\n    {\r\n    }\r\n    private function _bar()\r\n    {\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/license.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '614a33e8f17827aa988341b4f193b49f'; private $name = 'license.php'; private $path = 'tag/basic/license.php'; private $source = '<?php\r\n/**\r\n * 这是license标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签用于向用户提示适用于此文档块的许可证\r\n * 展示指向许可证URL的超链接，个人只建议放在文件级别的文档块中\r\n * @license http://www.apache.org/licenses/LICENSE-2.0 Apache2.0\r\n */\r\n\r\nclass LicenseClass\r\n{\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/link.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9c13e13e5c3217f8f2e974c4dfce67a5'; private $name = 'link.php'; private $path = 'tag/basic/link.php'; private $source = '<?php\r\n/**\r\n * 这是link标签示例\r\n * @link http://www.baidu.com 详情找百度\r\n */\r\n\r\n /**\r\n  * @link https://www.ietf.org/rfc/rfc2396.txt RFC2396\r\n  */\r\n define("TEST_CONSTANT2",3);\r\n'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/method.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '445eba76dd6b5f15c3fcc343ef10bcf9'; private $name = 'method.php'; private $path = 'tag/basic/method.php'; private $source = '<?php\r\n/**\r\n * 这是method标签示例\r\n * \r\n * 官方给出的定义是，要在子类中声明父类使用魔术方法来实现的一些非显示存在方法\r\n * \r\n * @method return echo2(string $string) 打印带有换行符的字符串\r\n */\r\nclass MethodClass extends Father{}\r\n\r\nclass Father\r\n{\r\n    function __call($method, string $params)\r\n    {\r\n        if ($method == \'echo2\') {\r\n            echo $params . PHP_EOL;\r\n        }\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/name.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'd9019fefa63635ac09f7bb2b6f7c6cba'; private $name = 'name.php'; private $path = 'tag/basic/name.php'; private $source = '<?php\r\n/**\r\n * 这是name标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n */\r\n\r\n/**\r\n * 当在函数中使用@global时，它将链接到$baz\r\n * @global array $GLOBALS[\'baz\'] \r\n */\r\n$GLOBALS[\'baz\'] = array(\'foo\', \'bar\');\r\n\r\n/**\r\n * @global array used for stuff\r\n */\r\nfunction name()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/package.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9f03658e0d23226be1fcd8ca7f88ed8e'; private $name = 'package.php'; private $path = 'tag/basic/package.php'; private $source = '<?php\r\n/**\r\n * 这是package标签示例\r\n * \r\n * 页面级DocBlock示例。\r\n * 此DocBlock位于另一个DocBlock之前，将被解析为页面级别。\r\n * 将您的@package和@subpackage标记放在此处\r\n * @package packageTest\r\n */\r\n\r\n/**\r\n * function bluh\r\n */\r\nfunction bluh()\r\n{\r\n}\r\n?>\r\n<?php\r\n/**\r\n* 类 PackageClass\r\n*\r\n* 类级DocBlock示例。以下示例代表packageTestSub包在packageTest内,\r\n* 需要注意下划线[_]也会被解析成包分割符\r\n* @package packageTest\\packageTestSub \r\n*/'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/param.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9b7e83cee7e212b7bdaabae8ecc456f4'; private $name = 'param.php'; private $path = 'tag/basic/param.php'; private $source = '<?php\r\n/**\r\n * 这是param标签示例\r\n * \r\n * 声明方法传入的参数\r\n */\r\n\r\n /**\r\n  * @param int $b 你需要传入一个整数型的变量\r\n  */\r\n function parmFunc(int $b){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/property.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'a1d1498b932fe0c2a140120d62e3411c'; private $name = 'property.php'; private $path = 'tag/basic/property.php'; private $source = '<?php\r\n/**\r\n * 这是property包括它的变体[property-read | property-write]标签示例\r\n *\r\n * @property mixed $regular 声明常规的读写属性\r\n * @property-read int $foo 声明只读\r\n * @property-write string $bar 声明只写\r\n */\r\n\r\nclass PropertyClass\r\n{\r\n    private $_thingy;\r\n    private $_bar;\r\n    function __get($var)\r\n    {\r\n        switch ($var) {\r\n            case \'foo\':\r\n                return 45;\r\n            case \'regular\':\r\n                return $this->_thingy;\r\n        }\r\n    }\r\n'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/return.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '845265a10a560b5a5359f1882513c161'; private $name = 'return.php'; private $path = 'tag/basic/return.php'; private $source = '<?php\r\n/**\r\n * 这是return标签示例\r\n * \r\n * 这个标签用于标记方法或函数的返回值和返回内容\r\n * @return int 这里会返回一个整数类型的数字\r\n */\r\nfunction returnFunc($param)\r\n{\r\n    $b = (int) $param;\r\n    return $b;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }]; private $namespaces = [] } } }, $next = class Closure { virtual $closure = "phpDocumentor\Reflection\Middleware\ChainFactory::phpDocumentor\Reflection\Middleware\{closure}" }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Middleware/ChainFactory.php:43
    3.7305   23334688  35. phpDocumentor\Reflection\Middleware\ChainFactory::phpDocumentor\Reflection\Middleware\{closure:phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Middleware/ChainFactory.php:42-44}($command = class phpDocumentor\Reflection\Php\Factory\File\CreateCommand { private $file = class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/see.php' }; private $strategies = class phpDocumentor\Reflection\Php\ProjectFactoryStrategies { private $strategies = class SplPriorityQueue {  } }; private $context = class phpDocumentor\Reflection\Php\Factory\ContextStack { private $elements = []; private $typeContext = NULL; private $project = class phpDocumentor\Reflection\Php\Project { private $name = 'Untitled project'; private $rootNamespace = class phpDocumentor\Reflection\Php\Namespace_ { private $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\'; private $name = '' }; private $functions = []; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $metadata = [] }; private $files = ['tag/basic/abstract.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '25383ef3973570a805774c93039c30e6'; private $name = 'abstract.php'; private $path = 'tag/basic/abstract.php'; private $source = '<?php\r\n/**\r\n * 这是abstract的标签示例\r\n * \r\n * 如果类中有最少一个抽象方法的话，那么类应该被声明为抽象类\r\n * 但是生成的文档里面没有此类为抽象类的说明\r\n */\r\n\r\nabstract class AbstractClass\r\n{\r\n    /**\r\n    * 这是一个抽象方法a\r\n    *\r\n    * @abstract\r\n    */\r\n    abstract function abstractFunc1(){}\r\n\r\n    /**\r\n    * 这是一个普通的方法b\r\n    */\r\n    function abstractFunc2(){}\r\n\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/author.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'd9e361a09ccde31989ccb20e88a67911'; private $name = 'author.php'; private $path = 'tag/basic/author.php'; private $source = '<?php\r\n/**\r\n * 这是author标签示例\r\n * \r\n * 此标签看起来没什么作用\r\n * 当前为page示例\r\n * 此标签可以用于任何需要标记的元素上\r\n * (global variable, include, constant, function, define, class, variable, method, page)\r\n * \r\n * @author honece <china_zhz@year.net>\r\n */\r\n/**\r\n * 当前为function示例\r\n * \r\n * 此函数可能由另一个作者编写\r\n * @author honece No.2\r\n */\r\nfunction authorFunc(){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/category.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '548c7434eede46236d937df49eb48948'; private $name = 'category.php'; private $path = 'tag/basic/category.php'; private $source = '<?php\r\n/**\r\n * 这是category的标签示例\r\n * \r\n * 这是声明类别的示例\r\n * 看起来没有什么作用\r\n * @category mycategory\r\n */\r\n\r\nfunction categoryFunc()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/copyright.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '2b678c2b48219fe173c62f57864f2525'; private $name = 'copyright.php'; private $path = 'tag/basic/copyright.php'; private $source = '<?php\r\n/**\r\n * 这是copyright的标签示例\r\n * \r\n * 用来声明版权，看起来没什么作用\r\n * 当前为页面级文档块\r\n * @copyright Copyright (c) 2023, honece\r\n */\r\nfunction copyrightFunc(){}\r\n'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/deprecated.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '17d32066e871d9fc63297cfd57169977'; private $name = 'deprecated.php'; private $path = 'tag/basic/deprecated.php'; private $source = '<?php\r\n/**\r\n * 这是deprecated标签示例\r\n * \r\n * 当前为class级文档块，\r\n * 此标记可用于page级文档块之外的文档块\r\n */\r\nclass DeprecatedClass\r\n{\r\n    /**\r\n     * @deprecated <0.1.0> a方法自0.1.0版本已弃用\r\n     */\r\n    function deprecatedFunc(){}\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/example.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '8bb87bb5e2cc319aae956131058b2c05'; private $name = 'example.php'; private $path = 'tag/basic/example.php'; private $source = '<?php\r\n/**\r\n* 这是example标签示例\r\n*\r\n* 这个标签应该弃用了，没看到作用\r\n* @example /tag/inline/example.php 这是此标签内联用法\r\n* @example example.php 此示例为当前目录文件\r\n*/\r\nfunction exampleFunc(){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/filesource.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '6855239bc05bb284fa5bac07c3b0ae74'; private $name = 'filesource.php'; private $path = 'tag/basic/filesource.php'; private $source = '<?php\r\n/**\r\n * 这是filesource标签的示例代码\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 作用就是给当前文件创建一个链接并显示源代码\r\n * @filesource\r\n */\r\necho "filesource";'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/final.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'd5f20945a818b3c642fdab441d2ab021'; private $name = 'final.php'; private $path = 'tag/basic/final.php'; private $source = '<?php\r\n/**\r\n * 这是final标签的示例\r\n * 此标签已无效，作用就是字面意思\r\n */\r\n\r\nclass FinalClass\r\n{\r\n    /**\r\n     * @final\r\n     */\r\n    final function finalFunc()\r\n    {\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/global.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '4d282567fbbd0bb8bd3806a7c8d48ac4'; private $name = 'global.php'; private $path = 'tag/basic/global.php'; private $source = '<?php\r\n/**\r\n * 这是global标签示例\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 主要用于记录全局变量的用法\r\n * 建议直接声明在定义全局变量的上一行，以免引发放在错误的作用域内不识别的错误\r\n */\r\n\r\n/** \r\n * @global mixed $_GLOBALS["myvar"] \r\n */\r\n$_GLOBALS["myvar"] = array("this" => \'工作正常\');\r\n\r\n\r\n\r\n/**\r\n * 将@name与@global一起使用的示例\r\n * 在@name标签中，name必须有$,否则将引发错误\r\n * @global array $GLOBALS[\'ne'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/ignore.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'b8c7f25d8710acdd4997bf8b9cf326f5'; private $name = 'ignore.php'; private $path = 'tag/basic/ignore.php'; private $source = '<?php\r\n/**\r\n * 这是ignore标签示例\r\n * \r\n * 这个标签应该被弃用了，没看到作用\r\n * 此标签用于组织phpdoc记录元素\r\n */\r\n\r\nif ($ostest) {\r\n    /**\r\n     * This define will either be \'Unix\' or \'Windows\'\r\n     */\r\n    define("OS", "Unix");\r\n}\r\nelse {\r\n    /**\r\n     * @ignore 这里是忽略的常量\r\n     */\r\n    define("OS", "Windows");\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/internal.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '7c4ee7a472406e48a31b52a38228e7b8'; private $name = 'internal.php'; private $path = 'tag/basic/internal.php'; private $source = '<?php\r\n/**\r\n * 这是internal标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签可以生成两份文档，官方说是phpdoc最有用的功能之一\r\n * {@internal 要访问有关修改此类的指南,见 {@link http://www.baidu.com 指南},或联系你的主管}}}\r\n * @internal 该类使用私有方法 {@link _foo()} 和 {@link _bar()} 做一些事情\r\n */\r\n\r\nclass InternalClass\r\n{\r\n    private function _foo()\r\n    {\r\n    }\r\n    private function _bar()\r\n    {\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/license.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '614a33e8f17827aa988341b4f193b49f'; private $name = 'license.php'; private $path = 'tag/basic/license.php'; private $source = '<?php\r\n/**\r\n * 这是license标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签用于向用户提示适用于此文档块的许可证\r\n * 展示指向许可证URL的超链接，个人只建议放在文件级别的文档块中\r\n * @license http://www.apache.org/licenses/LICENSE-2.0 Apache2.0\r\n */\r\n\r\nclass LicenseClass\r\n{\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/link.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9c13e13e5c3217f8f2e974c4dfce67a5'; private $name = 'link.php'; private $path = 'tag/basic/link.php'; private $source = '<?php\r\n/**\r\n * 这是link标签示例\r\n * @link http://www.baidu.com 详情找百度\r\n */\r\n\r\n /**\r\n  * @link https://www.ietf.org/rfc/rfc2396.txt RFC2396\r\n  */\r\n define("TEST_CONSTANT2",3);\r\n'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/method.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '445eba76dd6b5f15c3fcc343ef10bcf9'; private $name = 'method.php'; private $path = 'tag/basic/method.php'; private $source = '<?php\r\n/**\r\n * 这是method标签示例\r\n * \r\n * 官方给出的定义是，要在子类中声明父类使用魔术方法来实现的一些非显示存在方法\r\n * \r\n * @method return echo2(string $string) 打印带有换行符的字符串\r\n */\r\nclass MethodClass extends Father{}\r\n\r\nclass Father\r\n{\r\n    function __call($method, string $params)\r\n    {\r\n        if ($method == \'echo2\') {\r\n            echo $params . PHP_EOL;\r\n        }\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/name.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'd9019fefa63635ac09f7bb2b6f7c6cba'; private $name = 'name.php'; private $path = 'tag/basic/name.php'; private $source = '<?php\r\n/**\r\n * 这是name标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n */\r\n\r\n/**\r\n * 当在函数中使用@global时，它将链接到$baz\r\n * @global array $GLOBALS[\'baz\'] \r\n */\r\n$GLOBALS[\'baz\'] = array(\'foo\', \'bar\');\r\n\r\n/**\r\n * @global array used for stuff\r\n */\r\nfunction name()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/package.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9f03658e0d23226be1fcd8ca7f88ed8e'; private $name = 'package.php'; private $path = 'tag/basic/package.php'; private $source = '<?php\r\n/**\r\n * 这是package标签示例\r\n * \r\n * 页面级DocBlock示例。\r\n * 此DocBlock位于另一个DocBlock之前，将被解析为页面级别。\r\n * 将您的@package和@subpackage标记放在此处\r\n * @package packageTest\r\n */\r\n\r\n/**\r\n * function bluh\r\n */\r\nfunction bluh()\r\n{\r\n}\r\n?>\r\n<?php\r\n/**\r\n* 类 PackageClass\r\n*\r\n* 类级DocBlock示例。以下示例代表packageTestSub包在packageTest内,\r\n* 需要注意下划线[_]也会被解析成包分割符\r\n* @package packageTest\\packageTestSub \r\n*/'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/param.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9b7e83cee7e212b7bdaabae8ecc456f4'; private $name = 'param.php'; private $path = 'tag/basic/param.php'; private $source = '<?php\r\n/**\r\n * 这是param标签示例\r\n * \r\n * 声明方法传入的参数\r\n */\r\n\r\n /**\r\n  * @param int $b 你需要传入一个整数型的变量\r\n  */\r\n function parmFunc(int $b){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/property.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'a1d1498b932fe0c2a140120d62e3411c'; private $name = 'property.php'; private $path = 'tag/basic/property.php'; private $source = '<?php\r\n/**\r\n * 这是property包括它的变体[property-read | property-write]标签示例\r\n *\r\n * @property mixed $regular 声明常规的读写属性\r\n * @property-read int $foo 声明只读\r\n * @property-write string $bar 声明只写\r\n */\r\n\r\nclass PropertyClass\r\n{\r\n    private $_thingy;\r\n    private $_bar;\r\n    function __get($var)\r\n    {\r\n        switch ($var) {\r\n            case \'foo\':\r\n                return 45;\r\n            case \'regular\':\r\n                return $this->_thingy;\r\n        }\r\n    }\r\n'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/return.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '845265a10a560b5a5359f1882513c161'; private $name = 'return.php'; private $path = 'tag/basic/return.php'; private $source = '<?php\r\n/**\r\n * 这是return标签示例\r\n * \r\n * 这个标签用于标记方法或函数的返回值和返回内容\r\n * @return int 这里会返回一个整数类型的数字\r\n */\r\nfunction returnFunc($param)\r\n{\r\n    $b = (int) $param;\r\n    return $b;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }]; private $namespaces = [] } } }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/src/phpDocumentor/Parser/Middleware/ErrorHandlingMiddleware.php:46
    3.7311   23334688  36. phpDocumentor\Parser\Middleware\ReEncodingMiddleware->execute($command = class phpDocumentor\Reflection\Php\Factory\File\CreateCommand { private $file = class phpDocumentor\Parser\FlySystemFile { private $fileSystem = class League\Flysystem\Filesystem { protected $adapter = class League\Flysystem\Adapter\Local { protected $pathSeparator = '\\'; protected $permissionMap = ['file' => [...], 'dir' => [...]]; protected $writeFlags = 2; private $linkHandling = 1; protected $pathPrefix = '.\\' }; protected $plugins = ['find' => class Flyfinder\Finder { private $filesystem = ... }]; protected $config = class League\Flysystem\Config { protected $settings = []; protected $fallback = NULL } }; private $fileName = 'tag/basic/see.php' }; private $strategies = class phpDocumentor\Reflection\Php\ProjectFactoryStrategies { private $strategies = class SplPriorityQueue {  } }; private $context = class phpDocumentor\Reflection\Php\Factory\ContextStack { private $elements = []; private $typeContext = NULL; private $project = class phpDocumentor\Reflection\Php\Project { private $name = 'Untitled project'; private $rootNamespace = class phpDocumentor\Reflection\Php\Namespace_ { private $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\'; private $name = '' }; private $functions = []; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $metadata = [] }; private $files = ['tag/basic/abstract.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '25383ef3973570a805774c93039c30e6'; private $name = 'abstract.php'; private $path = 'tag/basic/abstract.php'; private $source = '<?php\r\n/**\r\n * 这是abstract的标签示例\r\n * \r\n * 如果类中有最少一个抽象方法的话，那么类应该被声明为抽象类\r\n * 但是生成的文档里面没有此类为抽象类的说明\r\n */\r\n\r\nabstract class AbstractClass\r\n{\r\n    /**\r\n    * 这是一个抽象方法a\r\n    *\r\n    * @abstract\r\n    */\r\n    abstract function abstractFunc1(){}\r\n\r\n    /**\r\n    * 这是一个普通的方法b\r\n    */\r\n    function abstractFunc2(){}\r\n\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/author.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'd9e361a09ccde31989ccb20e88a67911'; private $name = 'author.php'; private $path = 'tag/basic/author.php'; private $source = '<?php\r\n/**\r\n * 这是author标签示例\r\n * \r\n * 此标签看起来没什么作用\r\n * 当前为page示例\r\n * 此标签可以用于任何需要标记的元素上\r\n * (global variable, include, constant, function, define, class, variable, method, page)\r\n * \r\n * @author honece <china_zhz@year.net>\r\n */\r\n/**\r\n * 当前为function示例\r\n * \r\n * 此函数可能由另一个作者编写\r\n * @author honece No.2\r\n */\r\nfunction authorFunc(){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/category.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '548c7434eede46236d937df49eb48948'; private $name = 'category.php'; private $path = 'tag/basic/category.php'; private $source = '<?php\r\n/**\r\n * 这是category的标签示例\r\n * \r\n * 这是声明类别的示例\r\n * 看起来没有什么作用\r\n * @category mycategory\r\n */\r\n\r\nfunction categoryFunc()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/copyright.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '2b678c2b48219fe173c62f57864f2525'; private $name = 'copyright.php'; private $path = 'tag/basic/copyright.php'; private $source = '<?php\r\n/**\r\n * 这是copyright的标签示例\r\n * \r\n * 用来声明版权，看起来没什么作用\r\n * 当前为页面级文档块\r\n * @copyright Copyright (c) 2023, honece\r\n */\r\nfunction copyrightFunc(){}\r\n'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/deprecated.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '17d32066e871d9fc63297cfd57169977'; private $name = 'deprecated.php'; private $path = 'tag/basic/deprecated.php'; private $source = '<?php\r\n/**\r\n * 这是deprecated标签示例\r\n * \r\n * 当前为class级文档块，\r\n * 此标记可用于page级文档块之外的文档块\r\n */\r\nclass DeprecatedClass\r\n{\r\n    /**\r\n     * @deprecated <0.1.0> a方法自0.1.0版本已弃用\r\n     */\r\n    function deprecatedFunc(){}\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/example.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '8bb87bb5e2cc319aae956131058b2c05'; private $name = 'example.php'; private $path = 'tag/basic/example.php'; private $source = '<?php\r\n/**\r\n* 这是example标签示例\r\n*\r\n* 这个标签应该弃用了，没看到作用\r\n* @example /tag/inline/example.php 这是此标签内联用法\r\n* @example example.php 此示例为当前目录文件\r\n*/\r\nfunction exampleFunc(){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/filesource.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '6855239bc05bb284fa5bac07c3b0ae74'; private $name = 'filesource.php'; private $path = 'tag/basic/filesource.php'; private $source = '<?php\r\n/**\r\n * 这是filesource标签的示例代码\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 作用就是给当前文件创建一个链接并显示源代码\r\n * @filesource\r\n */\r\necho "filesource";'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/final.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'd5f20945a818b3c642fdab441d2ab021'; private $name = 'final.php'; private $path = 'tag/basic/final.php'; private $source = '<?php\r\n/**\r\n * 这是final标签的示例\r\n * 此标签已无效，作用就是字面意思\r\n */\r\n\r\nclass FinalClass\r\n{\r\n    /**\r\n     * @final\r\n     */\r\n    final function finalFunc()\r\n    {\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/global.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '4d282567fbbd0bb8bd3806a7c8d48ac4'; private $name = 'global.php'; private $path = 'tag/basic/global.php'; private $source = '<?php\r\n/**\r\n * 这是global标签示例\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 主要用于记录全局变量的用法\r\n * 建议直接声明在定义全局变量的上一行，以免引发放在错误的作用域内不识别的错误\r\n */\r\n\r\n/** \r\n * @global mixed $_GLOBALS["myvar"] \r\n */\r\n$_GLOBALS["myvar"] = array("this" => \'工作正常\');\r\n\r\n\r\n\r\n/**\r\n * 将@name与@global一起使用的示例\r\n * 在@name标签中，name必须有$,否则将引发错误\r\n * @global array $GLOBALS[\'ne'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/ignore.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'b8c7f25d8710acdd4997bf8b9cf326f5'; private $name = 'ignore.php'; private $path = 'tag/basic/ignore.php'; private $source = '<?php\r\n/**\r\n * 这是ignore标签示例\r\n * \r\n * 这个标签应该被弃用了，没看到作用\r\n * 此标签用于组织phpdoc记录元素\r\n */\r\n\r\nif ($ostest) {\r\n    /**\r\n     * This define will either be \'Unix\' or \'Windows\'\r\n     */\r\n    define("OS", "Unix");\r\n}\r\nelse {\r\n    /**\r\n     * @ignore 这里是忽略的常量\r\n     */\r\n    define("OS", "Windows");\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/internal.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '7c4ee7a472406e48a31b52a38228e7b8'; private $name = 'internal.php'; private $path = 'tag/basic/internal.php'; private $source = '<?php\r\n/**\r\n * 这是internal标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签可以生成两份文档，官方说是phpdoc最有用的功能之一\r\n * {@internal 要访问有关修改此类的指南,见 {@link http://www.baidu.com 指南},或联系你的主管}}}\r\n * @internal 该类使用私有方法 {@link _foo()} 和 {@link _bar()} 做一些事情\r\n */\r\n\r\nclass InternalClass\r\n{\r\n    private function _foo()\r\n    {\r\n    }\r\n    private function _bar()\r\n    {\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/license.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '614a33e8f17827aa988341b4f193b49f'; private $name = 'license.php'; private $path = 'tag/basic/license.php'; private $source = '<?php\r\n/**\r\n * 这是license标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签用于向用户提示适用于此文档块的许可证\r\n * 展示指向许可证URL的超链接，个人只建议放在文件级别的文档块中\r\n * @license http://www.apache.org/licenses/LICENSE-2.0 Apache2.0\r\n */\r\n\r\nclass LicenseClass\r\n{\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/link.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9c13e13e5c3217f8f2e974c4dfce67a5'; private $name = 'link.php'; private $path = 'tag/basic/link.php'; private $source = '<?php\r\n/**\r\n * 这是link标签示例\r\n * @link http://www.baidu.com 详情找百度\r\n */\r\n\r\n /**\r\n  * @link https://www.ietf.org/rfc/rfc2396.txt RFC2396\r\n  */\r\n define("TEST_CONSTANT2",3);\r\n'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/method.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '445eba76dd6b5f15c3fcc343ef10bcf9'; private $name = 'method.php'; private $path = 'tag/basic/method.php'; private $source = '<?php\r\n/**\r\n * 这是method标签示例\r\n * \r\n * 官方给出的定义是，要在子类中声明父类使用魔术方法来实现的一些非显示存在方法\r\n * \r\n * @method return echo2(string $string) 打印带有换行符的字符串\r\n */\r\nclass MethodClass extends Father{}\r\n\r\nclass Father\r\n{\r\n    function __call($method, string $params)\r\n    {\r\n        if ($method == \'echo2\') {\r\n            echo $params . PHP_EOL;\r\n        }\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/name.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'd9019fefa63635ac09f7bb2b6f7c6cba'; private $name = 'name.php'; private $path = 'tag/basic/name.php'; private $source = '<?php\r\n/**\r\n * 这是name标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n */\r\n\r\n/**\r\n * 当在函数中使用@global时，它将链接到$baz\r\n * @global array $GLOBALS[\'baz\'] \r\n */\r\n$GLOBALS[\'baz\'] = array(\'foo\', \'bar\');\r\n\r\n/**\r\n * @global array used for stuff\r\n */\r\nfunction name()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/package.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9f03658e0d23226be1fcd8ca7f88ed8e'; private $name = 'package.php'; private $path = 'tag/basic/package.php'; private $source = '<?php\r\n/**\r\n * 这是package标签示例\r\n * \r\n * 页面级DocBlock示例。\r\n * 此DocBlock位于另一个DocBlock之前，将被解析为页面级别。\r\n * 将您的@package和@subpackage标记放在此处\r\n * @package packageTest\r\n */\r\n\r\n/**\r\n * function bluh\r\n */\r\nfunction bluh()\r\n{\r\n}\r\n?>\r\n<?php\r\n/**\r\n* 类 PackageClass\r\n*\r\n* 类级DocBlock示例。以下示例代表packageTestSub包在packageTest内,\r\n* 需要注意下划线[_]也会被解析成包分割符\r\n* @package packageTest\\packageTestSub \r\n*/'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/param.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9b7e83cee7e212b7bdaabae8ecc456f4'; private $name = 'param.php'; private $path = 'tag/basic/param.php'; private $source = '<?php\r\n/**\r\n * 这是param标签示例\r\n * \r\n * 声明方法传入的参数\r\n */\r\n\r\n /**\r\n  * @param int $b 你需要传入一个整数型的变量\r\n  */\r\n function parmFunc(int $b){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/property.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'a1d1498b932fe0c2a140120d62e3411c'; private $name = 'property.php'; private $path = 'tag/basic/property.php'; private $source = '<?php\r\n/**\r\n * 这是property包括它的变体[property-read | property-write]标签示例\r\n *\r\n * @property mixed $regular 声明常规的读写属性\r\n * @property-read int $foo 声明只读\r\n * @property-write string $bar 声明只写\r\n */\r\n\r\nclass PropertyClass\r\n{\r\n    private $_thingy;\r\n    private $_bar;\r\n    function __get($var)\r\n    {\r\n        switch ($var) {\r\n            case \'foo\':\r\n                return 45;\r\n            case \'regular\':\r\n                return $this->_thingy;\r\n        }\r\n    }\r\n'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/return.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '845265a10a560b5a5359f1882513c161'; private $name = 'return.php'; private $path = 'tag/basic/return.php'; private $source = '<?php\r\n/**\r\n * 这是return标签示例\r\n * \r\n * 这个标签用于标记方法或函数的返回值和返回内容\r\n * @return int 这里会返回一个整数类型的数字\r\n */\r\nfunction returnFunc($param)\r\n{\r\n    $b = (int) $param;\r\n    return $b;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }]; private $namespaces = [] } } }, $next = class Closure { virtual $closure = "$this->phpDocumentor\Reflection\Php\Factory\{closure}" }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Middleware/ChainFactory.php:43
    3.7418   23336720  37. phpDocumentor\Reflection\Php\Factory\File->phpDocumentor\Reflection\Php\Factory\{closure:phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Php/Factory/File.php:70-72}($command = class phpDocumentor\Reflection\Php\Factory\File\CreateCommand { private $file = class phpDocumentor\Parser\ReEncodedFile { private $path = 'tag/basic/see.php'; private $contents = class Symfony\Component\String\UnicodeString { protected $string = '<?php\r\nnamespace Error;\r\n\r\n/**\r\n * 这是return标签示例\r\n * \r\n * 此标签用于链接到文档内的任何元素，也可以给指定的{@see https://www.ietf.org/rfc/rfc2396.txt <URI>}\r\n * @see SeeChild->method()\r\n */\r\nclass SeeFather\r\n{\r\n    /**\r\n     * 链接到同一类的示例，输出<u>Father:：parent_method()</u>\r\n     * @see parent_method()\r\n     */\r\n    var $foo = 3;\r\n\r\n    /**\r\n     * 子类继承此方法。\r\n     * 常量或类名的单词示例，在本例中为类名\r\n     * @see SeeCh'...; protected $ignoreCase = FALSE } }; private $strategies = class phpDocumentor\Reflection\Php\ProjectFactoryStrategies { private $strategies = class SplPriorityQueue {  } }; private $context = class phpDocumentor\Reflection\Php\Factory\ContextStack { private $elements = []; private $typeContext = NULL; private $project = class phpDocumentor\Reflection\Php\Project { private $name = 'Untitled project'; private $rootNamespace = class phpDocumentor\Reflection\Php\Namespace_ { private $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\'; private $name = '' }; private $functions = []; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $metadata = [] }; private $files = ['tag/basic/abstract.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '25383ef3973570a805774c93039c30e6'; private $name = 'abstract.php'; private $path = 'tag/basic/abstract.php'; private $source = '<?php\r\n/**\r\n * 这是abstract的标签示例\r\n * \r\n * 如果类中有最少一个抽象方法的话，那么类应该被声明为抽象类\r\n * 但是生成的文档里面没有此类为抽象类的说明\r\n */\r\n\r\nabstract class AbstractClass\r\n{\r\n    /**\r\n    * 这是一个抽象方法a\r\n    *\r\n    * @abstract\r\n    */\r\n    abstract function abstractFunc1(){}\r\n\r\n    /**\r\n    * 这是一个普通的方法b\r\n    */\r\n    function abstractFunc2(){}\r\n\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/author.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'd9e361a09ccde31989ccb20e88a67911'; private $name = 'author.php'; private $path = 'tag/basic/author.php'; private $source = '<?php\r\n/**\r\n * 这是author标签示例\r\n * \r\n * 此标签看起来没什么作用\r\n * 当前为page示例\r\n * 此标签可以用于任何需要标记的元素上\r\n * (global variable, include, constant, function, define, class, variable, method, page)\r\n * \r\n * @author honece <china_zhz@year.net>\r\n */\r\n/**\r\n * 当前为function示例\r\n * \r\n * 此函数可能由另一个作者编写\r\n * @author honece No.2\r\n */\r\nfunction authorFunc(){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/category.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '548c7434eede46236d937df49eb48948'; private $name = 'category.php'; private $path = 'tag/basic/category.php'; private $source = '<?php\r\n/**\r\n * 这是category的标签示例\r\n * \r\n * 这是声明类别的示例\r\n * 看起来没有什么作用\r\n * @category mycategory\r\n */\r\n\r\nfunction categoryFunc()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/copyright.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '2b678c2b48219fe173c62f57864f2525'; private $name = 'copyright.php'; private $path = 'tag/basic/copyright.php'; private $source = '<?php\r\n/**\r\n * 这是copyright的标签示例\r\n * \r\n * 用来声明版权，看起来没什么作用\r\n * 当前为页面级文档块\r\n * @copyright Copyright (c) 2023, honece\r\n */\r\nfunction copyrightFunc(){}\r\n'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/deprecated.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '17d32066e871d9fc63297cfd57169977'; private $name = 'deprecated.php'; private $path = 'tag/basic/deprecated.php'; private $source = '<?php\r\n/**\r\n * 这是deprecated标签示例\r\n * \r\n * 当前为class级文档块，\r\n * 此标记可用于page级文档块之外的文档块\r\n */\r\nclass DeprecatedClass\r\n{\r\n    /**\r\n     * @deprecated <0.1.0> a方法自0.1.0版本已弃用\r\n     */\r\n    function deprecatedFunc(){}\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/example.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '8bb87bb5e2cc319aae956131058b2c05'; private $name = 'example.php'; private $path = 'tag/basic/example.php'; private $source = '<?php\r\n/**\r\n* 这是example标签示例\r\n*\r\n* 这个标签应该弃用了，没看到作用\r\n* @example /tag/inline/example.php 这是此标签内联用法\r\n* @example example.php 此示例为当前目录文件\r\n*/\r\nfunction exampleFunc(){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/filesource.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '6855239bc05bb284fa5bac07c3b0ae74'; private $name = 'filesource.php'; private $path = 'tag/basic/filesource.php'; private $source = '<?php\r\n/**\r\n * 这是filesource标签的示例代码\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 作用就是给当前文件创建一个链接并显示源代码\r\n * @filesource\r\n */\r\necho "filesource";'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/final.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'd5f20945a818b3c642fdab441d2ab021'; private $name = 'final.php'; private $path = 'tag/basic/final.php'; private $source = '<?php\r\n/**\r\n * 这是final标签的示例\r\n * 此标签已无效，作用就是字面意思\r\n */\r\n\r\nclass FinalClass\r\n{\r\n    /**\r\n     * @final\r\n     */\r\n    final function finalFunc()\r\n    {\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/global.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '4d282567fbbd0bb8bd3806a7c8d48ac4'; private $name = 'global.php'; private $path = 'tag/basic/global.php'; private $source = '<?php\r\n/**\r\n * 这是global标签示例\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 主要用于记录全局变量的用法\r\n * 建议直接声明在定义全局变量的上一行，以免引发放在错误的作用域内不识别的错误\r\n */\r\n\r\n/** \r\n * @global mixed $_GLOBALS["myvar"] \r\n */\r\n$_GLOBALS["myvar"] = array("this" => \'工作正常\');\r\n\r\n\r\n\r\n/**\r\n * 将@name与@global一起使用的示例\r\n * 在@name标签中，name必须有$,否则将引发错误\r\n * @global array $GLOBALS[\'ne'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/ignore.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'b8c7f25d8710acdd4997bf8b9cf326f5'; private $name = 'ignore.php'; private $path = 'tag/basic/ignore.php'; private $source = '<?php\r\n/**\r\n * 这是ignore标签示例\r\n * \r\n * 这个标签应该被弃用了，没看到作用\r\n * 此标签用于组织phpdoc记录元素\r\n */\r\n\r\nif ($ostest) {\r\n    /**\r\n     * This define will either be \'Unix\' or \'Windows\'\r\n     */\r\n    define("OS", "Unix");\r\n}\r\nelse {\r\n    /**\r\n     * @ignore 这里是忽略的常量\r\n     */\r\n    define("OS", "Windows");\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/internal.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '7c4ee7a472406e48a31b52a38228e7b8'; private $name = 'internal.php'; private $path = 'tag/basic/internal.php'; private $source = '<?php\r\n/**\r\n * 这是internal标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签可以生成两份文档，官方说是phpdoc最有用的功能之一\r\n * {@internal 要访问有关修改此类的指南,见 {@link http://www.baidu.com 指南},或联系你的主管}}}\r\n * @internal 该类使用私有方法 {@link _foo()} 和 {@link _bar()} 做一些事情\r\n */\r\n\r\nclass InternalClass\r\n{\r\n    private function _foo()\r\n    {\r\n    }\r\n    private function _bar()\r\n    {\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/license.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '614a33e8f17827aa988341b4f193b49f'; private $name = 'license.php'; private $path = 'tag/basic/license.php'; private $source = '<?php\r\n/**\r\n * 这是license标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签用于向用户提示适用于此文档块的许可证\r\n * 展示指向许可证URL的超链接，个人只建议放在文件级别的文档块中\r\n * @license http://www.apache.org/licenses/LICENSE-2.0 Apache2.0\r\n */\r\n\r\nclass LicenseClass\r\n{\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/link.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9c13e13e5c3217f8f2e974c4dfce67a5'; private $name = 'link.php'; private $path = 'tag/basic/link.php'; private $source = '<?php\r\n/**\r\n * 这是link标签示例\r\n * @link http://www.baidu.com 详情找百度\r\n */\r\n\r\n /**\r\n  * @link https://www.ietf.org/rfc/rfc2396.txt RFC2396\r\n  */\r\n define("TEST_CONSTANT2",3);\r\n'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/method.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '445eba76dd6b5f15c3fcc343ef10bcf9'; private $name = 'method.php'; private $path = 'tag/basic/method.php'; private $source = '<?php\r\n/**\r\n * 这是method标签示例\r\n * \r\n * 官方给出的定义是，要在子类中声明父类使用魔术方法来实现的一些非显示存在方法\r\n * \r\n * @method return echo2(string $string) 打印带有换行符的字符串\r\n */\r\nclass MethodClass extends Father{}\r\n\r\nclass Father\r\n{\r\n    function __call($method, string $params)\r\n    {\r\n        if ($method == \'echo2\') {\r\n            echo $params . PHP_EOL;\r\n        }\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/name.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'd9019fefa63635ac09f7bb2b6f7c6cba'; private $name = 'name.php'; private $path = 'tag/basic/name.php'; private $source = '<?php\r\n/**\r\n * 这是name标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n */\r\n\r\n/**\r\n * 当在函数中使用@global时，它将链接到$baz\r\n * @global array $GLOBALS[\'baz\'] \r\n */\r\n$GLOBALS[\'baz\'] = array(\'foo\', \'bar\');\r\n\r\n/**\r\n * @global array used for stuff\r\n */\r\nfunction name()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/package.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9f03658e0d23226be1fcd8ca7f88ed8e'; private $name = 'package.php'; private $path = 'tag/basic/package.php'; private $source = '<?php\r\n/**\r\n * 这是package标签示例\r\n * \r\n * 页面级DocBlock示例。\r\n * 此DocBlock位于另一个DocBlock之前，将被解析为页面级别。\r\n * 将您的@package和@subpackage标记放在此处\r\n * @package packageTest\r\n */\r\n\r\n/**\r\n * function bluh\r\n */\r\nfunction bluh()\r\n{\r\n}\r\n?>\r\n<?php\r\n/**\r\n* 类 PackageClass\r\n*\r\n* 类级DocBlock示例。以下示例代表packageTestSub包在packageTest内,\r\n* 需要注意下划线[_]也会被解析成包分割符\r\n* @package packageTest\\packageTestSub \r\n*/'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/param.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9b7e83cee7e212b7bdaabae8ecc456f4'; private $name = 'param.php'; private $path = 'tag/basic/param.php'; private $source = '<?php\r\n/**\r\n * 这是param标签示例\r\n * \r\n * 声明方法传入的参数\r\n */\r\n\r\n /**\r\n  * @param int $b 你需要传入一个整数型的变量\r\n  */\r\n function parmFunc(int $b){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/property.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'a1d1498b932fe0c2a140120d62e3411c'; private $name = 'property.php'; private $path = 'tag/basic/property.php'; private $source = '<?php\r\n/**\r\n * 这是property包括它的变体[property-read | property-write]标签示例\r\n *\r\n * @property mixed $regular 声明常规的读写属性\r\n * @property-read int $foo 声明只读\r\n * @property-write string $bar 声明只写\r\n */\r\n\r\nclass PropertyClass\r\n{\r\n    private $_thingy;\r\n    private $_bar;\r\n    function __get($var)\r\n    {\r\n        switch ($var) {\r\n            case \'foo\':\r\n                return 45;\r\n            case \'regular\':\r\n                return $this->_thingy;\r\n        }\r\n    }\r\n'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/return.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '845265a10a560b5a5359f1882513c161'; private $name = 'return.php'; private $path = 'tag/basic/return.php'; private $source = '<?php\r\n/**\r\n * 这是return标签示例\r\n * \r\n * 这个标签用于标记方法或函数的返回值和返回内容\r\n * @return int 这里会返回一个整数类型的数字\r\n */\r\nfunction returnFunc($param)\r\n{\r\n    $b = (int) $param;\r\n    return $b;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }]; private $namespaces = [] } } }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/src/phpDocumentor/Parser/Middleware/ReEncodingMiddleware.php:46
    3.7421   23337096  38. phpDocumentor\Reflection\Php\Factory\File->createFile($command = class phpDocumentor\Reflection\Php\Factory\File\CreateCommand { private $file = class phpDocumentor\Parser\ReEncodedFile { private $path = 'tag/basic/see.php'; private $contents = class Symfony\Component\String\UnicodeString { protected $string = '<?php\r\nnamespace Error;\r\n\r\n/**\r\n * 这是return标签示例\r\n * \r\n * 此标签用于链接到文档内的任何元素，也可以给指定的{@see https://www.ietf.org/rfc/rfc2396.txt <URI>}\r\n * @see SeeChild->method()\r\n */\r\nclass SeeFather\r\n{\r\n    /**\r\n     * 链接到同一类的示例，输出<u>Father:：parent_method()</u>\r\n     * @see parent_method()\r\n     */\r\n    var $foo = 3;\r\n\r\n    /**\r\n     * 子类继承此方法。\r\n     * 常量或类名的单词示例，在本例中为类名\r\n     * @see SeeCh'...; protected $ignoreCase = FALSE } }; private $strategies = class phpDocumentor\Reflection\Php\ProjectFactoryStrategies { private $strategies = class SplPriorityQueue {  } }; private $context = class phpDocumentor\Reflection\Php\Factory\ContextStack { private $elements = []; private $typeContext = NULL; private $project = class phpDocumentor\Reflection\Php\Project { private $name = 'Untitled project'; private $rootNamespace = class phpDocumentor\Reflection\Php\Namespace_ { private $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\'; private $name = '' }; private $functions = []; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $metadata = [] }; private $files = ['tag/basic/abstract.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '25383ef3973570a805774c93039c30e6'; private $name = 'abstract.php'; private $path = 'tag/basic/abstract.php'; private $source = '<?php\r\n/**\r\n * 这是abstract的标签示例\r\n * \r\n * 如果类中有最少一个抽象方法的话，那么类应该被声明为抽象类\r\n * 但是生成的文档里面没有此类为抽象类的说明\r\n */\r\n\r\nabstract class AbstractClass\r\n{\r\n    /**\r\n    * 这是一个抽象方法a\r\n    *\r\n    * @abstract\r\n    */\r\n    abstract function abstractFunc1(){}\r\n\r\n    /**\r\n    * 这是一个普通的方法b\r\n    */\r\n    function abstractFunc2(){}\r\n\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/author.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'd9e361a09ccde31989ccb20e88a67911'; private $name = 'author.php'; private $path = 'tag/basic/author.php'; private $source = '<?php\r\n/**\r\n * 这是author标签示例\r\n * \r\n * 此标签看起来没什么作用\r\n * 当前为page示例\r\n * 此标签可以用于任何需要标记的元素上\r\n * (global variable, include, constant, function, define, class, variable, method, page)\r\n * \r\n * @author honece <china_zhz@year.net>\r\n */\r\n/**\r\n * 当前为function示例\r\n * \r\n * 此函数可能由另一个作者编写\r\n * @author honece No.2\r\n */\r\nfunction authorFunc(){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/category.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '548c7434eede46236d937df49eb48948'; private $name = 'category.php'; private $path = 'tag/basic/category.php'; private $source = '<?php\r\n/**\r\n * 这是category的标签示例\r\n * \r\n * 这是声明类别的示例\r\n * 看起来没有什么作用\r\n * @category mycategory\r\n */\r\n\r\nfunction categoryFunc()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/copyright.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '2b678c2b48219fe173c62f57864f2525'; private $name = 'copyright.php'; private $path = 'tag/basic/copyright.php'; private $source = '<?php\r\n/**\r\n * 这是copyright的标签示例\r\n * \r\n * 用来声明版权，看起来没什么作用\r\n * 当前为页面级文档块\r\n * @copyright Copyright (c) 2023, honece\r\n */\r\nfunction copyrightFunc(){}\r\n'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/deprecated.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '17d32066e871d9fc63297cfd57169977'; private $name = 'deprecated.php'; private $path = 'tag/basic/deprecated.php'; private $source = '<?php\r\n/**\r\n * 这是deprecated标签示例\r\n * \r\n * 当前为class级文档块，\r\n * 此标记可用于page级文档块之外的文档块\r\n */\r\nclass DeprecatedClass\r\n{\r\n    /**\r\n     * @deprecated <0.1.0> a方法自0.1.0版本已弃用\r\n     */\r\n    function deprecatedFunc(){}\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/example.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '8bb87bb5e2cc319aae956131058b2c05'; private $name = 'example.php'; private $path = 'tag/basic/example.php'; private $source = '<?php\r\n/**\r\n* 这是example标签示例\r\n*\r\n* 这个标签应该弃用了，没看到作用\r\n* @example /tag/inline/example.php 这是此标签内联用法\r\n* @example example.php 此示例为当前目录文件\r\n*/\r\nfunction exampleFunc(){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/filesource.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '6855239bc05bb284fa5bac07c3b0ae74'; private $name = 'filesource.php'; private $path = 'tag/basic/filesource.php'; private $source = '<?php\r\n/**\r\n * 这是filesource标签的示例代码\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 作用就是给当前文件创建一个链接并显示源代码\r\n * @filesource\r\n */\r\necho "filesource";'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/final.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'd5f20945a818b3c642fdab441d2ab021'; private $name = 'final.php'; private $path = 'tag/basic/final.php'; private $source = '<?php\r\n/**\r\n * 这是final标签的示例\r\n * 此标签已无效，作用就是字面意思\r\n */\r\n\r\nclass FinalClass\r\n{\r\n    /**\r\n     * @final\r\n     */\r\n    final function finalFunc()\r\n    {\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/global.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '4d282567fbbd0bb8bd3806a7c8d48ac4'; private $name = 'global.php'; private $path = 'tag/basic/global.php'; private $source = '<?php\r\n/**\r\n * 这是global标签示例\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 主要用于记录全局变量的用法\r\n * 建议直接声明在定义全局变量的上一行，以免引发放在错误的作用域内不识别的错误\r\n */\r\n\r\n/** \r\n * @global mixed $_GLOBALS["myvar"] \r\n */\r\n$_GLOBALS["myvar"] = array("this" => \'工作正常\');\r\n\r\n\r\n\r\n/**\r\n * 将@name与@global一起使用的示例\r\n * 在@name标签中，name必须有$,否则将引发错误\r\n * @global array $GLOBALS[\'ne'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/ignore.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'b8c7f25d8710acdd4997bf8b9cf326f5'; private $name = 'ignore.php'; private $path = 'tag/basic/ignore.php'; private $source = '<?php\r\n/**\r\n * 这是ignore标签示例\r\n * \r\n * 这个标签应该被弃用了，没看到作用\r\n * 此标签用于组织phpdoc记录元素\r\n */\r\n\r\nif ($ostest) {\r\n    /**\r\n     * This define will either be \'Unix\' or \'Windows\'\r\n     */\r\n    define("OS", "Unix");\r\n}\r\nelse {\r\n    /**\r\n     * @ignore 这里是忽略的常量\r\n     */\r\n    define("OS", "Windows");\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/internal.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '7c4ee7a472406e48a31b52a38228e7b8'; private $name = 'internal.php'; private $path = 'tag/basic/internal.php'; private $source = '<?php\r\n/**\r\n * 这是internal标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签可以生成两份文档，官方说是phpdoc最有用的功能之一\r\n * {@internal 要访问有关修改此类的指南,见 {@link http://www.baidu.com 指南},或联系你的主管}}}\r\n * @internal 该类使用私有方法 {@link _foo()} 和 {@link _bar()} 做一些事情\r\n */\r\n\r\nclass InternalClass\r\n{\r\n    private function _foo()\r\n    {\r\n    }\r\n    private function _bar()\r\n    {\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/license.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '614a33e8f17827aa988341b4f193b49f'; private $name = 'license.php'; private $path = 'tag/basic/license.php'; private $source = '<?php\r\n/**\r\n * 这是license标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签用于向用户提示适用于此文档块的许可证\r\n * 展示指向许可证URL的超链接，个人只建议放在文件级别的文档块中\r\n * @license http://www.apache.org/licenses/LICENSE-2.0 Apache2.0\r\n */\r\n\r\nclass LicenseClass\r\n{\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/link.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9c13e13e5c3217f8f2e974c4dfce67a5'; private $name = 'link.php'; private $path = 'tag/basic/link.php'; private $source = '<?php\r\n/**\r\n * 这是link标签示例\r\n * @link http://www.baidu.com 详情找百度\r\n */\r\n\r\n /**\r\n  * @link https://www.ietf.org/rfc/rfc2396.txt RFC2396\r\n  */\r\n define("TEST_CONSTANT2",3);\r\n'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/method.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '445eba76dd6b5f15c3fcc343ef10bcf9'; private $name = 'method.php'; private $path = 'tag/basic/method.php'; private $source = '<?php\r\n/**\r\n * 这是method标签示例\r\n * \r\n * 官方给出的定义是，要在子类中声明父类使用魔术方法来实现的一些非显示存在方法\r\n * \r\n * @method return echo2(string $string) 打印带有换行符的字符串\r\n */\r\nclass MethodClass extends Father{}\r\n\r\nclass Father\r\n{\r\n    function __call($method, string $params)\r\n    {\r\n        if ($method == \'echo2\') {\r\n            echo $params . PHP_EOL;\r\n        }\r\n    }\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/name.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = 'd9019fefa63635ac09f7bb2b6f7c6cba'; private $name = 'name.php'; private $path = 'tag/basic/name.php'; private $source = '<?php\r\n/**\r\n * 这是name标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n */\r\n\r\n/**\r\n * 当在函数中使用@global时，它将链接到$baz\r\n * @global array $GLOBALS[\'baz\'] \r\n */\r\n$GLOBALS[\'baz\'] = array(\'foo\', \'bar\');\r\n\r\n/**\r\n * @global array used for stuff\r\n */\r\nfunction name()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/package.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9f03658e0d23226be1fcd8ca7f88ed8e'; private $name = 'package.php'; private $path = 'tag/basic/package.php'; private $source = '<?php\r\n/**\r\n * 这是package标签示例\r\n * \r\n * 页面级DocBlock示例。\r\n * 此DocBlock位于另一个DocBlock之前，将被解析为页面级别。\r\n * 将您的@package和@subpackage标记放在此处\r\n * @package packageTest\r\n */\r\n\r\n/**\r\n * function bluh\r\n */\r\nfunction bluh()\r\n{\r\n}\r\n?>\r\n<?php\r\n/**\r\n* 类 PackageClass\r\n*\r\n* 类级DocBlock示例。以下示例代表packageTestSub包在packageTest内,\r\n* 需要注意下划线[_]也会被解析成包分割符\r\n* @package packageTest\\packageTestSub \r\n*/'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/param.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { ... }; private $hash = '9b7e83cee7e212b7bdaabae8ecc456f4'; private $name = 'param.php'; private $path = 'tag/basic/param.php'; private $source = '<?php\r\n/**\r\n * 这是param标签示例\r\n * \r\n * 声明方法传入的参数\r\n */\r\n\r\n /**\r\n  * @param int $b 你需要传入一个整数型的变量\r\n  */\r\n function parmFunc(int $b){}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/property.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'a1d1498b932fe0c2a140120d62e3411c'; private $name = 'property.php'; private $path = 'tag/basic/property.php'; private $source = '<?php\r\n/**\r\n * 这是property包括它的变体[property-read | property-write]标签示例\r\n *\r\n * @property mixed $regular 声明常规的读写属性\r\n * @property-read int $foo 声明只读\r\n * @property-write string $bar 声明只写\r\n */\r\n\r\nclass PropertyClass\r\n{\r\n    private $_thingy;\r\n    private $_bar;\r\n    function __get($var)\r\n    {\r\n        switch ($var) {\r\n            case \'foo\':\r\n                return 45;\r\n            case \'regular\':\r\n                return $this->_thingy;\r\n        }\r\n    }\r\n'...; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }, 'tag/basic/return.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '845265a10a560b5a5359f1882513c161'; private $name = 'return.php'; private $path = 'tag/basic/return.php'; private $source = '<?php\r\n/**\r\n * 这是return标签示例\r\n * \r\n * 这个标签用于标记方法或函数的返回值和返回内容\r\n * @return int 这里会返回一个整数类型的数字\r\n */\r\nfunction returnFunc($param)\r\n{\r\n    $b = (int) $param;\r\n    return $b;\r\n}'; private $namespaces = [...]; private $includes = [...]; private $functions = [...]; private $constants = [...]; private $classes = [...]; private $interfaces = [...]; private $traits = [...]; private $enums = [...]; private $metadata = [...] }]; private $namespaces = [] } } }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Php/Factory/File.php:71
    3.7711   23415096  39. phpDocumentor\Reflection\Php\Factory\File->createElements($contextStack = class phpDocumentor\Reflection\Php\Factory\ContextStack { private $elements = [0 => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '6dac94f657aab7c202434e3e9eb75c7d'; private $name = 'see.php'; private $path = 'tag/basic/see.php'; private $source = '<?php\r\nnamespace Error;\r\n\r\n/**\r\n * 这是return标签示例\r\n * \r\n * 此标签用于链接到文档内的任何元素，也可以给指定的{@see https://www.ietf.org/rfc/rfc2396.txt <URI>}\r\n * @see SeeChild->method()\r\n */\r\nclass SeeFather\r\n{\r\n    /**\r\n     * 链接到同一类的示例，输出<u>Father:：parent_method()</u>\r\n     * @see parent_method()\r\n     */\r\n    var $foo = 3;\r\n\r\n    /**\r\n     * 子类继承此方法。\r\n     * 常量或类名的单词示例，在本例中为类名\r\n     * @see SeeCh'...; private $namespaces = ['\Error' => class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\Error'; private $name = 'Error' }]; private $includes = []; private $functions = []; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }]; private $typeContext = NULL; private $project = class phpDocumentor\Reflection\Php\Project { private $name = 'Untitled project'; private $rootNamespace = class phpDocumentor\Reflection\Php\Namespace_ { private $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\'; private $name = '' }; private $functions = []; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $metadata = [] }; private $files = ['tag/basic/abstract.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '25383ef3973570a805774c93039c30e6'; private $name = 'abstract.php'; private $path = 'tag/basic/abstract.php'; private $source = '<?php\r\n/**\r\n * 这是abstract的标签示例\r\n * \r\n * 如果类中有最少一个抽象方法的话，那么类应该被声明为抽象类\r\n * 但是生成的文档里面没有此类为抽象类的说明\r\n */\r\n\r\nabstract class AbstractClass\r\n{\r\n    /**\r\n    * 这是一个抽象方法a\r\n    *\r\n    * @abstract\r\n    */\r\n    abstract function abstractFunc1(){}\r\n\r\n    /**\r\n    * 这是一个普通的方法b\r\n    */\r\n    function abstractFunc2(){}\r\n\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\AbstractClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/author.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是author标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = 'd9e361a09ccde31989ccb20e88a67911'; private $name = 'author.php'; private $path = 'tag/basic/author.php'; private $source = '<?php\r\n/**\r\n * 这是author标签示例\r\n * \r\n * 此标签看起来没什么作用\r\n * 当前为page示例\r\n * 此标签可以用于任何需要标记的元素上\r\n * (global variable, include, constant, function, define, class, variable, method, page)\r\n * \r\n * @author honece <china_zhz@year.net>\r\n */\r\n/**\r\n * 当前为function示例\r\n * \r\n * 此函数可能由另一个作者编写\r\n * @author honece No.2\r\n */\r\nfunction authorFunc(){}'; private $namespaces = []; private $includes = []; private $functions = ['\authorFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/category.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '548c7434eede46236d937df49eb48948'; private $name = 'category.php'; private $path = 'tag/basic/category.php'; private $source = '<?php\r\n/**\r\n * 这是category的标签示例\r\n * \r\n * 这是声明类别的示例\r\n * 看起来没有什么作用\r\n * @category mycategory\r\n */\r\n\r\nfunction categoryFunc()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = []; private $includes = []; private $functions = ['\categoryFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/copyright.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '2b678c2b48219fe173c62f57864f2525'; private $name = 'copyright.php'; private $path = 'tag/basic/copyright.php'; private $source = '<?php\r\n/**\r\n * 这是copyright的标签示例\r\n * \r\n * 用来声明版权，看起来没什么作用\r\n * 当前为页面级文档块\r\n * @copyright Copyright (c) 2023, honece\r\n */\r\nfunction copyrightFunc(){}\r\n'; private $namespaces = []; private $includes = []; private $functions = ['\copyrightFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/deprecated.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '17d32066e871d9fc63297cfd57169977'; private $name = 'deprecated.php'; private $path = 'tag/basic/deprecated.php'; private $source = '<?php\r\n/**\r\n * 这是deprecated标签示例\r\n * \r\n * 当前为class级文档块，\r\n * 此标记可用于page级文档块之外的文档块\r\n */\r\nclass DeprecatedClass\r\n{\r\n    /**\r\n     * @deprecated <0.1.0> a方法自0.1.0版本已弃用\r\n     */\r\n    function deprecatedFunc(){}\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\DeprecatedClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/example.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '8bb87bb5e2cc319aae956131058b2c05'; private $name = 'example.php'; private $path = 'tag/basic/example.php'; private $source = '<?php\r\n/**\r\n* 这是example标签示例\r\n*\r\n* 这个标签应该弃用了，没看到作用\r\n* @example /tag/inline/example.php 这是此标签内联用法\r\n* @example example.php 此示例为当前目录文件\r\n*/\r\nfunction exampleFunc(){}'; private $namespaces = []; private $includes = []; private $functions = ['\exampleFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/filesource.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是filesource标签的示例代码'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = '6855239bc05bb284fa5bac07c3b0ae74'; private $name = 'filesource.php'; private $path = 'tag/basic/filesource.php'; private $source = '<?php\r\n/**\r\n * 这是filesource标签的示例代码\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 作用就是给当前文件创建一个链接并显示源代码\r\n * @filesource\r\n */\r\necho "filesource";'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/final.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'd5f20945a818b3c642fdab441d2ab021'; private $name = 'final.php'; private $path = 'tag/basic/final.php'; private $source = '<?php\r\n/**\r\n * 这是final标签的示例\r\n * 此标签已无效，作用就是字面意思\r\n */\r\n\r\nclass FinalClass\r\n{\r\n    /**\r\n     * @final\r\n     */\r\n    final function finalFunc()\r\n    {\r\n    }\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\FinalClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/global.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是global标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = '4d282567fbbd0bb8bd3806a7c8d48ac4'; private $name = 'global.php'; private $path = 'tag/basic/global.php'; private $source = '<?php\r\n/**\r\n * 这是global标签示例\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 主要用于记录全局变量的用法\r\n * 建议直接声明在定义全局变量的上一行，以免引发放在错误的作用域内不识别的错误\r\n */\r\n\r\n/** \r\n * @global mixed $_GLOBALS["myvar"] \r\n */\r\n$_GLOBALS["myvar"] = array("this" => \'工作正常\');\r\n\r\n\r\n\r\n/**\r\n * 将@name与@global一起使用的示例\r\n * 在@name标签中，name必须有$,否则将引发错误\r\n * @global array $GLOBALS[\'ne'...; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/ignore.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是ignore标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = 'b8c7f25d8710acdd4997bf8b9cf326f5'; private $name = 'ignore.php'; private $path = 'tag/basic/ignore.php'; private $source = '<?php\r\n/**\r\n * 这是ignore标签示例\r\n * \r\n * 这个标签应该被弃用了，没看到作用\r\n * 此标签用于组织phpdoc记录元素\r\n */\r\n\r\nif ($ostest) {\r\n    /**\r\n     * This define will either be \'Unix\' or \'Windows\'\r\n     */\r\n    define("OS", "Unix");\r\n}\r\nelse {\r\n    /**\r\n     * @ignore 这里是忽略的常量\r\n     */\r\n    define("OS", "Windows");\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = ['\OS' => class phpDocumentor\Reflection\Php\Constant { ... }]; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/internal.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '7c4ee7a472406e48a31b52a38228e7b8'; private $name = 'internal.php'; private $path = 'tag/basic/internal.php'; private $source = '<?php\r\n/**\r\n * 这是internal标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签可以生成两份文档，官方说是phpdoc最有用的功能之一\r\n * {@internal 要访问有关修改此类的指南,见 {@link http://www.baidu.com 指南},或联系你的主管}}}\r\n * @internal 该类使用私有方法 {@link _foo()} 和 {@link _bar()} 做一些事情\r\n */\r\n\r\nclass InternalClass\r\n{\r\n    private function _foo()\r\n    {\r\n    }\r\n    private function _bar()\r\n    {\r\n    }\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\InternalClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/license.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '614a33e8f17827aa988341b4f193b49f'; private $name = 'license.php'; private $path = 'tag/basic/license.php'; private $source = '<?php\r\n/**\r\n * 这是license标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签用于向用户提示适用于此文档块的许可证\r\n * 展示指向许可证URL的超链接，个人只建议放在文件级别的文档块中\r\n * @license http://www.apache.org/licenses/LICENSE-2.0 Apache2.0\r\n */\r\n\r\nclass LicenseClass\r\n{\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\LicenseClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/link.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是link标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = '9c13e13e5c3217f8f2e974c4dfce67a5'; private $name = 'link.php'; private $path = 'tag/basic/link.php'; private $source = '<?php\r\n/**\r\n * 这是link标签示例\r\n * @link http://www.baidu.com 详情找百度\r\n */\r\n\r\n /**\r\n  * @link https://www.ietf.org/rfc/rfc2396.txt RFC2396\r\n  */\r\n define("TEST_CONSTANT2",3);\r\n'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = ['\TEST_CONSTANT2' => class phpDocumentor\Reflection\Php\Constant { ... }]; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/method.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '445eba76dd6b5f15c3fcc343ef10bcf9'; private $name = 'method.php'; private $path = 'tag/basic/method.php'; private $source = '<?php\r\n/**\r\n * 这是method标签示例\r\n * \r\n * 官方给出的定义是，要在子类中声明父类使用魔术方法来实现的一些非显示存在方法\r\n * \r\n * @method return echo2(string $string) 打印带有换行符的字符串\r\n */\r\nclass MethodClass extends Father{}\r\n\r\nclass Father\r\n{\r\n    function __call($method, string $params)\r\n    {\r\n        if ($method == \'echo2\') {\r\n            echo $params . PHP_EOL;\r\n        }\r\n    }\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\MethodClass' => class phpDocumentor\Reflection\Php\Class_ { ... }, '\Father' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/name.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是name标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = 'd9019fefa63635ac09f7bb2b6f7c6cba'; private $name = 'name.php'; private $path = 'tag/basic/name.php'; private $source = '<?php\r\n/**\r\n * 这是name标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n */\r\n\r\n/**\r\n * 当在函数中使用@global时，它将链接到$baz\r\n * @global array $GLOBALS[\'baz\'] \r\n */\r\n$GLOBALS[\'baz\'] = array(\'foo\', \'bar\');\r\n\r\n/**\r\n * @global array used for stuff\r\n */\r\nfunction name()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = []; private $includes = []; private $functions = ['\name()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/package.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是package标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = '9f03658e0d23226be1fcd8ca7f88ed8e'; private $name = 'package.php'; private $path = 'tag/basic/package.php'; private $source = '<?php\r\n/**\r\n * 这是package标签示例\r\n * \r\n * 页面级DocBlock示例。\r\n * 此DocBlock位于另一个DocBlock之前，将被解析为页面级别。\r\n * 将您的@package和@subpackage标记放在此处\r\n * @package packageTest\r\n */\r\n\r\n/**\r\n * function bluh\r\n */\r\nfunction bluh()\r\n{\r\n}\r\n?>\r\n<?php\r\n/**\r\n* 类 PackageClass\r\n*\r\n* 类级DocBlock示例。以下示例代表packageTestSub包在packageTest内,\r\n* 需要注意下划线[_]也会被解析成包分割符\r\n* @package packageTest\\packageTestSub \r\n*/'...; private $namespaces = []; private $includes = []; private $functions = ['\bluh()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = ['\PackageClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/param.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是param标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = '9b7e83cee7e212b7bdaabae8ecc456f4'; private $name = 'param.php'; private $path = 'tag/basic/param.php'; private $source = '<?php\r\n/**\r\n * 这是param标签示例\r\n * \r\n * 声明方法传入的参数\r\n */\r\n\r\n /**\r\n  * @param int $b 你需要传入一个整数型的变量\r\n  */\r\n function parmFunc(int $b){}'; private $namespaces = []; private $includes = []; private $functions = ['\parmFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/property.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'a1d1498b932fe0c2a140120d62e3411c'; private $name = 'property.php'; private $path = 'tag/basic/property.php'; private $source = '<?php\r\n/**\r\n * 这是property包括它的变体[property-read | property-write]标签示例\r\n *\r\n * @property mixed $regular 声明常规的读写属性\r\n * @property-read int $foo 声明只读\r\n * @property-write string $bar 声明只写\r\n */\r\n\r\nclass PropertyClass\r\n{\r\n    private $_thingy;\r\n    private $_bar;\r\n    function __get($var)\r\n    {\r\n        switch ($var) {\r\n            case \'foo\':\r\n                return 45;\r\n            case \'regular\':\r\n                return $this->_thingy;\r\n        }\r\n    }\r\n'...; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\PropertyClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/return.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '845265a10a560b5a5359f1882513c161'; private $name = 'return.php'; private $path = 'tag/basic/return.php'; private $source = '<?php\r\n/**\r\n * 这是return标签示例\r\n * \r\n * 这个标签用于标记方法或函数的返回值和返回内容\r\n * @return int 这里会返回一个整数类型的数字\r\n */\r\nfunction returnFunc($param)\r\n{\r\n    $b = (int) $param;\r\n    return $b;\r\n}'; private $namespaces = []; private $includes = []; private $functions = ['\returnFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }]; private $namespaces = [] } }, $nodes = [0 => class PhpParser\Node\Stmt\Namespace_ { public $name = class PhpParser\Node\Name { public $parts = [0 => 'Error']; protected $attributes = ['startLine' => 2, 'endLine' => 2] }; public $stmts = [0 => class PhpParser\Node\Stmt\Class_ { public $flags = 0; public $extends = NULL; public $implements = []; public $name = class PhpParser\Node\Identifier { public $name = 'SeeFather'; protected $attributes = [...] }; public $stmts = [0 => class PhpParser\Node\Stmt\Property { ... }, 1 => class PhpParser\Node\Stmt\ClassMethod { ... }]; public $attrGroups = []; protected $attributes = ['startLine' => 10, 'comments' => [...], 'endLine' => 29]; public $namespacedName = class PhpParser\Node\Name { public $parts = [...]; protected $attributes = [...] }; public $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\Error\\SeeFather'; private $name = 'SeeFather' } }, 1 => class PhpParser\Node\Stmt\Class_ { public $flags = 0; public $extends = class PhpParser\Node\Name\FullyQualified { public $parts = [...]; protected $attributes = [...] }; public $implements = []; public $name = class PhpParser\Node\Identifier { public $name = 'SeeChild'; protected $attributes = [...] }; public $stmts = [0 => class PhpParser\Node\Stmt\Property { ... }]; public $attrGroups = []; protected $attributes = ['startLine' => 36, 'comments' => [...], 'endLine' => 43]; public $namespacedName = class PhpParser\Node\Name { public $parts = [...]; protected $attributes = [...] }; public $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\Error\\SeeChild'; private $name = 'SeeChild' } }, 2 => class PhpParser\Node\Stmt\Expression { public $expr = class PhpParser\Node\Expr\FuncCall { public $name = class PhpParser\Node\Name { ... }; public $args = [...]; protected $attributes = [...] }; protected $attributes = ['startLine' => 45, 'endLine' => 45] }]; protected $attributes = ['startLine' => 2, 'endLine' => 45, 'kind' => 1]; public $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\Error'; private $name = 'Error' } }], $strategies = class phpDocumentor\Reflection\Php\ProjectFactoryStrategies { private $strategies = class SplPriorityQueue {  } }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Php/Factory/File.php:120
    3.7756   23415496  40. phpDocumentor\Reflection\Php\Factory\Namespace_->create($context = class phpDocumentor\Reflection\Php\Factory\ContextStack { private $elements = [0 => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '6dac94f657aab7c202434e3e9eb75c7d'; private $name = 'see.php'; private $path = 'tag/basic/see.php'; private $source = '<?php\r\nnamespace Error;\r\n\r\n/**\r\n * 这是return标签示例\r\n * \r\n * 此标签用于链接到文档内的任何元素，也可以给指定的{@see https://www.ietf.org/rfc/rfc2396.txt <URI>}\r\n * @see SeeChild->method()\r\n */\r\nclass SeeFather\r\n{\r\n    /**\r\n     * 链接到同一类的示例，输出<u>Father:：parent_method()</u>\r\n     * @see parent_method()\r\n     */\r\n    var $foo = 3;\r\n\r\n    /**\r\n     * 子类继承此方法。\r\n     * 常量或类名的单词示例，在本例中为类名\r\n     * @see SeeCh'...; private $namespaces = ['\Error' => class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\Error'; private $name = 'Error' }]; private $includes = []; private $functions = []; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }]; private $typeContext = NULL; private $project = class phpDocumentor\Reflection\Php\Project { private $name = 'Untitled project'; private $rootNamespace = class phpDocumentor\Reflection\Php\Namespace_ { private $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\'; private $name = '' }; private $functions = []; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $metadata = [] }; private $files = ['tag/basic/abstract.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '25383ef3973570a805774c93039c30e6'; private $name = 'abstract.php'; private $path = 'tag/basic/abstract.php'; private $source = '<?php\r\n/**\r\n * 这是abstract的标签示例\r\n * \r\n * 如果类中有最少一个抽象方法的话，那么类应该被声明为抽象类\r\n * 但是生成的文档里面没有此类为抽象类的说明\r\n */\r\n\r\nabstract class AbstractClass\r\n{\r\n    /**\r\n    * 这是一个抽象方法a\r\n    *\r\n    * @abstract\r\n    */\r\n    abstract function abstractFunc1(){}\r\n\r\n    /**\r\n    * 这是一个普通的方法b\r\n    */\r\n    function abstractFunc2(){}\r\n\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\AbstractClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/author.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是author标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = 'd9e361a09ccde31989ccb20e88a67911'; private $name = 'author.php'; private $path = 'tag/basic/author.php'; private $source = '<?php\r\n/**\r\n * 这是author标签示例\r\n * \r\n * 此标签看起来没什么作用\r\n * 当前为page示例\r\n * 此标签可以用于任何需要标记的元素上\r\n * (global variable, include, constant, function, define, class, variable, method, page)\r\n * \r\n * @author honece <china_zhz@year.net>\r\n */\r\n/**\r\n * 当前为function示例\r\n * \r\n * 此函数可能由另一个作者编写\r\n * @author honece No.2\r\n */\r\nfunction authorFunc(){}'; private $namespaces = []; private $includes = []; private $functions = ['\authorFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/category.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '548c7434eede46236d937df49eb48948'; private $name = 'category.php'; private $path = 'tag/basic/category.php'; private $source = '<?php\r\n/**\r\n * 这是category的标签示例\r\n * \r\n * 这是声明类别的示例\r\n * 看起来没有什么作用\r\n * @category mycategory\r\n */\r\n\r\nfunction categoryFunc()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = []; private $includes = []; private $functions = ['\categoryFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/copyright.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '2b678c2b48219fe173c62f57864f2525'; private $name = 'copyright.php'; private $path = 'tag/basic/copyright.php'; private $source = '<?php\r\n/**\r\n * 这是copyright的标签示例\r\n * \r\n * 用来声明版权，看起来没什么作用\r\n * 当前为页面级文档块\r\n * @copyright Copyright (c) 2023, honece\r\n */\r\nfunction copyrightFunc(){}\r\n'; private $namespaces = []; private $includes = []; private $functions = ['\copyrightFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/deprecated.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '17d32066e871d9fc63297cfd57169977'; private $name = 'deprecated.php'; private $path = 'tag/basic/deprecated.php'; private $source = '<?php\r\n/**\r\n * 这是deprecated标签示例\r\n * \r\n * 当前为class级文档块，\r\n * 此标记可用于page级文档块之外的文档块\r\n */\r\nclass DeprecatedClass\r\n{\r\n    /**\r\n     * @deprecated <0.1.0> a方法自0.1.0版本已弃用\r\n     */\r\n    function deprecatedFunc(){}\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\DeprecatedClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/example.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '8bb87bb5e2cc319aae956131058b2c05'; private $name = 'example.php'; private $path = 'tag/basic/example.php'; private $source = '<?php\r\n/**\r\n* 这是example标签示例\r\n*\r\n* 这个标签应该弃用了，没看到作用\r\n* @example /tag/inline/example.php 这是此标签内联用法\r\n* @example example.php 此示例为当前目录文件\r\n*/\r\nfunction exampleFunc(){}'; private $namespaces = []; private $includes = []; private $functions = ['\exampleFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/filesource.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是filesource标签的示例代码'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = '6855239bc05bb284fa5bac07c3b0ae74'; private $name = 'filesource.php'; private $path = 'tag/basic/filesource.php'; private $source = '<?php\r\n/**\r\n * 这是filesource标签的示例代码\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 作用就是给当前文件创建一个链接并显示源代码\r\n * @filesource\r\n */\r\necho "filesource";'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/final.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'd5f20945a818b3c642fdab441d2ab021'; private $name = 'final.php'; private $path = 'tag/basic/final.php'; private $source = '<?php\r\n/**\r\n * 这是final标签的示例\r\n * 此标签已无效，作用就是字面意思\r\n */\r\n\r\nclass FinalClass\r\n{\r\n    /**\r\n     * @final\r\n     */\r\n    final function finalFunc()\r\n    {\r\n    }\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\FinalClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/global.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是global标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = '4d282567fbbd0bb8bd3806a7c8d48ac4'; private $name = 'global.php'; private $path = 'tag/basic/global.php'; private $source = '<?php\r\n/**\r\n * 这是global标签示例\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 主要用于记录全局变量的用法\r\n * 建议直接声明在定义全局变量的上一行，以免引发放在错误的作用域内不识别的错误\r\n */\r\n\r\n/** \r\n * @global mixed $_GLOBALS["myvar"] \r\n */\r\n$_GLOBALS["myvar"] = array("this" => \'工作正常\');\r\n\r\n\r\n\r\n/**\r\n * 将@name与@global一起使用的示例\r\n * 在@name标签中，name必须有$,否则将引发错误\r\n * @global array $GLOBALS[\'ne'...; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/ignore.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是ignore标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = 'b8c7f25d8710acdd4997bf8b9cf326f5'; private $name = 'ignore.php'; private $path = 'tag/basic/ignore.php'; private $source = '<?php\r\n/**\r\n * 这是ignore标签示例\r\n * \r\n * 这个标签应该被弃用了，没看到作用\r\n * 此标签用于组织phpdoc记录元素\r\n */\r\n\r\nif ($ostest) {\r\n    /**\r\n     * This define will either be \'Unix\' or \'Windows\'\r\n     */\r\n    define("OS", "Unix");\r\n}\r\nelse {\r\n    /**\r\n     * @ignore 这里是忽略的常量\r\n     */\r\n    define("OS", "Windows");\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = ['\OS' => class phpDocumentor\Reflection\Php\Constant { ... }]; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/internal.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '7c4ee7a472406e48a31b52a38228e7b8'; private $name = 'internal.php'; private $path = 'tag/basic/internal.php'; private $source = '<?php\r\n/**\r\n * 这是internal标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签可以生成两份文档，官方说是phpdoc最有用的功能之一\r\n * {@internal 要访问有关修改此类的指南,见 {@link http://www.baidu.com 指南},或联系你的主管}}}\r\n * @internal 该类使用私有方法 {@link _foo()} 和 {@link _bar()} 做一些事情\r\n */\r\n\r\nclass InternalClass\r\n{\r\n    private function _foo()\r\n    {\r\n    }\r\n    private function _bar()\r\n    {\r\n    }\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\InternalClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/license.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '614a33e8f17827aa988341b4f193b49f'; private $name = 'license.php'; private $path = 'tag/basic/license.php'; private $source = '<?php\r\n/**\r\n * 这是license标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签用于向用户提示适用于此文档块的许可证\r\n * 展示指向许可证URL的超链接，个人只建议放在文件级别的文档块中\r\n * @license http://www.apache.org/licenses/LICENSE-2.0 Apache2.0\r\n */\r\n\r\nclass LicenseClass\r\n{\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\LicenseClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/link.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是link标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = '9c13e13e5c3217f8f2e974c4dfce67a5'; private $name = 'link.php'; private $path = 'tag/basic/link.php'; private $source = '<?php\r\n/**\r\n * 这是link标签示例\r\n * @link http://www.baidu.com 详情找百度\r\n */\r\n\r\n /**\r\n  * @link https://www.ietf.org/rfc/rfc2396.txt RFC2396\r\n  */\r\n define("TEST_CONSTANT2",3);\r\n'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = ['\TEST_CONSTANT2' => class phpDocumentor\Reflection\Php\Constant { ... }]; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/method.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '445eba76dd6b5f15c3fcc343ef10bcf9'; private $name = 'method.php'; private $path = 'tag/basic/method.php'; private $source = '<?php\r\n/**\r\n * 这是method标签示例\r\n * \r\n * 官方给出的定义是，要在子类中声明父类使用魔术方法来实现的一些非显示存在方法\r\n * \r\n * @method return echo2(string $string) 打印带有换行符的字符串\r\n */\r\nclass MethodClass extends Father{}\r\n\r\nclass Father\r\n{\r\n    function __call($method, string $params)\r\n    {\r\n        if ($method == \'echo2\') {\r\n            echo $params . PHP_EOL;\r\n        }\r\n    }\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\MethodClass' => class phpDocumentor\Reflection\Php\Class_ { ... }, '\Father' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/name.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是name标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = 'd9019fefa63635ac09f7bb2b6f7c6cba'; private $name = 'name.php'; private $path = 'tag/basic/name.php'; private $source = '<?php\r\n/**\r\n * 这是name标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n */\r\n\r\n/**\r\n * 当在函数中使用@global时，它将链接到$baz\r\n * @global array $GLOBALS[\'baz\'] \r\n */\r\n$GLOBALS[\'baz\'] = array(\'foo\', \'bar\');\r\n\r\n/**\r\n * @global array used for stuff\r\n */\r\nfunction name()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = []; private $includes = []; private $functions = ['\name()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/package.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是package标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = '9f03658e0d23226be1fcd8ca7f88ed8e'; private $name = 'package.php'; private $path = 'tag/basic/package.php'; private $source = '<?php\r\n/**\r\n * 这是package标签示例\r\n * \r\n * 页面级DocBlock示例。\r\n * 此DocBlock位于另一个DocBlock之前，将被解析为页面级别。\r\n * 将您的@package和@subpackage标记放在此处\r\n * @package packageTest\r\n */\r\n\r\n/**\r\n * function bluh\r\n */\r\nfunction bluh()\r\n{\r\n}\r\n?>\r\n<?php\r\n/**\r\n* 类 PackageClass\r\n*\r\n* 类级DocBlock示例。以下示例代表packageTestSub包在packageTest内,\r\n* 需要注意下划线[_]也会被解析成包分割符\r\n* @package packageTest\\packageTestSub \r\n*/'...; private $namespaces = []; private $includes = []; private $functions = ['\bluh()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = ['\PackageClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/param.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是param标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = '9b7e83cee7e212b7bdaabae8ecc456f4'; private $name = 'param.php'; private $path = 'tag/basic/param.php'; private $source = '<?php\r\n/**\r\n * 这是param标签示例\r\n * \r\n * 声明方法传入的参数\r\n */\r\n\r\n /**\r\n  * @param int $b 你需要传入一个整数型的变量\r\n  */\r\n function parmFunc(int $b){}'; private $namespaces = []; private $includes = []; private $functions = ['\parmFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/property.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'a1d1498b932fe0c2a140120d62e3411c'; private $name = 'property.php'; private $path = 'tag/basic/property.php'; private $source = '<?php\r\n/**\r\n * 这是property包括它的变体[property-read | property-write]标签示例\r\n *\r\n * @property mixed $regular 声明常规的读写属性\r\n * @property-read int $foo 声明只读\r\n * @property-write string $bar 声明只写\r\n */\r\n\r\nclass PropertyClass\r\n{\r\n    private $_thingy;\r\n    private $_bar;\r\n    function __get($var)\r\n    {\r\n        switch ($var) {\r\n            case \'foo\':\r\n                return 45;\r\n            case \'regular\':\r\n                return $this->_thingy;\r\n        }\r\n    }\r\n'...; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\PropertyClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/return.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '845265a10a560b5a5359f1882513c161'; private $name = 'return.php'; private $path = 'tag/basic/return.php'; private $source = '<?php\r\n/**\r\n * 这是return标签示例\r\n * \r\n * 这个标签用于标记方法或函数的返回值和返回内容\r\n * @return int 这里会返回一个整数类型的数字\r\n */\r\nfunction returnFunc($param)\r\n{\r\n    $b = (int) $param;\r\n    return $b;\r\n}'; private $namespaces = []; private $includes = []; private $functions = ['\returnFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }]; private $namespaces = [] } }, $object = class PhpParser\Node\Stmt\Namespace_ { public $name = class PhpParser\Node\Name { public $parts = [0 => 'Error']; protected $attributes = ['startLine' => 2, 'endLine' => 2] }; public $stmts = [0 => class PhpParser\Node\Stmt\Class_ { public $flags = 0; public $extends = NULL; public $implements = []; public $name = class PhpParser\Node\Identifier { public $name = 'SeeFather'; protected $attributes = ['startLine' => 10, 'endLine' => 10] }; public $stmts = [0 => class PhpParser\Node\Stmt\Property { public $flags = 0; public $props = [...]; public $type = NULL; public $attrGroups = [...]; protected $attributes = [...] }, 1 => class PhpParser\Node\Stmt\ClassMethod { public $flags = 0; public $byRef = FALSE; public $name = class PhpParser\Node\Identifier { ... }; public $params = [...]; public $returnType = NULL; public $stmts = [...]; public $attrGroups = [...]; protected $attributes = [...]; public $fqsen = class phpDocumentor\Reflection\Fqsen { ... } }]; public $attrGroups = []; protected $attributes = ['startLine' => 10, 'comments' => [0 => class PhpParser\Comment\Doc { ... }], 'endLine' => 29]; public $namespacedName = class PhpParser\Node\Name { public $parts = [0 => 'Error', 1 => 'SeeFather']; protected $attributes = [] }; public $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\Error\\SeeFather'; private $name = 'SeeFather' } }, 1 => class PhpParser\Node\Stmt\Class_ { public $flags = 0; public $extends = class PhpParser\Node\Name\FullyQualified { public $parts = [0 => 'Error', 1 => 'SeeFather']; protected $attributes = ['startLine' => 36, 'endLine' => 36] }; public $implements = []; public $name = class PhpParser\Node\Identifier { public $name = 'SeeChild'; protected $attributes = ['startLine' => 36, 'endLine' => 36] }; public $stmts = [0 => class PhpParser\Node\Stmt\Property { public $flags = 0; public $props = [...]; public $type = NULL; public $attrGroups = [...]; protected $attributes = [...] }]; public $attrGroups = []; protected $attributes = ['startLine' => 36, 'comments' => [0 => class PhpParser\Comment\Doc { ... }], 'endLine' => 43]; public $namespacedName = class PhpParser\Node\Name { public $parts = [0 => 'Error', 1 => 'SeeChild']; protected $attributes = [] }; public $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\Error\\SeeChild'; private $name = 'SeeChild' } }, 2 => class PhpParser\Node\Stmt\Expression { public $expr = class PhpParser\Node\Expr\FuncCall { public $name = class PhpParser\Node\Name { public $parts = [...]; protected $attributes = [...] }; public $args = [0 => class PhpParser\Node\Arg { ... }, 1 => class PhpParser\Node\Arg { ... }]; protected $attributes = ['startLine' => 45, 'endLine' => 45] }; protected $attributes = ['startLine' => 45, 'endLine' => 45] }]; protected $attributes = ['startLine' => 2, 'endLine' => 45, 'kind' => 1]; public $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\Error'; private $name = 'Error' } }, $strategies = class phpDocumentor\Reflection\Php\ProjectFactoryStrategies { private $strategies = class SplPriorityQueue {  } }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Php/Factory/File.php:135
    3.7873   23427352  41. phpDocumentor\Reflection\Php\Factory\AbstractFactory->create($context = class phpDocumentor\Reflection\Php\Factory\ContextStack { private $elements = [0 => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '6dac94f657aab7c202434e3e9eb75c7d'; private $name = 'see.php'; private $path = 'tag/basic/see.php'; private $source = '<?php\r\nnamespace Error;\r\n\r\n/**\r\n * 这是return标签示例\r\n * \r\n * 此标签用于链接到文档内的任何元素，也可以给指定的{@see https://www.ietf.org/rfc/rfc2396.txt <URI>}\r\n * @see SeeChild->method()\r\n */\r\nclass SeeFather\r\n{\r\n    /**\r\n     * 链接到同一类的示例，输出<u>Father:：parent_method()</u>\r\n     * @see parent_method()\r\n     */\r\n    var $foo = 3;\r\n\r\n    /**\r\n     * 子类继承此方法。\r\n     * 常量或类名的单词示例，在本例中为类名\r\n     * @see SeeCh'...; private $namespaces = ['\Error' => class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\Error'; private $name = 'Error' }]; private $includes = []; private $functions = []; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }]; private $typeContext = class phpDocumentor\Reflection\Types\Context { private $namespace = 'Error'; private $namespaceAliases = [] }; private $project = class phpDocumentor\Reflection\Php\Project { private $name = 'Untitled project'; private $rootNamespace = class phpDocumentor\Reflection\Php\Namespace_ { private $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\'; private $name = '' }; private $functions = []; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $metadata = [] }; private $files = ['tag/basic/abstract.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '25383ef3973570a805774c93039c30e6'; private $name = 'abstract.php'; private $path = 'tag/basic/abstract.php'; private $source = '<?php\r\n/**\r\n * 这是abstract的标签示例\r\n * \r\n * 如果类中有最少一个抽象方法的话，那么类应该被声明为抽象类\r\n * 但是生成的文档里面没有此类为抽象类的说明\r\n */\r\n\r\nabstract class AbstractClass\r\n{\r\n    /**\r\n    * 这是一个抽象方法a\r\n    *\r\n    * @abstract\r\n    */\r\n    abstract function abstractFunc1(){}\r\n\r\n    /**\r\n    * 这是一个普通的方法b\r\n    */\r\n    function abstractFunc2(){}\r\n\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\AbstractClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/author.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是author标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = 'd9e361a09ccde31989ccb20e88a67911'; private $name = 'author.php'; private $path = 'tag/basic/author.php'; private $source = '<?php\r\n/**\r\n * 这是author标签示例\r\n * \r\n * 此标签看起来没什么作用\r\n * 当前为page示例\r\n * 此标签可以用于任何需要标记的元素上\r\n * (global variable, include, constant, function, define, class, variable, method, page)\r\n * \r\n * @author honece <china_zhz@year.net>\r\n */\r\n/**\r\n * 当前为function示例\r\n * \r\n * 此函数可能由另一个作者编写\r\n * @author honece No.2\r\n */\r\nfunction authorFunc(){}'; private $namespaces = []; private $includes = []; private $functions = ['\authorFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/category.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '548c7434eede46236d937df49eb48948'; private $name = 'category.php'; private $path = 'tag/basic/category.php'; private $source = '<?php\r\n/**\r\n * 这是category的标签示例\r\n * \r\n * 这是声明类别的示例\r\n * 看起来没有什么作用\r\n * @category mycategory\r\n */\r\n\r\nfunction categoryFunc()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = []; private $includes = []; private $functions = ['\categoryFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/copyright.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '2b678c2b48219fe173c62f57864f2525'; private $name = 'copyright.php'; private $path = 'tag/basic/copyright.php'; private $source = '<?php\r\n/**\r\n * 这是copyright的标签示例\r\n * \r\n * 用来声明版权，看起来没什么作用\r\n * 当前为页面级文档块\r\n * @copyright Copyright (c) 2023, honece\r\n */\r\nfunction copyrightFunc(){}\r\n'; private $namespaces = []; private $includes = []; private $functions = ['\copyrightFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/deprecated.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '17d32066e871d9fc63297cfd57169977'; private $name = 'deprecated.php'; private $path = 'tag/basic/deprecated.php'; private $source = '<?php\r\n/**\r\n * 这是deprecated标签示例\r\n * \r\n * 当前为class级文档块，\r\n * 此标记可用于page级文档块之外的文档块\r\n */\r\nclass DeprecatedClass\r\n{\r\n    /**\r\n     * @deprecated <0.1.0> a方法自0.1.0版本已弃用\r\n     */\r\n    function deprecatedFunc(){}\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\DeprecatedClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/example.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '8bb87bb5e2cc319aae956131058b2c05'; private $name = 'example.php'; private $path = 'tag/basic/example.php'; private $source = '<?php\r\n/**\r\n* 这是example标签示例\r\n*\r\n* 这个标签应该弃用了，没看到作用\r\n* @example /tag/inline/example.php 这是此标签内联用法\r\n* @example example.php 此示例为当前目录文件\r\n*/\r\nfunction exampleFunc(){}'; private $namespaces = []; private $includes = []; private $functions = ['\exampleFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/filesource.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是filesource标签的示例代码'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = '6855239bc05bb284fa5bac07c3b0ae74'; private $name = 'filesource.php'; private $path = 'tag/basic/filesource.php'; private $source = '<?php\r\n/**\r\n * 这是filesource标签的示例代码\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 作用就是给当前文件创建一个链接并显示源代码\r\n * @filesource\r\n */\r\necho "filesource";'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/final.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'd5f20945a818b3c642fdab441d2ab021'; private $name = 'final.php'; private $path = 'tag/basic/final.php'; private $source = '<?php\r\n/**\r\n * 这是final标签的示例\r\n * 此标签已无效，作用就是字面意思\r\n */\r\n\r\nclass FinalClass\r\n{\r\n    /**\r\n     * @final\r\n     */\r\n    final function finalFunc()\r\n    {\r\n    }\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\FinalClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/global.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是global标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = '4d282567fbbd0bb8bd3806a7c8d48ac4'; private $name = 'global.php'; private $path = 'tag/basic/global.php'; private $source = '<?php\r\n/**\r\n * 这是global标签示例\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 主要用于记录全局变量的用法\r\n * 建议直接声明在定义全局变量的上一行，以免引发放在错误的作用域内不识别的错误\r\n */\r\n\r\n/** \r\n * @global mixed $_GLOBALS["myvar"] \r\n */\r\n$_GLOBALS["myvar"] = array("this" => \'工作正常\');\r\n\r\n\r\n\r\n/**\r\n * 将@name与@global一起使用的示例\r\n * 在@name标签中，name必须有$,否则将引发错误\r\n * @global array $GLOBALS[\'ne'...; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/ignore.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是ignore标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = 'b8c7f25d8710acdd4997bf8b9cf326f5'; private $name = 'ignore.php'; private $path = 'tag/basic/ignore.php'; private $source = '<?php\r\n/**\r\n * 这是ignore标签示例\r\n * \r\n * 这个标签应该被弃用了，没看到作用\r\n * 此标签用于组织phpdoc记录元素\r\n */\r\n\r\nif ($ostest) {\r\n    /**\r\n     * This define will either be \'Unix\' or \'Windows\'\r\n     */\r\n    define("OS", "Unix");\r\n}\r\nelse {\r\n    /**\r\n     * @ignore 这里是忽略的常量\r\n     */\r\n    define("OS", "Windows");\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = ['\OS' => class phpDocumentor\Reflection\Php\Constant { ... }]; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/internal.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '7c4ee7a472406e48a31b52a38228e7b8'; private $name = 'internal.php'; private $path = 'tag/basic/internal.php'; private $source = '<?php\r\n/**\r\n * 这是internal标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签可以生成两份文档，官方说是phpdoc最有用的功能之一\r\n * {@internal 要访问有关修改此类的指南,见 {@link http://www.baidu.com 指南},或联系你的主管}}}\r\n * @internal 该类使用私有方法 {@link _foo()} 和 {@link _bar()} 做一些事情\r\n */\r\n\r\nclass InternalClass\r\n{\r\n    private function _foo()\r\n    {\r\n    }\r\n    private function _bar()\r\n    {\r\n    }\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\InternalClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/license.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '614a33e8f17827aa988341b4f193b49f'; private $name = 'license.php'; private $path = 'tag/basic/license.php'; private $source = '<?php\r\n/**\r\n * 这是license标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签用于向用户提示适用于此文档块的许可证\r\n * 展示指向许可证URL的超链接，个人只建议放在文件级别的文档块中\r\n * @license http://www.apache.org/licenses/LICENSE-2.0 Apache2.0\r\n */\r\n\r\nclass LicenseClass\r\n{\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\LicenseClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/link.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是link标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = '9c13e13e5c3217f8f2e974c4dfce67a5'; private $name = 'link.php'; private $path = 'tag/basic/link.php'; private $source = '<?php\r\n/**\r\n * 这是link标签示例\r\n * @link http://www.baidu.com 详情找百度\r\n */\r\n\r\n /**\r\n  * @link https://www.ietf.org/rfc/rfc2396.txt RFC2396\r\n  */\r\n define("TEST_CONSTANT2",3);\r\n'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = ['\TEST_CONSTANT2' => class phpDocumentor\Reflection\Php\Constant { ... }]; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/method.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '445eba76dd6b5f15c3fcc343ef10bcf9'; private $name = 'method.php'; private $path = 'tag/basic/method.php'; private $source = '<?php\r\n/**\r\n * 这是method标签示例\r\n * \r\n * 官方给出的定义是，要在子类中声明父类使用魔术方法来实现的一些非显示存在方法\r\n * \r\n * @method return echo2(string $string) 打印带有换行符的字符串\r\n */\r\nclass MethodClass extends Father{}\r\n\r\nclass Father\r\n{\r\n    function __call($method, string $params)\r\n    {\r\n        if ($method == \'echo2\') {\r\n            echo $params . PHP_EOL;\r\n        }\r\n    }\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\MethodClass' => class phpDocumentor\Reflection\Php\Class_ { ... }, '\Father' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/name.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是name标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = 'd9019fefa63635ac09f7bb2b6f7c6cba'; private $name = 'name.php'; private $path = 'tag/basic/name.php'; private $source = '<?php\r\n/**\r\n * 这是name标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n */\r\n\r\n/**\r\n * 当在函数中使用@global时，它将链接到$baz\r\n * @global array $GLOBALS[\'baz\'] \r\n */\r\n$GLOBALS[\'baz\'] = array(\'foo\', \'bar\');\r\n\r\n/**\r\n * @global array used for stuff\r\n */\r\nfunction name()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = []; private $includes = []; private $functions = ['\name()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/package.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是package标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = '9f03658e0d23226be1fcd8ca7f88ed8e'; private $name = 'package.php'; private $path = 'tag/basic/package.php'; private $source = '<?php\r\n/**\r\n * 这是package标签示例\r\n * \r\n * 页面级DocBlock示例。\r\n * 此DocBlock位于另一个DocBlock之前，将被解析为页面级别。\r\n * 将您的@package和@subpackage标记放在此处\r\n * @package packageTest\r\n */\r\n\r\n/**\r\n * function bluh\r\n */\r\nfunction bluh()\r\n{\r\n}\r\n?>\r\n<?php\r\n/**\r\n* 类 PackageClass\r\n*\r\n* 类级DocBlock示例。以下示例代表packageTestSub包在packageTest内,\r\n* 需要注意下划线[_]也会被解析成包分割符\r\n* @package packageTest\\packageTestSub \r\n*/'...; private $namespaces = []; private $includes = []; private $functions = ['\bluh()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = ['\PackageClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/param.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是param标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = '9b7e83cee7e212b7bdaabae8ecc456f4'; private $name = 'param.php'; private $path = 'tag/basic/param.php'; private $source = '<?php\r\n/**\r\n * 这是param标签示例\r\n * \r\n * 声明方法传入的参数\r\n */\r\n\r\n /**\r\n  * @param int $b 你需要传入一个整数型的变量\r\n  */\r\n function parmFunc(int $b){}'; private $namespaces = []; private $includes = []; private $functions = ['\parmFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/property.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'a1d1498b932fe0c2a140120d62e3411c'; private $name = 'property.php'; private $path = 'tag/basic/property.php'; private $source = '<?php\r\n/**\r\n * 这是property包括它的变体[property-read | property-write]标签示例\r\n *\r\n * @property mixed $regular 声明常规的读写属性\r\n * @property-read int $foo 声明只读\r\n * @property-write string $bar 声明只写\r\n */\r\n\r\nclass PropertyClass\r\n{\r\n    private $_thingy;\r\n    private $_bar;\r\n    function __get($var)\r\n    {\r\n        switch ($var) {\r\n            case \'foo\':\r\n                return 45;\r\n            case \'regular\':\r\n                return $this->_thingy;\r\n        }\r\n    }\r\n'...; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\PropertyClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/return.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '845265a10a560b5a5359f1882513c161'; private $name = 'return.php'; private $path = 'tag/basic/return.php'; private $source = '<?php\r\n/**\r\n * 这是return标签示例\r\n * \r\n * 这个标签用于标记方法或函数的返回值和返回内容\r\n * @return int 这里会返回一个整数类型的数字\r\n */\r\nfunction returnFunc($param)\r\n{\r\n    $b = (int) $param;\r\n    return $b;\r\n}'; private $namespaces = []; private $includes = []; private $functions = ['\returnFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }]; private $namespaces = [] } }, $object = class PhpParser\Node\Stmt\Class_ { public $flags = 0; public $extends = NULL; public $implements = []; public $name = class PhpParser\Node\Identifier { public $name = 'SeeFather'; protected $attributes = ['startLine' => 10, 'endLine' => 10] }; public $stmts = [0 => class PhpParser\Node\Stmt\Property { public $flags = 0; public $props = [0 => class PhpParser\Node\Stmt\PropertyProperty { public $name = class PhpParser\Node\VarLikeIdentifier { ... }; public $default = class PhpParser\Node\Scalar\LNumber { ... }; protected $attributes = [...]; public $fqsen = class phpDocumentor\Reflection\Fqsen { ... } }]; public $type = NULL; public $attrGroups = []; protected $attributes = ['startLine' => 16, 'comments' => [0 => class PhpParser\Comment\Doc { ... }], 'endLine' => 16] }, 1 => class PhpParser\Node\Stmt\ClassMethod { public $flags = 0; public $byRef = FALSE; public $name = class PhpParser\Node\Identifier { public $name = 'parent_method'; protected $attributes = ['startLine' => 24, 'endLine' => 24] }; public $params = []; public $returnType = NULL; public $stmts = [0 => class PhpParser\Node\Stmt\If_ { public $cond = class PhpParser\Node\Expr\BinaryOp\Equal { ... }; public $stmts = [...]; public $elseifs = [...]; public $else = NULL; protected $attributes = [...] }]; public $attrGroups = []; protected $attributes = ['startLine' => 24, 'comments' => [0 => class PhpParser\Comment\Doc { ... }], 'endLine' => 28]; public $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\Error\\SeeFather::parent_method()'; private $name = 'parent_method' } }]; public $attrGroups = []; protected $attributes = ['startLine' => 10, 'comments' => [0 => class PhpParser\Comment\Doc { protected $text = '/**\r\n * 这是return标签示例\r\n * \r\n * 此标签用于链接到文档内的任何元素，也可以给指定的{@see https://www.ietf.org/rfc/rfc2396.txt <URI>}\r\n * @see SeeChild->method()\r\n */'; protected $startLine = 4; protected $startFilePos = 27; protected $startTokenPos = 6; protected $endLine = 9; protected $endFilePos = 222; protected $endTokenPos = 6 }], 'endLine' => 29]; public $namespacedName = class PhpParser\Node\Name { public $parts = [0 => 'Error', 1 => 'SeeFather']; protected $attributes = [] }; public $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\Error\\SeeFather'; private $name = 'SeeFather' } }, $strategies = class phpDocumentor\Reflection\Php\ProjectFactoryStrategies { private $strategies = class SplPriorityQueue {  } }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Php/Factory/Namespace_.php:49
    3.7881   23427728  42. phpDocumentor\Reflection\Php\Factory\Class_->doCreate($context = class phpDocumentor\Reflection\Php\Factory\ContextStack { private $elements = [0 => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '6dac94f657aab7c202434e3e9eb75c7d'; private $name = 'see.php'; private $path = 'tag/basic/see.php'; private $source = '<?php\r\nnamespace Error;\r\n\r\n/**\r\n * 这是return标签示例\r\n * \r\n * 此标签用于链接到文档内的任何元素，也可以给指定的{@see https://www.ietf.org/rfc/rfc2396.txt <URI>}\r\n * @see SeeChild->method()\r\n */\r\nclass SeeFather\r\n{\r\n    /**\r\n     * 链接到同一类的示例，输出<u>Father:：parent_method()</u>\r\n     * @see parent_method()\r\n     */\r\n    var $foo = 3;\r\n\r\n    /**\r\n     * 子类继承此方法。\r\n     * 常量或类名的单词示例，在本例中为类名\r\n     * @see SeeCh'...; private $namespaces = ['\Error' => class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\Error'; private $name = 'Error' }]; private $includes = []; private $functions = []; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }]; private $typeContext = class phpDocumentor\Reflection\Types\Context { private $namespace = 'Error'; private $namespaceAliases = [] }; private $project = class phpDocumentor\Reflection\Php\Project { private $name = 'Untitled project'; private $rootNamespace = class phpDocumentor\Reflection\Php\Namespace_ { private $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\'; private $name = '' }; private $functions = []; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $metadata = [] }; private $files = ['tag/basic/abstract.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '25383ef3973570a805774c93039c30e6'; private $name = 'abstract.php'; private $path = 'tag/basic/abstract.php'; private $source = '<?php\r\n/**\r\n * 这是abstract的标签示例\r\n * \r\n * 如果类中有最少一个抽象方法的话，那么类应该被声明为抽象类\r\n * 但是生成的文档里面没有此类为抽象类的说明\r\n */\r\n\r\nabstract class AbstractClass\r\n{\r\n    /**\r\n    * 这是一个抽象方法a\r\n    *\r\n    * @abstract\r\n    */\r\n    abstract function abstractFunc1(){}\r\n\r\n    /**\r\n    * 这是一个普通的方法b\r\n    */\r\n    function abstractFunc2(){}\r\n\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\AbstractClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/author.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是author标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = 'd9e361a09ccde31989ccb20e88a67911'; private $name = 'author.php'; private $path = 'tag/basic/author.php'; private $source = '<?php\r\n/**\r\n * 这是author标签示例\r\n * \r\n * 此标签看起来没什么作用\r\n * 当前为page示例\r\n * 此标签可以用于任何需要标记的元素上\r\n * (global variable, include, constant, function, define, class, variable, method, page)\r\n * \r\n * @author honece <china_zhz@year.net>\r\n */\r\n/**\r\n * 当前为function示例\r\n * \r\n * 此函数可能由另一个作者编写\r\n * @author honece No.2\r\n */\r\nfunction authorFunc(){}'; private $namespaces = []; private $includes = []; private $functions = ['\authorFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/category.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '548c7434eede46236d937df49eb48948'; private $name = 'category.php'; private $path = 'tag/basic/category.php'; private $source = '<?php\r\n/**\r\n * 这是category的标签示例\r\n * \r\n * 这是声明类别的示例\r\n * 看起来没有什么作用\r\n * @category mycategory\r\n */\r\n\r\nfunction categoryFunc()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = []; private $includes = []; private $functions = ['\categoryFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/copyright.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '2b678c2b48219fe173c62f57864f2525'; private $name = 'copyright.php'; private $path = 'tag/basic/copyright.php'; private $source = '<?php\r\n/**\r\n * 这是copyright的标签示例\r\n * \r\n * 用来声明版权，看起来没什么作用\r\n * 当前为页面级文档块\r\n * @copyright Copyright (c) 2023, honece\r\n */\r\nfunction copyrightFunc(){}\r\n'; private $namespaces = []; private $includes = []; private $functions = ['\copyrightFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/deprecated.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '17d32066e871d9fc63297cfd57169977'; private $name = 'deprecated.php'; private $path = 'tag/basic/deprecated.php'; private $source = '<?php\r\n/**\r\n * 这是deprecated标签示例\r\n * \r\n * 当前为class级文档块，\r\n * 此标记可用于page级文档块之外的文档块\r\n */\r\nclass DeprecatedClass\r\n{\r\n    /**\r\n     * @deprecated <0.1.0> a方法自0.1.0版本已弃用\r\n     */\r\n    function deprecatedFunc(){}\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\DeprecatedClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/example.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '8bb87bb5e2cc319aae956131058b2c05'; private $name = 'example.php'; private $path = 'tag/basic/example.php'; private $source = '<?php\r\n/**\r\n* 这是example标签示例\r\n*\r\n* 这个标签应该弃用了，没看到作用\r\n* @example /tag/inline/example.php 这是此标签内联用法\r\n* @example example.php 此示例为当前目录文件\r\n*/\r\nfunction exampleFunc(){}'; private $namespaces = []; private $includes = []; private $functions = ['\exampleFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/filesource.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是filesource标签的示例代码'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = '6855239bc05bb284fa5bac07c3b0ae74'; private $name = 'filesource.php'; private $path = 'tag/basic/filesource.php'; private $source = '<?php\r\n/**\r\n * 这是filesource标签的示例代码\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 作用就是给当前文件创建一个链接并显示源代码\r\n * @filesource\r\n */\r\necho "filesource";'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/final.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'd5f20945a818b3c642fdab441d2ab021'; private $name = 'final.php'; private $path = 'tag/basic/final.php'; private $source = '<?php\r\n/**\r\n * 这是final标签的示例\r\n * 此标签已无效，作用就是字面意思\r\n */\r\n\r\nclass FinalClass\r\n{\r\n    /**\r\n     * @final\r\n     */\r\n    final function finalFunc()\r\n    {\r\n    }\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\FinalClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/global.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是global标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = '4d282567fbbd0bb8bd3806a7c8d48ac4'; private $name = 'global.php'; private $path = 'tag/basic/global.php'; private $source = '<?php\r\n/**\r\n * 这是global标签示例\r\n * \r\n * 这个标签应该弃用了，没看到作用\r\n * 主要用于记录全局变量的用法\r\n * 建议直接声明在定义全局变量的上一行，以免引发放在错误的作用域内不识别的错误\r\n */\r\n\r\n/** \r\n * @global mixed $_GLOBALS["myvar"] \r\n */\r\n$_GLOBALS["myvar"] = array("this" => \'工作正常\');\r\n\r\n\r\n\r\n/**\r\n * 将@name与@global一起使用的示例\r\n * 在@name标签中，name必须有$,否则将引发错误\r\n * @global array $GLOBALS[\'ne'...; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/ignore.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是ignore标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = 'b8c7f25d8710acdd4997bf8b9cf326f5'; private $name = 'ignore.php'; private $path = 'tag/basic/ignore.php'; private $source = '<?php\r\n/**\r\n * 这是ignore标签示例\r\n * \r\n * 这个标签应该被弃用了，没看到作用\r\n * 此标签用于组织phpdoc记录元素\r\n */\r\n\r\nif ($ostest) {\r\n    /**\r\n     * This define will either be \'Unix\' or \'Windows\'\r\n     */\r\n    define("OS", "Unix");\r\n}\r\nelse {\r\n    /**\r\n     * @ignore 这里是忽略的常量\r\n     */\r\n    define("OS", "Windows");\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = ['\OS' => class phpDocumentor\Reflection\Php\Constant { ... }]; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/internal.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '7c4ee7a472406e48a31b52a38228e7b8'; private $name = 'internal.php'; private $path = 'tag/basic/internal.php'; private $source = '<?php\r\n/**\r\n * 这是internal标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签可以生成两份文档，官方说是phpdoc最有用的功能之一\r\n * {@internal 要访问有关修改此类的指南,见 {@link http://www.baidu.com 指南},或联系你的主管}}}\r\n * @internal 该类使用私有方法 {@link _foo()} 和 {@link _bar()} 做一些事情\r\n */\r\n\r\nclass InternalClass\r\n{\r\n    private function _foo()\r\n    {\r\n    }\r\n    private function _bar()\r\n    {\r\n    }\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\InternalClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/license.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '614a33e8f17827aa988341b4f193b49f'; private $name = 'license.php'; private $path = 'tag/basic/license.php'; private $source = '<?php\r\n/**\r\n * 这是license标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n * 此标签用于向用户提示适用于此文档块的许可证\r\n * 展示指向许可证URL的超链接，个人只建议放在文件级别的文档块中\r\n * @license http://www.apache.org/licenses/LICENSE-2.0 Apache2.0\r\n */\r\n\r\nclass LicenseClass\r\n{\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\LicenseClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/link.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是link标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = '9c13e13e5c3217f8f2e974c4dfce67a5'; private $name = 'link.php'; private $path = 'tag/basic/link.php'; private $source = '<?php\r\n/**\r\n * 这是link标签示例\r\n * @link http://www.baidu.com 详情找百度\r\n */\r\n\r\n /**\r\n  * @link https://www.ietf.org/rfc/rfc2396.txt RFC2396\r\n  */\r\n define("TEST_CONSTANT2",3);\r\n'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = ['\TEST_CONSTANT2' => class phpDocumentor\Reflection\Php\Constant { ... }]; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/method.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '445eba76dd6b5f15c3fcc343ef10bcf9'; private $name = 'method.php'; private $path = 'tag/basic/method.php'; private $source = '<?php\r\n/**\r\n * 这是method标签示例\r\n * \r\n * 官方给出的定义是，要在子类中声明父类使用魔术方法来实现的一些非显示存在方法\r\n * \r\n * @method return echo2(string $string) 打印带有换行符的字符串\r\n */\r\nclass MethodClass extends Father{}\r\n\r\nclass Father\r\n{\r\n    function __call($method, string $params)\r\n    {\r\n        if ($method == \'echo2\') {\r\n            echo $params . PHP_EOL;\r\n        }\r\n    }\r\n}'; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\MethodClass' => class phpDocumentor\Reflection\Php\Class_ { ... }, '\Father' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/name.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是name标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = 'd9019fefa63635ac09f7bb2b6f7c6cba'; private $name = 'name.php'; private $path = 'tag/basic/name.php'; private $source = '<?php\r\n/**\r\n * 这是name标签示例\r\n * \r\n * 应该是我没用懂，但是没有效果\r\n */\r\n\r\n/**\r\n * 当在函数中使用@global时，它将链接到$baz\r\n * @global array $GLOBALS[\'baz\'] \r\n */\r\n$GLOBALS[\'baz\'] = array(\'foo\', \'bar\');\r\n\r\n/**\r\n * @global array used for stuff\r\n */\r\nfunction name()\r\n{\r\n    global $baz;\r\n}'; private $namespaces = []; private $includes = []; private $functions = ['\name()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/package.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是package标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = '9f03658e0d23226be1fcd8ca7f88ed8e'; private $name = 'package.php'; private $path = 'tag/basic/package.php'; private $source = '<?php\r\n/**\r\n * 这是package标签示例\r\n * \r\n * 页面级DocBlock示例。\r\n * 此DocBlock位于另一个DocBlock之前，将被解析为页面级别。\r\n * 将您的@package和@subpackage标记放在此处\r\n * @package packageTest\r\n */\r\n\r\n/**\r\n * function bluh\r\n */\r\nfunction bluh()\r\n{\r\n}\r\n?>\r\n<?php\r\n/**\r\n* 类 PackageClass\r\n*\r\n* 类级DocBlock示例。以下示例代表packageTestSub包在packageTest内,\r\n* 需要注意下划线[_]也会被解析成包分割符\r\n* @package packageTest\\packageTestSub \r\n*/'...; private $namespaces = []; private $includes = []; private $functions = ['\bluh()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = ['\PackageClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/param.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = class phpDocumentor\Reflection\DocBlock { private $summary = '这是param标签示例'; private $description = class phpDocumentor\Reflection\DocBlock\Description { ... }; private $tags = [...]; private $context = class phpDocumentor\Reflection\Types\Context { ... }; private $location = NULL; private $isTemplateStart = FALSE; private $isTemplateEnd = FALSE }; private $hash = '9b7e83cee7e212b7bdaabae8ecc456f4'; private $name = 'param.php'; private $path = 'tag/basic/param.php'; private $source = '<?php\r\n/**\r\n * 这是param标签示例\r\n * \r\n * 声明方法传入的参数\r\n */\r\n\r\n /**\r\n  * @param int $b 你需要传入一个整数型的变量\r\n  */\r\n function parmFunc(int $b){}'; private $namespaces = []; private $includes = []; private $functions = ['\parmFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/property.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = 'a1d1498b932fe0c2a140120d62e3411c'; private $name = 'property.php'; private $path = 'tag/basic/property.php'; private $source = '<?php\r\n/**\r\n * 这是property包括它的变体[property-read | property-write]标签示例\r\n *\r\n * @property mixed $regular 声明常规的读写属性\r\n * @property-read int $foo 声明只读\r\n * @property-write string $bar 声明只写\r\n */\r\n\r\nclass PropertyClass\r\n{\r\n    private $_thingy;\r\n    private $_bar;\r\n    function __get($var)\r\n    {\r\n        switch ($var) {\r\n            case \'foo\':\r\n                return 45;\r\n            case \'regular\':\r\n                return $this->_thingy;\r\n        }\r\n    }\r\n'...; private $namespaces = []; private $includes = []; private $functions = []; private $constants = []; private $classes = ['\PropertyClass' => class phpDocumentor\Reflection\Php\Class_ { ... }]; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }, 'tag/basic/return.php' => class phpDocumentor\Reflection\Php\File { private $docBlock = NULL; private $hash = '845265a10a560b5a5359f1882513c161'; private $name = 'return.php'; private $path = 'tag/basic/return.php'; private $source = '<?php\r\n/**\r\n * 这是return标签示例\r\n * \r\n * 这个标签用于标记方法或函数的返回值和返回内容\r\n * @return int 这里会返回一个整数类型的数字\r\n */\r\nfunction returnFunc($param)\r\n{\r\n    $b = (int) $param;\r\n    return $b;\r\n}'; private $namespaces = []; private $includes = []; private $functions = ['\returnFunc()' => class phpDocumentor\Reflection\Php\Function_ { ... }]; private $constants = []; private $classes = []; private $interfaces = []; private $traits = []; private $enums = []; private $metadata = [] }]; private $namespaces = [] } }, $object = class PhpParser\Node\Stmt\Class_ { public $flags = 0; public $extends = NULL; public $implements = []; public $name = class PhpParser\Node\Identifier { public $name = 'SeeFather'; protected $attributes = ['startLine' => 10, 'endLine' => 10] }; public $stmts = [0 => class PhpParser\Node\Stmt\Property { public $flags = 0; public $props = [0 => class PhpParser\Node\Stmt\PropertyProperty { public $name = class PhpParser\Node\VarLikeIdentifier { ... }; public $default = class PhpParser\Node\Scalar\LNumber { ... }; protected $attributes = [...]; public $fqsen = class phpDocumentor\Reflection\Fqsen { ... } }]; public $type = NULL; public $attrGroups = []; protected $attributes = ['startLine' => 16, 'comments' => [0 => class PhpParser\Comment\Doc { ... }], 'endLine' => 16] }, 1 => class PhpParser\Node\Stmt\ClassMethod { public $flags = 0; public $byRef = FALSE; public $name = class PhpParser\Node\Identifier { public $name = 'parent_method'; protected $attributes = ['startLine' => 24, 'endLine' => 24] }; public $params = []; public $returnType = NULL; public $stmts = [0 => class PhpParser\Node\Stmt\If_ { public $cond = class PhpParser\Node\Expr\BinaryOp\Equal { ... }; public $stmts = [...]; public $elseifs = [...]; public $else = NULL; protected $attributes = [...] }]; public $attrGroups = []; protected $attributes = ['startLine' => 24, 'comments' => [0 => class PhpParser\Comment\Doc { ... }], 'endLine' => 28]; public $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\Error\\SeeFather::parent_method()'; private $name = 'parent_method' } }]; public $attrGroups = []; protected $attributes = ['startLine' => 10, 'comments' => [0 => class PhpParser\Comment\Doc { protected $text = '/**\r\n * 这是return标签示例\r\n * \r\n * 此标签用于链接到文档内的任何元素，也可以给指定的{@see https://www.ietf.org/rfc/rfc2396.txt <URI>}\r\n * @see SeeChild->method()\r\n */'; protected $startLine = 4; protected $startFilePos = 27; protected $startTokenPos = 6; protected $endLine = 9; protected $endFilePos = 222; protected $endTokenPos = 6 }], 'endLine' => 29]; public $namespacedName = class PhpParser\Node\Name { public $parts = [0 => 'Error', 1 => 'SeeFather']; protected $attributes = [] }; public $fqsen = class phpDocumentor\Reflection\Fqsen { private $fqsen = '\\Error\\SeeFather'; private $name = 'SeeFather' } }, $strategies = class phpDocumentor\Reflection\Php\ProjectFactoryStrategies { private $strategies = class SplPriorityQueue {  } }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Php/Factory/AbstractFactory.php:59
    3.7890   23427728  43. phpDocumentor\Reflection\Php\Factory\AbstractFactory->createDocBlock($docBlock = class PhpParser\Comment\Doc { protected $text = '/**\r\n * 这是return标签示例\r\n * \r\n * 此标签用于链接到文档内的任何元素，也可以给指定的{@see https://www.ietf.org/rfc/rfc2396.txt <URI>}\r\n * @see SeeChild->method()\r\n */'; protected $startLine = 4; protected $startFilePos = 27; protected $startTokenPos = 6; protected $endLine = 9; protected $endFilePos = 222; protected $endTokenPos = 6 }, $context = class phpDocumentor\Reflection\Types\Context { private $namespace = 'Error'; private $namespaceAliases = [] }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Php/Factory/Class_.php:47
    3.7890   23427728  44. phpDocumentor\Reflection\DocBlockFactory->create($docblock = '/**\r\n * 这是return标签示例\r\n * \r\n * 此标签用于链接到文档内的任何元素，也可以给指定的{@see https://www.ietf.org/rfc/rfc2396.txt <URI>}\r\n * @see SeeChild->method()\r\n */', $context = class phpDocumentor\Reflection\Types\Context { private $namespace = 'Error'; private $namespaceAliases = [] }, $location = ???) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Php/Factory/AbstractFactory.php:78
    3.7928   23480136  45. phpDocumentor\Reflection\DocBlockFactory->parseTagBlock($tags = '\n@see SeeChild->method()', $context = class phpDocumentor\Reflection\Types\Context { private $namespace = 'Error'; private $namespaceAliases = [] }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection-docblock/src/DocBlockFactory.php:105
    3.7929   23480560  46. phpDocumentor\Reflection\DocBlock\StandardTagFactory->create($tagLine = '@see SeeChild->method()', $context = class phpDocumentor\Reflection\Types\Context { private $namespace = 'Error'; private $namespaceAliases = [] }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection-docblock/src/DocBlockFactory.php:245
    3.7930   23480688  47. phpDocumentor\Reflection\DocBlock\StandardTagFactory->createTag($body = 'SeeChild->method()', $name = 'see', $context = class phpDocumentor\Reflection\Types\Context { private $namespace = 'Error'; private $namespaceAliases = [] }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection-docblock/src/DocBlock/StandardTagFactory.php:149
    3.7935   23481440  48. phpDocumentor\Reflection\DocBlock\Tags\See::create($body = 'SeeChild->method()', $typeResolver = class phpDocumentor\Reflection\FqsenResolver {  }, $descriptionFactory = class phpDocumentor\Reflection\DocBlock\DescriptionFactory { private $tagFactory = class phpDocumentor\Reflection\DocBlock\StandardTagFactory { private $tagHandlerMappings = ['author' => 'phpDocumentor\\Reflection\\DocBlock\\Tags\\Author', 'covers' => 'phpDocumentor\\Reflection\\DocBlock\\Tags\\Covers', 'deprecated' => 'phpDocumentor\\Reflection\\DocBlock\\Tags\\Deprecated', 'link' => 'phpDocumentor\\Reflection\\DocBlock\\Tags\\Link', 'method' => 'phpDocumentor\\Reflection\\DocBlock\\Tags\\Method', 'param' => 'phpDocumentor\\Reflection\\DocBlock\\Tags\\Param', 'property-read' => 'phpDocumentor\\Reflection\\DocBlock\\Tags\\PropertyRead', 'property' => 'phpDocumentor\\Reflection\\DocBlock\\Tags\\Property', 'property-write' => 'phpDocumentor\\Reflection\\DocBlock\\Tags\\PropertyWrite', 'return' => 'phpDocumentor\\Reflection\\DocBlock\\Tags\\Return_', 'see' => 'phpDocumentor\\Reflection\\DocBlock\\Tags\\See', 'since' => 'phpDocumentor\\Reflection\\DocBlock\\Tags\\Since', 'source' => 'phpDocumentor\\Reflection\\DocBlock\\Tags\\Source', 'throw' => 'phpDocumentor\\Reflection\\DocBlock\\Tags\\Throws', 'throws' => 'phpDocumentor\\Reflection\\DocBlock\\Tags\\Throws', 'uses' => 'phpDocumentor\\Reflection\\DocBlock\\Tags\\Uses', 'var' => 'phpDocumentor\\Reflection\\DocBlock\\Tags\\Var_', 'version' => 'phpDocumentor\\Reflection\\DocBlock\\Tags\\Version']; private $annotationMappings = []; private $tagHandlerParameterCache = ['phpDocumentor\Reflection\DocBlock\Tags\Generic' => [0 => class ReflectionParameter { public $name = 'body' }, 1 => class ReflectionParameter { public $name = 'name' }, 2 => class ReflectionParameter { public $name = 'descriptionFactory' }, 3 => class ReflectionParameter { public $name = 'context' }], 'phpDocumentor\Reflection\DocBlock\Tags\Author' => [0 => class ReflectionParameter { public $name = 'body' }], 'phpDocumentor\Reflection\DocBlock\Tags\Deprecated' => [0 => class ReflectionParameter { public $name = 'body' }, 1 => class ReflectionParameter { public $name = 'descriptionFactory' }, 2 => class ReflectionParameter { public $name = 'context' }], 'phpDocumentor\Reflection\DocBlock\Tags\Link' => [0 => class ReflectionParameter { public $name = 'body' }, 1 => class ReflectionParameter { public $name = 'descriptionFactory' }, 2 => class ReflectionParameter { public $name = 'context' }], 'phpDocumentor\Reflection\DocBlock\Tags\Method' => [0 => class ReflectionParameter { public $name = 'body' }, 1 => class ReflectionParameter { public $name = 'typeResolver' }, 2 => class ReflectionParameter { public $name = 'descriptionFactory' }, 3 => class ReflectionParameter { public $name = 'context' }], 'phpDocumentor\Reflection\DocBlock\Tags\See' => [0 => class ReflectionParameter { public $name = 'body' }, 1 => class ReflectionParameter { public $name = 'typeResolver' }, 2 => class ReflectionParameter { public $name = 'descriptionFactory' }, 3 => class ReflectionParameter { public $name = 'context' }]]; private $fqsenResolver = class phpDocumentor\Reflection\FqsenResolver {  }; private $serviceLocator = ['phpDocumentor\Reflection\FqsenResolver' => class phpDocumentor\Reflection\FqsenResolver {  }, 'phpDocumentor\Reflection\DocBlock\DescriptionFactory' => ..., 'phpDocumentor\Reflection\TypeResolver' => class phpDocumentor\Reflection\TypeResolver { private $keywords = ['string' => 'phpDocumentor\\Reflection\\Types\\String_', 'class-string' => 'phpDocumentor\\Reflection\\Types\\ClassString', 'interface-string' => 'phpDocumentor\\Reflection\\Types\\InterfaceString', 'html-escaped-string' => 'phpDocumentor\\Reflection\\PseudoTypes\\HtmlEscapedString', 'lowercase-string' => 'phpDocumentor\\Reflection\\PseudoTypes\\LowercaseString', 'non-empty-lowercase-string' => 'phpDocumentor\\Reflection\\PseudoTypes\\NonEmptyLowercaseString', 'non-empty-string' => 'phpDocumentor\\Reflection\\PseudoTypes\\NonEmptyString', 'numeric-string' => 'phpDocumentor\\Reflection\\PseudoTypes\\NumericString', 'trait-string' => 'phpDocumentor\\Reflection\\PseudoTypes\\TraitString', 'int' => 'phpDocumentor\\Reflection\\Types\\Integer', 'integer' => 'phpDocumentor\\Reflection\\Types\\Integer', 'positive-int' => 'phpDocumentor\\Reflection\\PseudoTypes\\PositiveInteger', 'bool' => 'phpDocumentor\\Reflection\\Types\\Boolean', 'boolean' => 'phpDocumentor\\Reflection\\Types\\Boolean', 'real' => 'phpDocumentor\\Reflection\\Types\\Float_', 'float' => 'phpDocumentor\\Reflection\\Types\\Float_', 'double' => 'phpDocumentor\\Reflection\\Types\\Float_', 'object' => 'phpDocumentor\\Reflection\\Types\\Object_', 'mixed' => 'phpDocumentor\\Reflection\\Types\\Mixed_', 'array' => 'phpDocumentor\\Reflection\\Types\\Array_', 'array-key' => 'phpDocumentor\\Reflection\\Types\\ArrayKey', 'resource' => 'phpDocumentor\\Reflection\\Types\\Resource_', 'void' => 'phpDocumentor\\Reflection\\Types\\Void_', 'null' => 'phpDocumentor\\Reflection\\Types\\Null_', 'scalar' => 'phpDocumentor\\Reflection\\Types\\Scalar', 'callback' => 'phpDocumentor\\Reflection\\Types\\Callable_', 'callable' => 'phpDocumentor\\Reflection\\Types\\Callable_', 'callable-string' => 'phpDocumentor\\Reflection\\PseudoTypes\\CallableString', 'false' => 'phpDocumentor\\Reflection\\PseudoTypes\\False_', 'true' => 'phpDocumentor\\Reflection\\PseudoTypes\\True_', 'literal-string' => 'phpDocumentor\\Reflection\\PseudoTypes\\LiteralString', 'self' => 'phpDocumentor\\Reflection\\Types\\Self_', '$this' => 'phpDocumentor\\Reflection\\Types\\This', 'static' => 'phpDocumentor\\Reflection\\Types\\Static_', 'parent' => 'phpDocumentor\\Reflection\\Types\\Parent_', 'iterable' => 'phpDocumentor\\Reflection\\Types\\Iterable_', 'never' => 'phpDocumentor\\Reflection\\Types\\Never_']; private $fqsenResolver = class phpDocumentor\Reflection\FqsenResolver {  } }] } }, $context = class phpDocumentor\Reflection\Types\Context { private $namespace = 'Error'; private $namespaceAliases = [] }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection-docblock/src/DocBlock/StandardTagFactory.php:218
    3.7939   23481984  49. phpDocumentor\Reflection\DocBlock\Tags\See::resolveFqsen($parts = 'SeeChild->method()', $fqsenResolver = class phpDocumentor\Reflection\FqsenResolver {  }, $context = class phpDocumentor\Reflection\Types\Context { private $namespace = 'Error'; private $namespaceAliases = [] }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection-docblock/src/DocBlock/Tags/See.php:67
    3.7939   23482360  50. phpDocumentor\Reflection\FqsenResolver->resolve($fqsen = 'SeeChild->method()', $context = class phpDocumentor\Reflection\Types\Context { private $namespace = 'Error'; private $namespaceAliases = [] }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/reflection-docblock/src/DocBlock/Tags/See.php:74
    3.7940   23482360  51. phpDocumentor\Reflection\FqsenResolver->resolvePartialStructuralElementName($type = 'SeeChild->method()', $context = class phpDocumentor\Reflection\Types\Context { private $namespace = 'Error'; private $namespaceAliases = [] }) phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/type-resolver/src/FqsenResolver.php:43
    3.7941   23482904  52. phpDocumentor\Reflection\Fqsen->__construct($fqsen = '\\Error\\SeeChild->method()') phar://C:/Users/Administrator/.phive/phars/phpdocumentor-3.2.1.phar/vendor/phpdocumentor/type-resolver/src/FqsenResolver.php:73
";}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:5:"Error";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";N;s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:1:{s:22:"\Error\SeeFather::$foo";O:37:"phpDocumentor\Reflection\Php\Property":10:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:22:"\Error\SeeFather::$foo";s:36:" phpDocumentor\Reflection\Fqsen name";s:3:"foo";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:68:"链接到同一类的示例，输出<u>Father:：parent_method()</u>";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:42:"phpDocumentor\Reflection\DocBlock\Tags\See":3:{s:7:" * name";s:3:"see";s:9:" * refers";O:54:"phpDocumentor\Reflection\DocBlock\Tags\Reference\Fqsen":1:{s:61:" phpDocumentor\Reflection\DocBlock\Tags\Reference\Fqsen fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:22:"\Error\parent_method()";s:36:" phpDocumentor\Reflection\Fqsen name";s:13:"parent_method";}}s:14:" * description";N;}}s:42:" phpDocumentor\Reflection\DocBlock context";r:669;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:1:"3";s:45:" phpDocumentor\Reflection\Php\Property static";b:0;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:16;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;s:47:" phpDocumentor\Reflection\Php\Property readOnly";b:0;s:47:" phpDocumentor\Reflection\Php\Property metadata";a:0:{}}}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:1:{s:33:"\Error\SeeFather::parent_method()";O:35:"phpDocumentor\Reflection\Php\Method":10:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:79:"子类继承此方法。
常量或类名的单词示例，在本例中为类名";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:42:"phpDocumentor\Reflection\DocBlock\Tags\See":3:{s:7:" * name";s:3:"see";s:9:" * refers";O:54:"phpDocumentor\Reflection\DocBlock\Tags\Reference\Fqsen":1:{s:61:" phpDocumentor\Reflection\DocBlock\Tags\Reference\Fqsen fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:15:"\Error\SeeChild";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"SeeChild";}}s:14:" * description";N;}i:1;O:42:"phpDocumentor\Reflection\DocBlock\Tags\See":3:{s:7:" * name";s:3:"see";s:9:" * refers";O:54:"phpDocumentor\Reflection\DocBlock\Tags\Reference\Fqsen":1:{s:61:" phpDocumentor\Reflection\DocBlock\Tags\Reference\Fqsen fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:21:"\Error\SeeChild::$foo";s:36:" phpDocumentor\Reflection\Fqsen name";s:3:"foo";}}s:14:" * description";N;}}s:42:" phpDocumentor\Reflection\DocBlock context";r:669;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:33:"\Error\SeeFather::parent_method()";s:36:" phpDocumentor\Reflection\Fqsen name";s:13:"parent_method";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:24;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:10;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:45:" phpDocumentor\Reflection\Php\Class_ metadata";a:0:{}}s:15:"\Error\SeeChild";O:35:"phpDocumentor\Reflection\Php\Class_":12:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:15:"\Error\SeeChild";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"SeeChild";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:85:"这个类扩展了Father
链接到常量以及将多个元素放在同一行的示例";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:42:"phpDocumentor\Reflection\DocBlock\Tags\See":3:{s:7:" * name";s:3:"see";s:9:" * refers";O:54:"phpDocumentor\Reflection\DocBlock\Tags\Reference\Fqsen":1:{s:61:" phpDocumentor\Reflection\DocBlock\Tags\Reference\Fqsen fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:16:"\Error\SeeFather";s:36:" phpDocumentor\Reflection\Fqsen name";s:9:"SeeFather";}}s:14:" * description";N;}i:1;O:42:"phpDocumentor\Reflection\DocBlock\Tags\See":3:{s:7:" * name";s:3:"see";s:9:" * refers";O:54:"phpDocumentor\Reflection\DocBlock\Tags\Reference\Fqsen":1:{s:61:" phpDocumentor\Reflection\DocBlock\Tags\Reference\Fqsen fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:11:"\TEST_CONST";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"TEST_CONST";}}s:14:" * description";N;}}s:42:" phpDocumentor\Reflection\DocBlock context";r:669;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:16:"\Error\SeeFather";s:36:" phpDocumentor\Reflection\Fqsen name";s:9:"SeeFather";}s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:1:{s:21:"\Error\SeeChild::$foo";O:37:"phpDocumentor\Reflection\Php\Property":10:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:21:"\Error\SeeChild::$foo";s:36:" phpDocumentor\Reflection\Fqsen name";s:3:"foo";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:42:"查看在父类中的方法 {@link Father}";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:42:"phpDocumentor\Reflection\DocBlock\Tags\See":3:{s:7:" * name";s:3:"see";s:9:" * refers";O:54:"phpDocumentor\Reflection\DocBlock\Tags\Reference\Fqsen":1:{s:61:" phpDocumentor\Reflection\DocBlock\Tags\Reference\Fqsen fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:22:"\Error\parent_method()";s:36:" phpDocumentor\Reflection\Fqsen name";s:13:"parent_method";}}s:14:" * description";N;}}s:42:" phpDocumentor\Reflection\DocBlock context";r:669;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:1:"9";s:45:" phpDocumentor\Reflection\Php\Property static";b:0;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:42;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;s:47:" phpDocumentor\Reflection\Php\Property readOnly";b:0;s:47:" phpDocumentor\Reflection\Php\Property metadata";a:0:{}}}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:36;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:45:" phpDocumentor\Reflection\Php\Class_ metadata";a:0:{}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";